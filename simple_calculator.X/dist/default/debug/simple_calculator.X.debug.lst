

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Sep 19 01:47:24 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    48                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    50   000000                     
    51                           ; Generated 23/03/2023 GMT
    52                           ; 
    53                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution. Publication is not required when
    67                           ;        this file is used in an embedded application.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC18F4620 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85   000000                     
    86                           	psect	idataCOMRAM
    87   002730                     __pidataCOMRAM:
    88                           	callstack 0
    89                           
    90                           ;initializer for _lcd_1
    91   002730  02                 	db	2
    92   002731  0A                 	db	10
    93   002732  12                 	db	18
    94   002733  1A                 	db	26
    95   002734  22                 	db	34
    96   002735  2A                 	db	42
    97                           
    98                           	psect	idataBANK0
    99   0026CA                     __pidataBANK0:
   100                           	callstack 0
   101                           
   102                           ;initializer for _port_registers
   103   0026CA  80                 	db	128
   104   0026CB  0F                 	db	15
   105   0026CC  81                 	db	129
   106   0026CD  0F                 	db	15
   107   0026CE  82                 	db	130
   108   0026CF  0F                 	db	15
   109   0026D0  83                 	db	131
   110   0026D1  0F                 	db	15
   111   0026D2  84                 	db	132
   112   0026D3  0F                 	db	15
   113                           
   114                           ;initializer for _lat_registers
   115   0026D4  89                 	db	137
   116   0026D5  0F                 	db	15
   117   0026D6  8A                 	db	138
   118   0026D7  0F                 	db	15
   119   0026D8  8B                 	db	139
   120   0026D9  0F                 	db	15
   121   0026DA  8C                 	db	140
   122   0026DB  0F                 	db	15
   123   0026DC  8D                 	db	141
   124   0026DD  0F                 	db	15
   125                           
   126                           ;initializer for _tris_registers
   127   0026DE  92                 	db	146
   128   0026DF  0F                 	db	15
   129   0026E0  93                 	db	147
   130   0026E1  0F                 	db	15
   131   0026E2  94                 	db	148
   132   0026E3  0F                 	db	15
   133   0026E4  95                 	db	149
   134   0026E5  0F                 	db	15
   135   0026E6  96                 	db	150
   136   0026E7  0F                 	db	15
   137                           
   138                           ;initializer for _key_1
   139   0026E8  03                 	db	3
   140   0026E9  0B                 	db	11
   141   0026EA  13                 	db	19
   142   0026EB  1B                 	db	27
   143   0026EC  63                 	db	99
   144   0026ED  6B                 	db	107
   145   0026EE  73                 	db	115
   146   0026EF  7B                 	db	123
   147                           
   148                           	psect	smallconst
   149   001000                     __psmallconst:
   150                           	callstack 0
   151   001000  00                 	db	0
   152   001001                     _btn_value:
   153                           	callstack 0
   154   001001  37                 	db	55
   155   001002  38                 	db	56
   156   001003  39                 	db	57
   157   001004  2F                 	db	47
   158   001005  34                 	db	52
   159   001006  35                 	db	53
   160   001007  36                 	db	54
   161   001008  2A                 	db	42
   162   001009  31                 	db	49
   163   00100A  32                 	db	50
   164   00100B  33                 	db	51
   165   00100C  2D                 	db	45
   166   00100D  23                 	db	35
   167   00100E  30                 	db	48
   168   00100F  3D                 	db	61
   169   001010  2B                 	db	43
   170   001011                     __end_of_btn_value:
   171                           	callstack 0
   172   000000                     _PORTE	set	3972
   173   000000                     _PORTD	set	3971
   174   000000                     _PORTC	set	3970
   175   000000                     _PORTB	set	3969
   176   000000                     _PORTA	set	3968
   177   000000                     _LATA	set	3977
   178   000000                     _TRISA	set	3986
   179   000000                     _TRISE	set	3990
   180   000000                     _TRISD	set	3989
   181   000000                     _TRISC	set	3988
   182   000000                     _TRISB	set	3987
   183   000000                     _LATE	set	3981
   184   000000                     _LATD	set	3980
   185   000000                     _LATC	set	3979
   186   000000                     _LATB	set	3978
   187   001011                     STR_4:
   188   001011  53                 	db	83	;'S'
   189   001012  69                 	db	105	;'i'
   190   001013  6D                 	db	109	;'m'
   191   001014  70                 	db	112	;'p'
   192   001015  6C                 	db	108	;'l'
   193   001016  65                 	db	101	;'e'
   194   001017  20                 	db	32
   195   001018  43                 	db	67	;'C'
   196   001019  61                 	db	97	;'a'
   197   00101A  6C                 	db	108	;'l'
   198   00101B  63                 	db	99	;'c'
   199   00101C  75                 	db	117	;'u'
   200   00101D  6C                 	db	108	;'l'
   201   00101E  61                 	db	97	;'a'
   202   00101F  74                 	db	116	;'t'
   203   001020  6F                 	db	111	;'o'
   204   001021  72                 	db	114	;'r'
   205   001022  00                 	db	0
   206   001023                     STR_1:
   207   001023  25                 	db	37
   208   001024  69                 	db	105	;'i'
   209   001025  00                 	db	0
   210   001026  00                 	db	0	; dummy byte at the end
   211   000000                     
   212                           ; #config settings
   213                           
   214                           	psect	cinit
   215   0024A2                     __pcinit:
   216                           	callstack 0
   217   0024A2                     start_initialization:
   218                           	callstack 0
   219   0024A2                     __initialization:
   220                           	callstack 0
   221                           
   222                           ; Initialize objects allocated to BANK0 (38 bytes)
   223                           ; load TBLPTR registers with __pidataBANK0
   224   0024A2  0ECA               	movlw	low __pidataBANK0
   225   0024A4  6EF6               	movwf	tblptrl,c
   226   0024A6  0E26               	movlw	high __pidataBANK0
   227   0024A8  6EF7               	movwf	tblptrh,c
   228   0024AA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   229   0024AC  6EF8               	movwf	tblptru,c
   230   0024AE  EE00  F0AC         	lfsr	0,__pdataBANK0
   231   0024B2  EE10 F026          	lfsr	1,38
   232   0024B6                     copy_data0:
   233   0024B6  0009               	tblrd		*+
   234   0024B8  CFF5 FFEE          	movff	tablat,postinc0
   235   0024BC  50E5               	movf	postdec1,w,c
   236   0024BE  50E1               	movf	fsr1l,w,c
   237   0024C0  E1FA               	bnz	copy_data0
   238                           
   239                           ; Initialize objects allocated to COMRAM (6 bytes)
   240                           ; load TBLPTR registers with __pidataCOMRAM
   241   0024C2  0E30               	movlw	low __pidataCOMRAM
   242   0024C4  6EF6               	movwf	tblptrl,c
   243   0024C6  0E27               	movlw	high __pidataCOMRAM
   244   0024C8  6EF7               	movwf	tblptrh,c
   245   0024CA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   246   0024CC  6EF8               	movwf	tblptru,c
   247   0024CE  EE00  F077         	lfsr	0,__pdataCOMRAM
   248   0024D2  EE10 F006          	lfsr	1,6
   249   0024D6                     copy_data1:
   250   0024D6  0009               	tblrd		*+
   251   0024D8  CFF5 FFEE          	movff	tablat,postinc0
   252   0024DC  50E5               	movf	postdec1,w,c
   253   0024DE  50E1               	movf	fsr1l,w,c
   254   0024E0  E1FA               	bnz	copy_data1
   255                           
   256                           ; Clear objects allocated to BANK0 (44 bytes)
   257   0024E2  EE00  F080         	lfsr	0,__pbssBANK0
   258   0024E6  0E2C               	movlw	44
   259   0024E8                     clear_0:
   260   0024E8  6AEE               	clrf	postinc0,c
   261   0024EA  06E8               	decf	wreg,f,c
   262   0024EC  E1FD               	bnz	clear_0
   263                           
   264                           ; Clear objects allocated to COMRAM (20 bytes)
   265   0024EE  EE00  F063         	lfsr	0,__pbssCOMRAM
   266   0024F2  0E14               	movlw	20
   267   0024F4                     clear_1:
   268   0024F4  6AEE               	clrf	postinc0,c
   269   0024F6  06E8               	decf	wreg,f,c
   270   0024F8  E1FD               	bnz	clear_1
   271   0024FA                     end_of_initialization:
   272                           	callstack 0
   273   0024FA                     __end_of__initialization:
   274                           	callstack 0
   275   0024FA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   276   0024FC  6EF8               	movwf	tblptru,c
   277   0024FE  0100               	movlb	0
   278   002500  EF14  F008         	goto	_main	;jump to C main() function
   279                           
   280                           	psect	bssCOMRAM
   281   000063                     __pbssCOMRAM:
   282                           	callstack 0
   283   000063                     _width:
   284                           	callstack 0
   285   000063                     	ds	2
   286   000065                     _prec:
   287                           	callstack 0
   288   000065                     	ds	2
   289   000067                     _number2:
   290                           	callstack 0
   291   000067                     	ds	2
   292   000069                     _number1:
   293                           	callstack 0
   294   000069                     	ds	2
   295   00006B                     _flags:
   296                           	callstack 0
   297   00006B                     	ds	1
   298   00006C                     _counter:
   299                           	callstack 0
   300   00006C                     	ds	1
   301   00006D                     _operation:
   302                           	callstack 0
   303   00006D                     	ds	1
   304   00006E                     _SecondNumber:
   305                           	callstack 0
   306   00006E                     	ds	4
   307   000072                     _FirstNumber:
   308                           	callstack 0
   309   000072                     	ds	4
   310   000076                     _KeypadValue:
   311                           	callstack 0
   312   000076                     	ds	1
   313                           
   314                           	psect	dataCOMRAM
   315   000077                     __pdataCOMRAM:
   316                           	callstack 0
   317   000077                     _lcd_1:
   318                           	callstack 0
   319   000077                     	ds	6
   320                           
   321                           	psect	bssBANK0
   322   000080                     __pbssBANK0:
   323                           	callstack 0
   324   000080                     	ds	6
   325   000086                     _dbuf:
   326                           	callstack 0
   327   000086                     	ds	32
   328   0000A6                     _result:
   329                           	callstack 0
   330   0000A6                     	ds	6
   331                           
   332                           	psect	dataBANK0
   333   0000AC                     __pdataBANK0:
   334                           	callstack 0
   335   0000AC                     _port_registers:
   336                           	callstack 0
   337   0000AC                     	ds	10
   338   0000B6                     _lat_registers:
   339                           	callstack 0
   340   0000B6                     	ds	10
   341   0000C0                     _tris_registers:
   342                           	callstack 0
   343   0000C0                     	ds	10
   344   0000CA                     _key_1:
   345                           	callstack 0
   346   0000CA                     	ds	8
   347                           
   348                           	psect	cstackCOMRAM
   349   000001                     __pcstackCOMRAM:
   350                           	callstack 0
   351   000001                     ?___wmul:
   352                           	callstack 0
   353   000001                     ?___awdiv:
   354                           	callstack 0
   355   000001                     ?___awmod:
   356                           	callstack 0
   357   000001                     ?___lwdiv:
   358                           	callstack 0
   359   000001                     gpio_pin_direction_initialize@_pin_config:
   360                           	callstack 0
   361   000001                     gpio_pin_write_logic@_pin_config:
   362                           	callstack 0
   363   000001                     gpio_pin_read_logic@_pin_config:
   364                           	callstack 0
   365   000001                     clearDataArrays@arr:
   366                           	callstack 0
   367   000001                     ___wmul@multiplier:
   368                           	callstack 0
   369   000001                     ___awdiv@dividend:
   370                           	callstack 0
   371   000001                     ___awmod@dividend:
   372                           	callstack 0
   373   000001                     ___lwdiv@dividend:
   374                           	callstack 0
   375   000001                     memset@dest:
   376                           	callstack 0
   377   000001                     fputc@c:
   378                           	callstack 0
   379                           
   380                           ; 2 bytes @ 0x0
   381   000001                     	ds	2
   382   000003                     ??_gpio_pin_direction_initialize:
   383   000003                     gpio_pin_write_logic@logic:
   384                           	callstack 0
   385   000003                     clearDataArrays@size:
   386                           	callstack 0
   387   000003                     gpio_pin_read_logic@logic:
   388                           	callstack 0
   389   000003                     ___wmul@multiplicand:
   390                           	callstack 0
   391   000003                     ___awdiv@divisor:
   392                           	callstack 0
   393   000003                     ___awmod@divisor:
   394                           	callstack 0
   395   000003                     ___lwdiv@divisor:
   396                           	callstack 0
   397   000003                     memset@c:
   398                           	callstack 0
   399   000003                     fputc@fp:
   400                           	callstack 0
   401                           
   402                           ; 2 bytes @ 0x2
   403   000003                     	ds	1
   404   000004                     ??_gpio_pin_write_logic:
   405   000004                     clearDataArrays@i:
   406                           	callstack 0
   407                           
   408                           ; 1 bytes @ 0x3
   409   000004                     	ds	1
   410   000005                     ??_gpio_pin_read_logic:
   411   000005                     ??_fputc:
   412   000005                     ___awdiv@counter:
   413                           	callstack 0
   414   000005                     ___awmod@counter:
   415                           	callstack 0
   416   000005                     ___wmul@product:
   417                           	callstack 0
   418   000005                     ___lwdiv@quotient:
   419                           	callstack 0
   420   000005                     memset@n:
   421                           	callstack 0
   422                           
   423                           ; 2 bytes @ 0x4
   424   000005                     	ds	1
   425   000006                     ___awdiv@sign:
   426                           	callstack 0
   427   000006                     ___awmod@sign:
   428                           	callstack 0
   429                           
   430                           ; 1 bytes @ 0x5
   431   000006                     	ds	1
   432   000007                     ??_memset:
   433   000007                     ?_Number_return:
   434                           	callstack 0
   435   000007                     ?_abs:
   436                           	callstack 0
   437   000007                     ___lwdiv@counter:
   438                           	callstack 0
   439   000007                     Number_return@arr:
   440                           	callstack 0
   441   000007                     ___awdiv@quotient:
   442                           	callstack 0
   443   000007                     abs@a:
   444                           	callstack 0
   445                           
   446                           ; 2 bytes @ 0x6
   447   000007                     	ds	2
   448   000009                     ??_abs:
   449   000009                     gpio_pin_direction_initialize@ret:
   450                           	callstack 0
   451   000009                     Number_return@count:
   452                           	callstack 0
   453   000009                     memset@k:
   454                           	callstack 0
   455                           
   456                           ; 2 bytes @ 0x8
   457   000009                     	ds	1
   458   00000A                     ??_Number_return:
   459   00000A                     gpio_pin_write_logic@ret:
   460                           	callstack 0
   461   00000A                     gpio_pin_read_logic@ret:
   462                           	callstack 0
   463   00000A                     fputs@s:
   464                           	callstack 0
   465                           
   466                           ; 2 bytes @ 0x9
   467   00000A                     	ds	1
   468   00000B                     lcd_send_4bits@lcd:
   469                           	callstack 0
   470   00000B                     lcd_4bit_send_enable_signal@lcd:
   471                           	callstack 0
   472   00000B                     keypad_get_value@_keypad_obj:
   473                           	callstack 0
   474   00000B                     gpio_pin_initialize@_pin_config:
   475                           	callstack 0
   476   00000B                     memset@s:
   477                           	callstack 0
   478                           
   479                           ; 2 bytes @ 0xA
   480   00000B                     	ds	1
   481   00000C                     fputs@fp:
   482                           	callstack 0
   483                           
   484                           ; 2 bytes @ 0xB
   485   00000C                     	ds	1
   486   00000D                     ??_gpio_pin_initialize:
   487   00000D                     lcd_send_4bits@_data_command:
   488                           	callstack 0
   489   00000D                     lcd_4bit_send_enable_signal@ret:
   490                           	callstack 0
   491   00000D                     keypad_get_value@value:
   492                           	callstack 0
   493   00000D                     Number_return@num:
   494                           	callstack 0
   495                           
   496                           ; 2 bytes @ 0xC
   497   00000D                     	ds	1
   498   00000E                     lcd_send_4bits@ret:
   499                           	callstack 0
   500   00000E                     gpio_pin_initialize@ret:
   501                           	callstack 0
   502   00000E                     fputs@c:
   503                           	callstack 0
   504                           
   505                           ; 1 bytes @ 0xD
   506   00000E                     	ds	1
   507   00000F                     ??_keypad_get_value:
   508   00000F                     lcd_4bit_send_command@lcd:
   509                           	callstack 0
   510   00000F                     lcd_4bit_send_char_data@lcd:
   511                           	callstack 0
   512   00000F                     keypad_initialize@_keypad_obj:
   513                           	callstack 0
   514   00000F                     Number_return@i:
   515                           	callstack 0
   516   00000F                     fputs@i:
   517                           	callstack 0
   518                           
   519                           ; 2 bytes @ 0xE
   520   00000F                     	ds	2
   521   000011                     ??_keypad_initialize:
   522   000011                     lcd_4bit_send_command@command:
   523                           	callstack 0
   524   000011                     lcd_4bit_send_char_data@data:
   525                           	callstack 0
   526   000011                     keypad_get_value@ret:
   527                           	callstack 0
   528   000011                     pad@fp:
   529                           	callstack 0
   530                           
   531                           ; 2 bytes @ 0x10
   532   000011                     	ds	1
   533   000012                     lcd_4bit_send_command@ret:
   534                           	callstack 0
   535   000012                     lcd_4bit_send_char_data@ret:
   536                           	callstack 0
   537   000012                     keypad_get_value@column_logic:
   538                           	callstack 0
   539                           
   540                           ; 1 bytes @ 0x11
   541   000012                     	ds	1
   542   000013                     keypad_initialize@ret:
   543                           	callstack 0
   544   000013                     keypad_get_value@l_counter:
   545                           	callstack 0
   546   000013                     lcd_4bit_initialize@lcd:
   547                           	callstack 0
   548   000013                     lcd_4bit_set_cursor@lcd:
   549                           	callstack 0
   550   000013                     pad@buf:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0x12
   554   000013                     	ds	1
   555   000014                     keypad_initialize@rows_counter:
   556                           	callstack 0
   557   000014                     keypad_get_value@l_rows_counter:
   558                           	callstack 0
   559                           
   560                           ; 1 bytes @ 0x13
   561   000014                     	ds	1
   562   000015                     ??_lcd_4bit_initialize:
   563   000015                     lcd_4bit_set_cursor@row:
   564                           	callstack 0
   565   000015                     keypad_initialize@columns_counter:
   566                           	callstack 0
   567   000015                     keypad_get_value@l_columns_counter:
   568                           	callstack 0
   569   000015                     pad@p:
   570                           	callstack 0
   571                           
   572                           ; 2 bytes @ 0x14
   573   000015                     	ds	1
   574   000016                     lcd_4bit_set_cursor@coulmn:
   575                           	callstack 0
   576                           
   577                           ; 1 bytes @ 0x15
   578   000016                     	ds	1
   579   000017                     ??_lcd_4bit_set_cursor:
   580   000017                     ??_pad:
   581   000017                     lcd_4bit_initialize@l_data_pins_counter:
   582                           	callstack 0
   583                           
   584                           ; 1 bytes @ 0x16
   585   000017                     	ds	1
   586   000018                     lcd_4bit_initialize@ret:
   587                           	callstack 0
   588   000018                     pad@i:
   589                           	callstack 0
   590                           
   591                           ; 2 bytes @ 0x17
   592   000018                     	ds	1
   593   000019                     lcd_4bit_set_cursor@ret:
   594                           	callstack 0
   595                           
   596                           ; 1 bytes @ 0x18
   597   000019                     	ds	1
   598   00001A                     lcd_4bit_send_char_data_pos@lcd:
   599                           	callstack 0
   600   00001A                     lcd_4bit_send_string_pos@lcd:
   601                           	callstack 0
   602   00001A                     pad@w:
   603                           	callstack 0
   604                           
   605                           ; 2 bytes @ 0x19
   606   00001A                     	ds	2
   607   00001C                     lcd_4bit_send_char_data_pos@row:
   608                           	callstack 0
   609   00001C                     lcd_4bit_send_string_pos@row:
   610                           	callstack 0
   611   00001C                     dtoa@fp:
   612                           	callstack 0
   613                           
   614                           ; 2 bytes @ 0x1B
   615   00001C                     	ds	1
   616   00001D                     lcd_4bit_send_char_data_pos@col:
   617                           	callstack 0
   618   00001D                     lcd_4bit_send_string_pos@col:
   619                           	callstack 0
   620                           
   621                           ; 1 bytes @ 0x1C
   622   00001D                     	ds	1
   623   00001E                     lcd_4bit_send_char_data_pos@data:
   624                           	callstack 0
   625   00001E                     lcd_4bit_send_string_pos@str:
   626                           	callstack 0
   627   00001E                     dtoa@d:
   628                           	callstack 0
   629                           
   630                           ; 2 bytes @ 0x1D
   631   00001E                     	ds	1
   632   00001F                     lcd_4bit_send_char_data_pos@ret:
   633                           	callstack 0
   634                           
   635                           ; 1 bytes @ 0x1E
   636   00001F                     	ds	1
   637   000020                     lcd_4bit_send_string_pos@ret:
   638                           	callstack 0
   639   000020                     _dtoa$1101:
   640                           	callstack 0
   641                           
   642                           ; 2 bytes @ 0x1F
   643   000020                     	ds	2
   644   000022                     dtoa@p:
   645                           	callstack 0
   646                           
   647                           ; 2 bytes @ 0x21
   648   000022                     	ds	2
   649   000024                     dtoa@w:
   650                           	callstack 0
   651                           
   652                           ; 2 bytes @ 0x23
   653   000024                     	ds	2
   654   000026                     dtoa@i:
   655                           	callstack 0
   656                           
   657                           ; 2 bytes @ 0x25
   658   000026                     	ds	2
   659   000028                     dtoa@s:
   660                           	callstack 0
   661                           
   662                           ; 1 bytes @ 0x27
   663   000028                     	ds	1
   664   000029                     vfpfcnvrt@fp:
   665                           	callstack 0
   666                           
   667                           ; 2 bytes @ 0x28
   668   000029                     	ds	2
   669   00002B                     vfpfcnvrt@fmt:
   670                           	callstack 0
   671                           
   672                           ; 2 bytes @ 0x2A
   673   00002B                     	ds	2
   674   00002D                     vfpfcnvrt@ap:
   675                           	callstack 0
   676                           
   677                           ; 2 bytes @ 0x2C
   678   00002D                     	ds	2
   679   00002F                     ??_vfpfcnvrt:
   680                           
   681                           ; 1 bytes @ 0x2E
   682   00002F                     	ds	2
   683   000031                     vfpfcnvrt@convarg:
   684                           	callstack 0
   685                           
   686                           ; 4 bytes @ 0x30
   687   000031                     	ds	4
   688   000035                     vfpfcnvrt@cp:
   689                           	callstack 0
   690                           
   691                           ; 2 bytes @ 0x34
   692   000035                     	ds	2
   693   000037                     ?_vfprintf:
   694                           	callstack 0
   695   000037                     vfprintf@fp:
   696                           	callstack 0
   697                           
   698                           ; 2 bytes @ 0x36
   699   000037                     	ds	2
   700   000039                     vfprintf@fmt:
   701                           	callstack 0
   702                           
   703                           ; 2 bytes @ 0x38
   704   000039                     	ds	2
   705   00003B                     vfprintf@ap:
   706                           	callstack 0
   707                           
   708                           ; 2 bytes @ 0x3A
   709   00003B                     	ds	2
   710   00003D                     vfprintf@cfmt:
   711                           	callstack 0
   712                           
   713                           ; 2 bytes @ 0x3C
   714   00003D                     	ds	2
   715   00003F                     ?_sprintf:
   716                           	callstack 0
   717   00003F                     sprintf@s:
   718                           	callstack 0
   719                           
   720                           ; 2 bytes @ 0x3E
   721   00003F                     	ds	2
   722   000041                     sprintf@fmt:
   723                           	callstack 0
   724                           
   725                           ; 2 bytes @ 0x40
   726   000041                     	ds	4
   727   000045                     sprintf@ap:
   728                           	callstack 0
   729                           
   730                           ; 2 bytes @ 0x44
   731   000045                     	ds	2
   732   000047                     sprintf@f:
   733                           	callstack 0
   734                           
   735                           ; 12 bytes @ 0x46
   736   000047                     	ds	12
   737   000053                     convert_short_to_string@value:
   738                           	callstack 0
   739                           
   740                           ; 2 bytes @ 0x52
   741   000053                     	ds	2
   742   000055                     convert_short_to_string@str:
   743                           	callstack 0
   744                           
   745                           ; 2 bytes @ 0x54
   746   000055                     	ds	2
   747   000057                     convert_short_to_string@Temp_String:
   748                           	callstack 0
   749                           
   750                           ; 6 bytes @ 0x56
   751   000057                     	ds	6
   752   00005D                     convert_short_to_string@ret:
   753                           	callstack 0
   754                           
   755                           ; 1 bytes @ 0x5C
   756   00005D                     	ds	1
   757   00005E                     convert_short_to_string@DataCounter:
   758                           	callstack 0
   759                           
   760                           ; 1 bytes @ 0x5D
   761   00005E                     	ds	1
   762   00005F                     ??_main:
   763                           
   764                           ; 1 bytes @ 0x5E
   765   00005F                     	ds	2
   766   000061                     main@counter3:
   767                           	callstack 0
   768                           
   769                           ; 1 bytes @ 0x60
   770   000061                     	ds	1
   771   000062                     main@counter2:
   772                           	callstack 0
   773                           
   774                           ; 1 bytes @ 0x61
   775   000062                     	ds	1
   776                           
   777 ;;
   778 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   779 ;;
   780 ;; *************** function _main *****************
   781 ;; Defined at:
   782 ;;		line 96 in file "application.c"
   783 ;; Parameters:    Size  Location     Type
   784 ;;		None
   785 ;; Auto vars:     Size  Location     Type
   786 ;;  counter2        1   97[COMRAM] unsigned char 
   787 ;;  counter3        1   96[COMRAM] unsigned char 
   788 ;;  ret             1    0        unsigned char 
   789 ;; Return value:  Size  Location     Type
   790 ;;                  2  356[None  ] int 
   791 ;; Registers used:
   792 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   793 ;; Tracked objects:
   794 ;;		On entry : 0/0
   795 ;;		On exit  : 0/0
   796 ;;		Unchanged: 0/0
   797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   799 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   800 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   801 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   802 ;;Total ram usage:        4 bytes
   803 ;; Hardware stack levels required when called: 9
   804 ;; This function calls:
   805 ;;		_Number_return
   806 ;;		___lwdiv
   807 ;;		___wmul
   808 ;;		_app_initialize
   809 ;;		_clearDataArrays
   810 ;;		_convert_short_to_string
   811 ;;		_keypad_get_value
   812 ;;		_lcd_4bit_send_char_data_pos
   813 ;;		_lcd_4bit_send_command
   814 ;;		_lcd_4bit_send_string_pos
   815 ;; This function is called by:
   816 ;;		Startup code after reset
   817 ;; This function uses a non-reentrant model
   818 ;;
   819                           
   820                           	psect	text0
   821   001028                     __ptext0:
   822                           	callstack 0
   823   001028                     _main:
   824                           	callstack 22
   825   001028                     
   826                           ;application.c: 99:     app_initialize();
   827   001028  EC8B  F013         	call	_app_initialize	;wreg free
   828   00102C  0E77               	movlw	low _lcd_1
   829   00102E  6E1A               	movwf	lcd_4bit_send_string_pos@lcd^0,c
   830   001030  0E00               	movlw	high _lcd_1
   831   001032  6E1B               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
   832   001034  0E01               	movlw	1
   833   001036  6E1C               	movwf	lcd_4bit_send_string_pos@row^0,c
   834   001038  0E03               	movlw	3
   835   00103A  6E1D               	movwf	lcd_4bit_send_string_pos@col^0,c
   836   00103C  0E11               	movlw	low STR_4
   837   00103E  6E1E               	movwf	lcd_4bit_send_string_pos@str^0,c
   838   001040  0E10               	movlw	high STR_4
   839   001042  6E1F               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
   840   001044  EC2F  F010         	call	_lcd_4bit_send_string_pos	;wreg free
   841   001048                     
   842                           ;application.c: 102:     _delay((unsigned long)((2000)*(8000000UL/4000.0)));
   843   001048  0E15               	movlw	21
   844   00104A  6E60               	movwf	(??_main+1)^0,c
   845   00104C  0E4B               	movlw	75
   846   00104E  6E5F               	movwf	??_main^0,c
   847   001050  0EBE               	movlw	190
   848   001052                     u2457:
   849   001052  2EE8               	decfsz	wreg,f,c
   850   001054  D7FE               	bra	u2457
   851   001056  2E5F               	decfsz	??_main^0,f,c
   852   001058  D7FC               	bra	u2457
   853   00105A  2E60               	decfsz	(??_main+1)^0,f,c
   854   00105C  D7FA               	bra	u2457
   855   00105E  D000               	nop2	
   856   001060                     l3226:
   857   001060  0E77               	movlw	low _lcd_1
   858   001062  6E0F               	movwf	lcd_4bit_send_command@lcd^0,c
   859   001064  0E00               	movlw	high _lcd_1
   860   001066  6E10               	movwf	(lcd_4bit_send_command@lcd+1)^0,c
   861   001068  0E01               	movlw	1
   862   00106A  6E11               	movwf	lcd_4bit_send_command@command^0,c
   863   00106C  ECAE  F011         	call	_lcd_4bit_send_command	;wreg free
   864   001070                     
   865                           ;application.c: 109:         KeypadValue = '\0';
   866   001070  0E00               	movlw	0
   867   001072  6E76               	movwf	_KeypadValue^0,c
   868   001074                     
   869                           ;application.c: 111:         clearDataArrays(FirstNumber, 4);
   870   001074  0E72               	movlw	low _FirstNumber
   871   001076  6E01               	movwf	clearDataArrays@arr^0,c
   872   001078  0E00               	movlw	high _FirstNumber
   873   00107A  6E02               	movwf	(clearDataArrays@arr+1)^0,c
   874   00107C  0E04               	movlw	4
   875   00107E  6E03               	movwf	clearDataArrays@size^0,c
   876   001080  EC4F  F013         	call	_clearDataArrays	;wreg free
   877   001084                     
   878                           ;application.c: 112:         clearDataArrays(SecondNumber, 4);
   879   001084  0E6E               	movlw	low _SecondNumber
   880   001086  6E01               	movwf	clearDataArrays@arr^0,c
   881   001088  0E00               	movlw	high _SecondNumber
   882   00108A  6E02               	movwf	(clearDataArrays@arr+1)^0,c
   883   00108C  0E04               	movlw	4
   884   00108E  6E03               	movwf	clearDataArrays@size^0,c
   885   001090  EC4F  F013         	call	_clearDataArrays	;wreg free
   886   001094                     
   887                           ;application.c: 114:         operation = 0;
   888   001094  0E00               	movlw	0
   889   001096  6E6D               	movwf	_operation^0,c
   890   001098                     
   891                           ;application.c: 115:         counter = 0;
   892   001098  0E00               	movlw	0
   893   00109A  6E6C               	movwf	_counter^0,c
   894   00109C                     l3238:
   895   00109C  0ECA               	movlw	low _key_1
   896   00109E  6E0B               	movwf	keypad_get_value@_keypad_obj^0,c
   897   0010A0  0E00               	movlw	high _key_1
   898   0010A2  6E0C               	movwf	(keypad_get_value@_keypad_obj+1)^0,c
   899   0010A4  0E76               	movlw	low _KeypadValue
   900   0010A6  6E0D               	movwf	keypad_get_value@value^0,c
   901   0010A8  0E00               	movlw	high _KeypadValue
   902   0010AA  6E0E               	movwf	(keypad_get_value@value+1)^0,c
   903   0010AC  ECFC  F00C         	call	_keypad_get_value	;wreg free
   904   0010B0                     
   905                           ;application.c: 122:                 _delay((unsigned long)((200)*(8000000UL/4000.0)));
   906   0010B0  0E03               	movlw	3
   907   0010B2  6E60               	movwf	(??_main+1)^0,c
   908   0010B4  0E08               	movlw	8
   909   0010B6  6E5F               	movwf	??_main^0,c
   910   0010B8  0E77               	movlw	119
   911   0010BA                     u2467:
   912   0010BA  2EE8               	decfsz	wreg,f,c
   913   0010BC  D7FE               	bra	u2467
   914   0010BE  2E5F               	decfsz	??_main^0,f,c
   915   0010C0  D7FC               	bra	u2467
   916   0010C2  2E60               	decfsz	(??_main+1)^0,f,c
   917   0010C4  D7FA               	bra	u2467
   918   0010C6  F000               	nop	
   919   0010C8                     
   920                           ;application.c: 123:             }while(KeypadValue == '\0');
   921   0010C8  5076               	movf	_KeypadValue^0,w,c
   922   0010CA  B4D8               	btfsc	status,2,c
   923   0010CC  EF6A  F008         	goto	u2381
   924   0010D0  EF6C  F008         	goto	u2380
   925   0010D4                     u2381:
   926   0010D4  EF4E  F008         	goto	l3238
   927   0010D8                     u2380:
   928   0010D8                     
   929                           ;application.c: 125:             if(KeypadValue == '/' || KeypadValue == '*' || KeypadVa
      +                          lue == '-' || KeypadValue == '+'){
   930   0010D8  0E2F               	movlw	47
   931   0010DA  1876               	xorwf	_KeypadValue^0,w,c
   932   0010DC  B4D8               	btfsc	status,2,c
   933   0010DE  EF73  F008         	goto	u2391
   934   0010E2  EF75  F008         	goto	u2390
   935   0010E6                     u2391:
   936   0010E6  EF90  F008         	goto	l363
   937   0010EA                     u2390:
   938   0010EA  0E2A               	movlw	42
   939   0010EC  1876               	xorwf	_KeypadValue^0,w,c
   940   0010EE  B4D8               	btfsc	status,2,c
   941   0010F0  EF7C  F008         	goto	u2401
   942   0010F4  EF7E  F008         	goto	u2400
   943   0010F8                     u2401:
   944   0010F8  EF90  F008         	goto	l363
   945   0010FC                     u2400:
   946   0010FC  0E2D               	movlw	45
   947   0010FE  1876               	xorwf	_KeypadValue^0,w,c
   948   001100  B4D8               	btfsc	status,2,c
   949   001102  EF85  F008         	goto	u2411
   950   001106  EF87  F008         	goto	u2410
   951   00110A                     u2411:
   952   00110A  EF90  F008         	goto	l363
   953   00110E                     u2410:
   954   00110E  0E2B               	movlw	43
   955   001110  1876               	xorwf	_KeypadValue^0,w,c
   956   001112  A4D8               	btfss	status,2,c
   957   001114  EF8E  F008         	goto	u2421
   958   001118  EF90  F008         	goto	u2420
   959   00111C                     u2421:
   960   00111C  EFA2  F008         	goto	l3256
   961   001120                     u2420:
   962   001120                     l363:
   963                           
   964                           ;application.c: 126:                 operation = KeypadValue;
   965   001120  C076  F06D         	movff	_KeypadValue,_operation
   966   001124  0E77               	movlw	low _lcd_1
   967   001126  6E1A               	movwf	lcd_4bit_send_char_data_pos@lcd^0,c
   968   001128  0E00               	movlw	high _lcd_1
   969   00112A  6E1B               	movwf	(lcd_4bit_send_char_data_pos@lcd+1)^0,c
   970   00112C  0E01               	movlw	1
   971   00112E  6E1C               	movwf	lcd_4bit_send_char_data_pos@row^0,c
   972   001130  286C               	incf	_counter^0,w,c
   973   001132  6E1D               	movwf	lcd_4bit_send_char_data_pos@col^0,c
   974   001134  C076  F01E         	movff	_KeypadValue,lcd_4bit_send_char_data_pos@data
   975   001138  ECCF  F012         	call	_lcd_4bit_send_char_data_pos	;wreg free
   976   00113C                     
   977                           ;application.c: 128:                 KeypadValue = '\0';
   978   00113C  0E00               	movlw	0
   979   00113E  6E76               	movwf	_KeypadValue^0,c
   980                           
   981                           ;application.c: 129:                 break;
   982   001140  EFBB  F008         	goto	l3264
   983   001144                     l3256:
   984                           
   985                           ;application.c: 131:             FirstNumber[counter] = KeypadValue;
   986   001144  0E72               	movlw	low _FirstNumber
   987   001146  246C               	addwf	_counter^0,w,c
   988   001148  6ED9               	movwf	fsr2l,c
   989   00114A  6ADA               	clrf	fsr2h,c
   990   00114C  0E00               	movlw	high _FirstNumber
   991   00114E  22DA               	addwfc	fsr2h,f,c
   992   001150  C076  FFDF         	movff	_KeypadValue,indf2
   993   001154                     
   994                           ;application.c: 132:             counter++;
   995   001154  2A6C               	incf	_counter^0,f,c
   996   001156  0E77               	movlw	low _lcd_1
   997   001158  6E1A               	movwf	lcd_4bit_send_char_data_pos@lcd^0,c
   998   00115A  0E00               	movlw	high _lcd_1
   999   00115C  6E1B               	movwf	(lcd_4bit_send_char_data_pos@lcd+1)^0,c
  1000   00115E  0E01               	movlw	1
  1001   001160  6E1C               	movwf	lcd_4bit_send_char_data_pos@row^0,c
  1002   001162  C06C  F01D         	movff	_counter,lcd_4bit_send_char_data_pos@col
  1003   001166  C076  F01E         	movff	_KeypadValue,lcd_4bit_send_char_data_pos@data
  1004   00116A  ECCF  F012         	call	_lcd_4bit_send_char_data_pos	;wreg free
  1005   00116E                     
  1006                           ;application.c: 134:             KeypadValue = '\0';
  1007   00116E  0E00               	movlw	0
  1008   001170  6E76               	movwf	_KeypadValue^0,c
  1009   001172  EF4E  F008         	goto	l3238
  1010   001176                     l3264:
  1011                           
  1012                           ;application.c: 139:         uint8 counter2 = counter + 1;
  1013   001176  286C               	incf	_counter^0,w,c
  1014   001178  6E62               	movwf	main@counter2^0,c
  1015   00117A                     
  1016                           ;application.c: 140:         uint8 counter3 = 0;
  1017   00117A  0E00               	movlw	0
  1018   00117C  6E61               	movwf	main@counter3^0,c
  1019   00117E                     l3268:
  1020   00117E  0ECA               	movlw	low _key_1
  1021   001180  6E0B               	movwf	keypad_get_value@_keypad_obj^0,c
  1022   001182  0E00               	movlw	high _key_1
  1023   001184  6E0C               	movwf	(keypad_get_value@_keypad_obj+1)^0,c
  1024   001186  0E76               	movlw	low _KeypadValue
  1025   001188  6E0D               	movwf	keypad_get_value@value^0,c
  1026   00118A  0E00               	movlw	high _KeypadValue
  1027   00118C  6E0E               	movwf	(keypad_get_value@value+1)^0,c
  1028   00118E  ECFC  F00C         	call	_keypad_get_value	;wreg free
  1029   001192                     
  1030                           ;application.c: 144:                 _delay((unsigned long)((200)*(8000000UL/4000.0)));
  1031   001192  0E03               	movlw	3
  1032   001194  6E60               	movwf	(??_main+1)^0,c
  1033   001196  0E08               	movlw	8
  1034   001198  6E5F               	movwf	??_main^0,c
  1035   00119A  0E77               	movlw	119
  1036   00119C                     u2477:
  1037   00119C  2EE8               	decfsz	wreg,f,c
  1038   00119E  D7FE               	bra	u2477
  1039   0011A0  2E5F               	decfsz	??_main^0,f,c
  1040   0011A2  D7FC               	bra	u2477
  1041   0011A4  2E60               	decfsz	(??_main+1)^0,f,c
  1042   0011A6  D7FA               	bra	u2477
  1043   0011A8  F000               	nop	
  1044   0011AA                     
  1045                           ;application.c: 145:             }while(KeypadValue == '\0');
  1046   0011AA  5076               	movf	_KeypadValue^0,w,c
  1047   0011AC  B4D8               	btfsc	status,2,c
  1048   0011AE  EFDB  F008         	goto	u2431
  1049   0011B2  EFDD  F008         	goto	u2430
  1050   0011B6                     u2431:
  1051   0011B6  EFBF  F008         	goto	l3268
  1052   0011BA                     u2430:
  1053   0011BA                     
  1054                           ;application.c: 147:             if(KeypadValue == '='){
  1055   0011BA  0E3D               	movlw	61
  1056   0011BC  1876               	xorwf	_KeypadValue^0,w,c
  1057   0011BE  A4D8               	btfss	status,2,c
  1058   0011C0  EFE4  F008         	goto	u2441
  1059   0011C4  EFE6  F008         	goto	u2440
  1060   0011C8                     u2441:
  1061   0011C8  EFF6  F008         	goto	l3280
  1062   0011CC                     u2440:
  1063   0011CC  0E77               	movlw	low _lcd_1
  1064   0011CE  6E1A               	movwf	lcd_4bit_send_char_data_pos@lcd^0,c
  1065   0011D0  0E00               	movlw	high _lcd_1
  1066   0011D2  6E1B               	movwf	(lcd_4bit_send_char_data_pos@lcd+1)^0,c
  1067   0011D4  0E01               	movlw	1
  1068   0011D6  6E1C               	movwf	lcd_4bit_send_char_data_pos@row^0,c
  1069   0011D8  2862               	incf	main@counter2^0,w,c
  1070   0011DA  6E1D               	movwf	lcd_4bit_send_char_data_pos@col^0,c
  1071   0011DC  C076  F01E         	movff	_KeypadValue,lcd_4bit_send_char_data_pos@data
  1072   0011E0  ECCF  F012         	call	_lcd_4bit_send_char_data_pos	;wreg free
  1073   0011E4                     
  1074                           ;application.c: 149:                 KeypadValue = '\0';
  1075   0011E4  0E00               	movlw	0
  1076   0011E6  6E76               	movwf	_KeypadValue^0,c
  1077                           
  1078                           ;application.c: 150:                 break;
  1079   0011E8  EF10  F009         	goto	l3290
  1080   0011EC                     l3280:
  1081                           
  1082                           ;application.c: 153:             SecondNumber[counter3] = KeypadValue;
  1083   0011EC  0E6E               	movlw	low _SecondNumber
  1084   0011EE  2461               	addwf	main@counter3^0,w,c
  1085   0011F0  6ED9               	movwf	fsr2l,c
  1086   0011F2  6ADA               	clrf	fsr2h,c
  1087   0011F4  0E00               	movlw	high _SecondNumber
  1088   0011F6  22DA               	addwfc	fsr2h,f,c
  1089   0011F8  C076  FFDF         	movff	_KeypadValue,indf2
  1090   0011FC                     
  1091                           ;application.c: 154:             counter2++;
  1092   0011FC  2A62               	incf	main@counter2^0,f,c
  1093   0011FE                     
  1094                           ;application.c: 155:             counter3++;
  1095   0011FE  2A61               	incf	main@counter3^0,f,c
  1096   001200  0E77               	movlw	low _lcd_1
  1097   001202  6E1A               	movwf	lcd_4bit_send_char_data_pos@lcd^0,c
  1098   001204  0E00               	movlw	high _lcd_1
  1099   001206  6E1B               	movwf	(lcd_4bit_send_char_data_pos@lcd+1)^0,c
  1100   001208  0E01               	movlw	1
  1101   00120A  6E1C               	movwf	lcd_4bit_send_char_data_pos@row^0,c
  1102   00120C  C062  F01D         	movff	main@counter2,lcd_4bit_send_char_data_pos@col
  1103   001210  C076  F01E         	movff	_KeypadValue,lcd_4bit_send_char_data_pos@data
  1104   001214  ECCF  F012         	call	_lcd_4bit_send_char_data_pos	;wreg free
  1105   001218                     
  1106                           ;application.c: 157:             KeypadValue = '\0';
  1107   001218  0E00               	movlw	0
  1108   00121A  6E76               	movwf	_KeypadValue^0,c
  1109   00121C  EFBF  F008         	goto	l3268
  1110   001220                     l3290:
  1111                           
  1112                           ;application.c: 161:         number1 = Number_return(FirstNumber, counter);
  1113   001220  0E72               	movlw	low _FirstNumber
  1114   001222  6E07               	movwf	Number_return@arr^0,c
  1115   001224  0E00               	movlw	high _FirstNumber
  1116   001226  6E08               	movwf	(Number_return@arr+1)^0,c
  1117   001228  C06C  F009         	movff	_counter,Number_return@count
  1118   00122C  ECBF  F010         	call	_Number_return	;wreg free
  1119   001230  C007  F069         	movff	?_Number_return,_number1
  1120   001234  C008  F06A         	movff	?_Number_return+1,_number1+1
  1121                           
  1122                           ;application.c: 162:         number2 = Number_return(SecondNumber, counter3);
  1123   001238  0E6E               	movlw	low _SecondNumber
  1124   00123A  6E07               	movwf	Number_return@arr^0,c
  1125   00123C  0E00               	movlw	high _SecondNumber
  1126   00123E  6E08               	movwf	(Number_return@arr+1)^0,c
  1127   001240  C061  F009         	movff	main@counter3,Number_return@count
  1128   001244  ECBF  F010         	call	_Number_return	;wreg free
  1129   001248  C007  F067         	movff	?_Number_return,_number2
  1130   00124C  C008  F068         	movff	?_Number_return+1,_number2+1
  1131                           
  1132                           ;application.c: 165:         switch(operation){
  1133   001250  EF72  F009         	goto	l3302
  1134   001254                     l3292:
  1135   001254  C069  F001         	movff	_number1,___lwdiv@dividend
  1136   001258  C06A  F002         	movff	_number1+1,___lwdiv@dividend+1
  1137   00125C  C067  F003         	movff	_number2,___lwdiv@divisor
  1138   001260  C068  F004         	movff	_number2+1,___lwdiv@divisor+1
  1139   001264  EC3B  F011         	call	___lwdiv	;wreg free
  1140   001268  C001  F053         	movff	?___lwdiv,convert_short_to_string@value
  1141   00126C  C002  F054         	movff	?___lwdiv+1,convert_short_to_string@value+1
  1142   001270  0EA6               	movlw	low _result
  1143   001272  6E55               	movwf	convert_short_to_string@str^0,c
  1144   001274  0E00               	movlw	high _result
  1145   001276  6E56               	movwf	(convert_short_to_string@str+1)^0,c
  1146   001278  EC28  F00F         	call	_convert_short_to_string	;wreg free
  1147                           
  1148                           ;application.c: 168:                 break;
  1149   00127C  EF8F  F009         	goto	l3304
  1150   001280                     l3294:
  1151   001280  C069  F001         	movff	_number1,___wmul@multiplier
  1152   001284  C06A  F002         	movff	_number1+1,___wmul@multiplier+1
  1153   001288  C067  F003         	movff	_number2,___wmul@multiplicand
  1154   00128C  C068  F004         	movff	_number2+1,___wmul@multiplicand+1
  1155   001290  EC78  F013         	call	___wmul	;wreg free
  1156   001294  C001  F053         	movff	?___wmul,convert_short_to_string@value
  1157   001298  C002  F054         	movff	?___wmul+1,convert_short_to_string@value+1
  1158   00129C  0EA6               	movlw	low _result
  1159   00129E  6E55               	movwf	convert_short_to_string@str^0,c
  1160   0012A0  0E00               	movlw	high _result
  1161   0012A2  6E56               	movwf	(convert_short_to_string@str+1)^0,c
  1162   0012A4  EC28  F00F         	call	_convert_short_to_string	;wreg free
  1163                           
  1164                           ;application.c: 171:                 break;
  1165   0012A8  EF8F  F009         	goto	l3304
  1166   0012AC                     l3296:
  1167   0012AC  5067               	movf	_number2^0,w,c
  1168   0012AE  5C69               	subwf	_number1^0,w,c
  1169   0012B0  6E53               	movwf	convert_short_to_string@value^0,c
  1170   0012B2  5068               	movf	(_number2+1)^0,w,c
  1171   0012B4  586A               	subwfb	(_number1+1)^0,w,c
  1172   0012B6  6E54               	movwf	(convert_short_to_string@value+1)^0,c
  1173   0012B8  0EA6               	movlw	low _result
  1174   0012BA  6E55               	movwf	convert_short_to_string@str^0,c
  1175   0012BC  0E00               	movlw	high _result
  1176   0012BE  6E56               	movwf	(convert_short_to_string@str+1)^0,c
  1177   0012C0  EC28  F00F         	call	_convert_short_to_string	;wreg free
  1178                           
  1179                           ;application.c: 174:                 break;
  1180   0012C4  EF8F  F009         	goto	l3304
  1181   0012C8                     l3298:
  1182   0012C8  5067               	movf	_number2^0,w,c
  1183   0012CA  2469               	addwf	_number1^0,w,c
  1184   0012CC  6E53               	movwf	convert_short_to_string@value^0,c
  1185   0012CE  5068               	movf	(_number2+1)^0,w,c
  1186   0012D0  206A               	addwfc	(_number1+1)^0,w,c
  1187   0012D2  6E54               	movwf	(convert_short_to_string@value+1)^0,c
  1188   0012D4  0EA6               	movlw	low _result
  1189   0012D6  6E55               	movwf	convert_short_to_string@str^0,c
  1190   0012D8  0E00               	movlw	high _result
  1191   0012DA  6E56               	movwf	(convert_short_to_string@str+1)^0,c
  1192   0012DC  EC28  F00F         	call	_convert_short_to_string	;wreg free
  1193                           
  1194                           ;application.c: 177:                 break;
  1195   0012E0  EF8F  F009         	goto	l3304
  1196   0012E4                     l3302:
  1197   0012E4  506D               	movf	_operation^0,w,c
  1198   0012E6  6E5F               	movwf	??_main^0,c
  1199   0012E8  6A60               	clrf	(??_main+1)^0,c
  1200                           
  1201                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1202                           ; Switch size 1, requested type "simple"
  1203                           ; Number of cases is 1, Range of values is 0 to 0
  1204                           ; switch strategies available:
  1205                           ; Name         Instructions Cycles
  1206                           ; simple_byte            4     3 (average)
  1207                           ;	Chosen strategy is simple_byte
  1208   0012EA  5060               	movf	(??_main+1)^0,w,c
  1209   0012EC  0A00               	xorlw	0	; case 0
  1210   0012EE  B4D8               	btfsc	status,2,c
  1211   0012F0  EF7C  F009         	goto	l3394
  1212   0012F4  EF8F  F009         	goto	l3304
  1213   0012F8                     l3394:
  1214                           
  1215                           ; Switch size 1, requested type "simple"
  1216                           ; Number of cases is 4, Range of values is 42 to 47
  1217                           ; switch strategies available:
  1218                           ; Name         Instructions Cycles
  1219                           ; simple_byte           13     7 (average)
  1220                           ;	Chosen strategy is simple_byte
  1221   0012F8  505F               	movf	??_main^0,w,c
  1222   0012FA  0A2A               	xorlw	42	; case 42
  1223   0012FC  B4D8               	btfsc	status,2,c
  1224   0012FE  EF40  F009         	goto	l3294
  1225   001302  0A01               	xorlw	1	; case 43
  1226   001304  B4D8               	btfsc	status,2,c
  1227   001306  EF64  F009         	goto	l3298
  1228   00130A  0A06               	xorlw	6	; case 45
  1229   00130C  B4D8               	btfsc	status,2,c
  1230   00130E  EF56  F009         	goto	l3296
  1231   001312  0A02               	xorlw	2	; case 47
  1232   001314  B4D8               	btfsc	status,2,c
  1233   001316  EF2A  F009         	goto	l3292
  1234   00131A  EF8F  F009         	goto	l3304
  1235   00131E                     l3304:
  1236   00131E  0E77               	movlw	low _lcd_1
  1237   001320  6E1A               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1238   001322  0E00               	movlw	high _lcd_1
  1239   001324  6E1B               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
  1240   001326  0E01               	movlw	1
  1241   001328  6E1C               	movwf	lcd_4bit_send_string_pos@row^0,c
  1242   00132A  5062               	movf	main@counter2^0,w,c
  1243   00132C  0F03               	addlw	3
  1244   00132E  6E1D               	movwf	lcd_4bit_send_string_pos@col^0,c
  1245   001330  0EA6               	movlw	low _result
  1246   001332  6E1E               	movwf	lcd_4bit_send_string_pos@str^0,c
  1247   001334  0E00               	movlw	high _result
  1248   001336  6E1F               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1249   001338  EC2F  F010         	call	_lcd_4bit_send_string_pos	;wreg free
  1250   00133C                     
  1251                           ;application.c: 184:         _delay((unsigned long)((3000)*(8000000UL/4000.0)));
  1252   00133C  0E1F               	movlw	31
  1253   00133E  6E60               	movwf	(??_main+1)^0,c
  1254   001340  0E71               	movlw	113
  1255   001342  6E5F               	movwf	??_main^0,c
  1256   001344  0E1E               	movlw	30
  1257   001346                     u2487:
  1258   001346  2EE8               	decfsz	wreg,f,c
  1259   001348  D7FE               	bra	u2487
  1260   00134A  2E5F               	decfsz	??_main^0,f,c
  1261   00134C  D7FC               	bra	u2487
  1262   00134E  2E60               	decfsz	(??_main+1)^0,f,c
  1263   001350  D7FA               	bra	u2487
  1264   001352  D000               	nop2	
  1265   001354  EF30  F008         	goto	l3226
  1266   001358  EF00  F000         	goto	start
  1267   00135C                     __end_of_main:
  1268                           	callstack 0
  1269                           
  1270 ;; *************** function _lcd_4bit_send_string_pos *****************
  1271 ;; Defined at:
  1272 ;;		line 114 in file "ECU/Chr_LCD/ecu_chr_lcd.c"
  1273 ;; Parameters:    Size  Location     Type
  1274 ;;  lcd             2   25[COMRAM] PTR const struct .
  1275 ;;		 -> lcd_1(6), 
  1276 ;;  row             1   27[COMRAM] unsigned char 
  1277 ;;  col             1   28[COMRAM] unsigned char 
  1278 ;;  str             2   29[COMRAM] PTR unsigned char 
  1279 ;;		 -> result(6), STR_4(18), 
  1280 ;; Auto vars:     Size  Location     Type
  1281 ;;  ret             1   31[COMRAM] unsigned char 
  1282 ;; Return value:  Size  Location     Type
  1283 ;;                  1    wreg      unsigned char 
  1284 ;; Registers used:
  1285 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1286 ;; Tracked objects:
  1287 ;;		On entry : 0/0
  1288 ;;		On exit  : 0/0
  1289 ;;		Unchanged: 0/0
  1290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1291 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1292 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1294 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1295 ;;Total ram usage:        7 bytes
  1296 ;; Hardware stack levels used: 1
  1297 ;; Hardware stack levels required when called: 4
  1298 ;; This function calls:
  1299 ;;		_lcd_4bit_send_char_data
  1300 ;;		_lcd_4bit_set_cursor
  1301 ;; This function is called by:
  1302 ;;		_main
  1303 ;; This function uses a non-reentrant model
  1304 ;;
  1305                           
  1306                           	psect	text1
  1307   00205E                     __ptext1:
  1308                           	callstack 0
  1309   00205E                     _lcd_4bit_send_string_pos:
  1310                           	callstack 26
  1311   00205E                     
  1312                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 117:     if(((void*)0) == lcd){
  1313   00205E  501A               	movf	lcd_4bit_send_string_pos@lcd^0,w,c
  1314   002060  101B               	iorwf	(lcd_4bit_send_string_pos@lcd+1)^0,w,c
  1315   002062  A4D8               	btfss	status,2,c
  1316   002064  EF36  F010         	goto	u1891
  1317   002068  EF38  F010         	goto	u1890
  1318   00206C                     u1891:
  1319   00206C  EF3C  F010         	goto	l2794
  1320   002070                     u1890:
  1321   002070                     
  1322                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 118:         ret = (Std_ReturnType)0x00;
  1323   002070  0E00               	movlw	0
  1324   002072  6E20               	movwf	lcd_4bit_send_string_pos@ret^0,c
  1325                           
  1326                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 119:     }
  1327   002074  EF7D  F010         	goto	l2802
  1328   002078                     l2794:
  1329                           
  1330                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 121:         ret = lcd_4bit_set_cursor(lcd, row, col);
  1331   002078  C01A  F013         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_set_cursor@lcd
  1332   00207C  C01B  F014         	movff	lcd_4bit_send_string_pos@lcd+1,lcd_4bit_set_cursor@lcd+1
  1333   002080  C01C  F015         	movff	lcd_4bit_send_string_pos@row,lcd_4bit_set_cursor@row
  1334   002084  C01D  F016         	movff	lcd_4bit_send_string_pos@col,lcd_4bit_set_cursor@coulmn
  1335   002088  ECDB  F00F         	call	_lcd_4bit_set_cursor	;wreg free
  1336   00208C  6E20               	movwf	lcd_4bit_send_string_pos@ret^0,c
  1337                           
  1338                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 122:         while(*str){
  1339   00208E  EF64  F010         	goto	l2800
  1340   002092                     l2796:
  1341                           
  1342                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 123:             ret = lcd_4bit_send_char_data(lcd, *str++);
  1343   002092  C01A  F00F         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_send_char_data@lcd
  1344   002096  C01B  F010         	movff	lcd_4bit_send_string_pos@lcd+1,lcd_4bit_send_char_data@lcd+1
  1345   00209A  C01E  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
  1346   00209E  C01F  FFF7         	movff	lcd_4bit_send_string_pos@str+1,tblptrh
  1347   0020A2  0E00               	movlw	low (__smallconst shr (0+16))
  1348   0020A4  6EF8               	movwf	tblptru,c
  1349   0020A6  0E0F               	movlw	(high __ramtop+-1)
  1350   0020A8  64F7               	cpfsgt	tblptrh,c
  1351   0020AA  D003               	bra	u1907
  1352   0020AC  0008               	tblrd		*
  1353   0020AE  50F5               	movf	tablat,w,c
  1354   0020B0  D005               	bra	u1900
  1355   0020B2                     u1907:
  1356   0020B2  CFF6 FFE9          	movff	tblptrl,fsr0l
  1357   0020B6  CFF7 FFEA          	movff	tblptrh,fsr0h
  1358   0020BA  50EF               	movf	indf0,w,c
  1359   0020BC                     u1900:
  1360   0020BC  6E11               	movwf	lcd_4bit_send_char_data@data^0,c
  1361   0020BE  EC75  F011         	call	_lcd_4bit_send_char_data	;wreg free
  1362   0020C2  6E20               	movwf	lcd_4bit_send_string_pos@ret^0,c
  1363   0020C4  4A1E               	infsnz	lcd_4bit_send_string_pos@str^0,f,c
  1364   0020C6  2A1F               	incf	(lcd_4bit_send_string_pos@str+1)^0,f,c
  1365   0020C8                     l2800:
  1366                           
  1367                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 122:         while(*str){
  1368   0020C8  C01E  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
  1369   0020CC  C01F  FFF7         	movff	lcd_4bit_send_string_pos@str+1,tblptrh
  1370   0020D0  0E00               	movlw	low (__smallconst shr (0+16))
  1371   0020D2  6EF8               	movwf	tblptru,c
  1372   0020D4  0E0F               	movlw	(high __ramtop+-1)
  1373   0020D6  64F7               	cpfsgt	tblptrh,c
  1374   0020D8  D003               	bra	u1917
  1375   0020DA  0008               	tblrd		*
  1376   0020DC  50F5               	movf	tablat,w,c
  1377   0020DE  D005               	bra	u1910
  1378   0020E0                     u1917:
  1379   0020E0  CFF6 FFE9          	movff	tblptrl,fsr0l
  1380   0020E4  CFF7 FFEA          	movff	tblptrh,fsr0h
  1381   0020E8  50EF               	movf	indf0,w,c
  1382   0020EA                     u1910:
  1383   0020EA  0900               	iorlw	0
  1384   0020EC  A4D8               	btfss	status,2,c
  1385   0020EE  EF7B  F010         	goto	u1921
  1386   0020F2  EF7D  F010         	goto	u1920
  1387   0020F6                     u1921:
  1388   0020F6  EF49  F010         	goto	l2796
  1389   0020FA                     u1920:
  1390   0020FA                     l2802:
  1391                           
  1392                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 126:     return ret;
  1393   0020FA  5020               	movf	lcd_4bit_send_string_pos@ret^0,w,c
  1394   0020FC  0012               	return		;funcret
  1395   0020FE                     __end_of_lcd_4bit_send_string_pos:
  1396                           	callstack 0
  1397                           
  1398 ;; *************** function _lcd_4bit_send_char_data_pos *****************
  1399 ;; Defined at:
  1400 ;;		line 87 in file "ECU/Chr_LCD/ecu_chr_lcd.c"
  1401 ;; Parameters:    Size  Location     Type
  1402 ;;  lcd             2   25[COMRAM] PTR const struct .
  1403 ;;		 -> lcd_1(6), 
  1404 ;;  row             1   27[COMRAM] unsigned char 
  1405 ;;  col             1   28[COMRAM] unsigned char 
  1406 ;;  data            1   29[COMRAM] unsigned char 
  1407 ;; Auto vars:     Size  Location     Type
  1408 ;;  ret             1   30[COMRAM] unsigned char 
  1409 ;; Return value:  Size  Location     Type
  1410 ;;                  1    wreg      unsigned char 
  1411 ;; Registers used:
  1412 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1413 ;; Tracked objects:
  1414 ;;		On entry : 0/0
  1415 ;;		On exit  : 0/0
  1416 ;;		Unchanged: 0/0
  1417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1418 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1419 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1421 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1422 ;;Total ram usage:        6 bytes
  1423 ;; Hardware stack levels used: 1
  1424 ;; Hardware stack levels required when called: 4
  1425 ;; This function calls:
  1426 ;;		_lcd_4bit_send_char_data
  1427 ;;		_lcd_4bit_set_cursor
  1428 ;; This function is called by:
  1429 ;;		_main
  1430 ;;		_lcd_4bit_send_custome_char
  1431 ;; This function uses a non-reentrant model
  1432 ;;
  1433                           
  1434                           	psect	text2
  1435   00259E                     __ptext2:
  1436                           	callstack 0
  1437   00259E                     _lcd_4bit_send_char_data_pos:
  1438                           	callstack 26
  1439   00259E                     
  1440                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 90:     if(((void*)0) == lcd){
  1441   00259E  501A               	movf	lcd_4bit_send_char_data_pos@lcd^0,w,c
  1442   0025A0  101B               	iorwf	(lcd_4bit_send_char_data_pos@lcd+1)^0,w,c
  1443   0025A2  A4D8               	btfss	status,2,c
  1444   0025A4  EFD6  F012         	goto	u1881
  1445   0025A8  EFD8  F012         	goto	u1880
  1446   0025AC                     u1881:
  1447   0025AC  EFDC  F012         	goto	l2782
  1448   0025B0                     u1880:
  1449   0025B0                     
  1450                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 91:         ret = (Std_ReturnType)0x00;
  1451   0025B0  0E00               	movlw	0
  1452   0025B2  6E1F               	movwf	lcd_4bit_send_char_data_pos@ret^0,c
  1453                           
  1454                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 92:     }
  1455   0025B4  EFF0  F012         	goto	l2784
  1456   0025B8                     l2782:
  1457                           
  1458                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 94:         ret = lcd_4bit_set_cursor(lcd, row, col);
  1459   0025B8  C01A  F013         	movff	lcd_4bit_send_char_data_pos@lcd,lcd_4bit_set_cursor@lcd
  1460   0025BC  C01B  F014         	movff	lcd_4bit_send_char_data_pos@lcd+1,lcd_4bit_set_cursor@lcd+1
  1461   0025C0  C01C  F015         	movff	lcd_4bit_send_char_data_pos@row,lcd_4bit_set_cursor@row
  1462   0025C4  C01D  F016         	movff	lcd_4bit_send_char_data_pos@col,lcd_4bit_set_cursor@coulmn
  1463   0025C8  ECDB  F00F         	call	_lcd_4bit_set_cursor	;wreg free
  1464   0025CC  6E1F               	movwf	lcd_4bit_send_char_data_pos@ret^0,c
  1465                           
  1466                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 95:         ret = lcd_4bit_send_char_data(lcd, data);
  1467   0025CE  C01A  F00F         	movff	lcd_4bit_send_char_data_pos@lcd,lcd_4bit_send_char_data@lcd
  1468   0025D2  C01B  F010         	movff	lcd_4bit_send_char_data_pos@lcd+1,lcd_4bit_send_char_data@lcd+1
  1469   0025D6  C01E  F011         	movff	lcd_4bit_send_char_data_pos@data,lcd_4bit_send_char_data@data
  1470   0025DA  EC75  F011         	call	_lcd_4bit_send_char_data	;wreg free
  1471   0025DE  6E1F               	movwf	lcd_4bit_send_char_data_pos@ret^0,c
  1472   0025E0                     l2784:
  1473                           
  1474                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 97:     return ret;
  1475   0025E0  501F               	movf	lcd_4bit_send_char_data_pos@ret^0,w,c
  1476   0025E2  0012               	return		;funcret
  1477   0025E4                     __end_of_lcd_4bit_send_char_data_pos:
  1478                           	callstack 0
  1479                           
  1480 ;; *************** function _lcd_4bit_set_cursor *****************
  1481 ;; Defined at:
  1482 ;;		line 347 in file "ECU/Chr_LCD/ecu_chr_lcd.c"
  1483 ;; Parameters:    Size  Location     Type
  1484 ;;  lcd             2   18[COMRAM] PTR const struct .
  1485 ;;		 -> lcd_1(6), 
  1486 ;;  row             1   20[COMRAM] unsigned char 
  1487 ;;  coulmn          1   21[COMRAM] unsigned char 
  1488 ;; Auto vars:     Size  Location     Type
  1489 ;;  ret             1   24[COMRAM] unsigned char 
  1490 ;; Return value:  Size  Location     Type
  1491 ;;                  1    wreg      unsigned char 
  1492 ;; Registers used:
  1493 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1494 ;; Tracked objects:
  1495 ;;		On entry : 0/0
  1496 ;;		On exit  : 0/0
  1497 ;;		Unchanged: 0/0
  1498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1499 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1500 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1501 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1502 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1503 ;;Total ram usage:        7 bytes
  1504 ;; Hardware stack levels used: 1
  1505 ;; Hardware stack levels required when called: 3
  1506 ;; This function calls:
  1507 ;;		_lcd_4bit_send_command
  1508 ;; This function is called by:
  1509 ;;		_lcd_4bit_send_char_data_pos
  1510 ;;		_lcd_4bit_send_string_pos
  1511 ;; This function uses a non-reentrant model
  1512 ;;
  1513                           
  1514                           	psect	text3
  1515   001FB6                     __ptext3:
  1516                           	callstack 0
  1517   001FB6                     _lcd_4bit_set_cursor:
  1518                           	callstack 26
  1519   001FB6                     
  1520                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 348:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1521   001FB6  0E01               	movlw	1
  1522   001FB8  6E19               	movwf	lcd_4bit_set_cursor@ret^0,c
  1523   001FBA                     
  1524                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 349:     coulmn--;
  1525   001FBA  0616               	decf	lcd_4bit_set_cursor@coulmn^0,f,c
  1526                           
  1527                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 350:     switch(row){
  1528   001FBC  EF10  F010         	goto	l2628
  1529   001FC0                     l2620:
  1530   001FC0  C013  F00F         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1531   001FC4  C014  F010         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  1532   001FC8  5016               	movf	lcd_4bit_set_cursor@coulmn^0,w,c
  1533   001FCA  0F80               	addlw	128
  1534   001FCC  6E11               	movwf	lcd_4bit_send_command@command^0,c
  1535   001FCE  ECAE  F011         	call	_lcd_4bit_send_command	;wreg free
  1536   001FD2  6E19               	movwf	lcd_4bit_set_cursor@ret^0,c
  1537   001FD4  EF2D  F010         	goto	l2630
  1538   001FD8                     l2622:
  1539   001FD8  C013  F00F         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1540   001FDC  C014  F010         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  1541   001FE0  5016               	movf	lcd_4bit_set_cursor@coulmn^0,w,c
  1542   001FE2  0FC0               	addlw	192
  1543   001FE4  6E11               	movwf	lcd_4bit_send_command@command^0,c
  1544   001FE6  ECAE  F011         	call	_lcd_4bit_send_command	;wreg free
  1545   001FEA  6E19               	movwf	lcd_4bit_set_cursor@ret^0,c
  1546   001FEC  EF2D  F010         	goto	l2630
  1547   001FF0                     l2624:
  1548   001FF0  C013  F00F         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1549   001FF4  C014  F010         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  1550   001FF8  5016               	movf	lcd_4bit_set_cursor@coulmn^0,w,c
  1551   001FFA  0F94               	addlw	148
  1552   001FFC  6E11               	movwf	lcd_4bit_send_command@command^0,c
  1553   001FFE  ECAE  F011         	call	_lcd_4bit_send_command	;wreg free
  1554   002002  6E19               	movwf	lcd_4bit_set_cursor@ret^0,c
  1555   002004  EF2D  F010         	goto	l2630
  1556   002008                     l2626:
  1557   002008  C013  F00F         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1558   00200C  C014  F010         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  1559   002010  5016               	movf	lcd_4bit_set_cursor@coulmn^0,w,c
  1560   002012  0FD4               	addlw	212
  1561   002014  6E11               	movwf	lcd_4bit_send_command@command^0,c
  1562   002016  ECAE  F011         	call	_lcd_4bit_send_command	;wreg free
  1563   00201A  6E19               	movwf	lcd_4bit_set_cursor@ret^0,c
  1564   00201C  EF2D  F010         	goto	l2630
  1565   002020                     l2628:
  1566   002020  5015               	movf	lcd_4bit_set_cursor@row^0,w,c
  1567   002022  6E17               	movwf	??_lcd_4bit_set_cursor^0,c
  1568   002024  6A18               	clrf	(??_lcd_4bit_set_cursor+1)^0,c
  1569                           
  1570                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1571                           ; Switch size 1, requested type "simple"
  1572                           ; Number of cases is 1, Range of values is 0 to 0
  1573                           ; switch strategies available:
  1574                           ; Name         Instructions Cycles
  1575                           ; simple_byte            4     3 (average)
  1576                           ;	Chosen strategy is simple_byte
  1577   002026  5018               	movf	(??_lcd_4bit_set_cursor+1)^0,w,c
  1578   002028  0A00               	xorlw	0	; case 0
  1579   00202A  B4D8               	btfsc	status,2,c
  1580   00202C  EF1A  F010         	goto	l3396
  1581   002030  EF2D  F010         	goto	l2630
  1582   002034                     l3396:
  1583                           
  1584                           ; Switch size 1, requested type "simple"
  1585                           ; Number of cases is 4, Range of values is 1 to 4
  1586                           ; switch strategies available:
  1587                           ; Name         Instructions Cycles
  1588                           ; simple_byte           13     7 (average)
  1589                           ;	Chosen strategy is simple_byte
  1590   002034  5017               	movf	??_lcd_4bit_set_cursor^0,w,c
  1591   002036  0A01               	xorlw	1	; case 1
  1592   002038  B4D8               	btfsc	status,2,c
  1593   00203A  EFE0  F00F         	goto	l2620
  1594   00203E  0A03               	xorlw	3	; case 2
  1595   002040  B4D8               	btfsc	status,2,c
  1596   002042  EFEC  F00F         	goto	l2622
  1597   002046  0A01               	xorlw	1	; case 3
  1598   002048  B4D8               	btfsc	status,2,c
  1599   00204A  EFF8  F00F         	goto	l2624
  1600   00204E  0A07               	xorlw	7	; case 4
  1601   002050  B4D8               	btfsc	status,2,c
  1602   002052  EF04  F010         	goto	l2626
  1603   002056  EF2D  F010         	goto	l2630
  1604   00205A                     l2630:
  1605                           
  1606                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 357:     return ret;
  1607   00205A  5019               	movf	lcd_4bit_set_cursor@ret^0,w,c
  1608   00205C  0012               	return		;funcret
  1609   00205E                     __end_of_lcd_4bit_set_cursor:
  1610                           	callstack 0
  1611                           
  1612 ;; *************** function _lcd_4bit_send_char_data *****************
  1613 ;; Defined at:
  1614 ;;		line 71 in file "ECU/Chr_LCD/ecu_chr_lcd.c"
  1615 ;; Parameters:    Size  Location     Type
  1616 ;;  lcd             2   14[COMRAM] PTR const struct .
  1617 ;;		 -> lcd_1(6), 
  1618 ;;  data            1   16[COMRAM] unsigned char 
  1619 ;; Auto vars:     Size  Location     Type
  1620 ;;  ret             1   17[COMRAM] unsigned char 
  1621 ;; Return value:  Size  Location     Type
  1622 ;;                  1    wreg      unsigned char 
  1623 ;; Registers used:
  1624 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1625 ;; Tracked objects:
  1626 ;;		On entry : 0/0
  1627 ;;		On exit  : 0/0
  1628 ;;		Unchanged: 0/0
  1629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1630 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1631 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1633 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1634 ;;Total ram usage:        4 bytes
  1635 ;; Hardware stack levels used: 1
  1636 ;; Hardware stack levels required when called: 2
  1637 ;; This function calls:
  1638 ;;		_gpio_pin_write_logic
  1639 ;;		_lcd_4bit_send_enable_signal
  1640 ;;		_lcd_send_4bits
  1641 ;; This function is called by:
  1642 ;;		_lcd_4bit_send_char_data_pos
  1643 ;;		_lcd_4bit_send_string_pos
  1644 ;;		_lcd_4bit_send_string
  1645 ;;		_lcd_4bit_send_custome_char
  1646 ;;		_lcd_8bit_send_string
  1647 ;; This function uses a non-reentrant model
  1648 ;;
  1649                           
  1650                           	psect	text4
  1651   0022EA                     __ptext4:
  1652                           	callstack 0
  1653   0022EA                     _lcd_4bit_send_char_data:
  1654                           	callstack 27
  1655   0022EA                     
  1656                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 74:     if(((void*)0) == lcd){
  1657   0022EA  500F               	movf	lcd_4bit_send_char_data@lcd^0,w,c
  1658   0022EC  1010               	iorwf	(lcd_4bit_send_char_data@lcd+1)^0,w,c
  1659   0022EE  A4D8               	btfss	status,2,c
  1660   0022F0  EF7C  F011         	goto	u1721
  1661   0022F4  EF7E  F011         	goto	u1720
  1662   0022F8                     u1721:
  1663   0022F8  EF82  F011         	goto	l2610
  1664   0022FC                     u1720:
  1665   0022FC                     
  1666                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 75:         ret = (Std_ReturnType)0x00;
  1667   0022FC  0E00               	movlw	0
  1668   0022FE  6E12               	movwf	lcd_4bit_send_char_data@ret^0,c
  1669                           
  1670                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 76:     }
  1671   002300  EFAC  F011         	goto	l2612
  1672   002304                     l2610:
  1673                           
  1674                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 78:         ret = gpio_pin_write_logic(&(lcd->lcd_rs), GPIO_
      +                          HIGH);
  1675   002304  C00F  F001         	movff	lcd_4bit_send_char_data@lcd,gpio_pin_write_logic@_pin_config
  1676   002308  C010  F002         	movff	lcd_4bit_send_char_data@lcd+1,gpio_pin_write_logic@_pin_config+1
  1677   00230C  0E01               	movlw	1
  1678   00230E  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  1679   002310  ECD5  F00B         	call	_gpio_pin_write_logic	;wreg free
  1680   002314  6E12               	movwf	lcd_4bit_send_char_data@ret^0,c
  1681                           
  1682                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 79:         ret = lcd_send_4bits(lcd, (data >> 4));
  1683   002316  C00F  F00B         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  1684   00231A  C010  F00C         	movff	lcd_4bit_send_char_data@lcd+1,lcd_send_4bits@lcd+1
  1685   00231E  3811               	swapf	lcd_4bit_send_char_data@data^0,w,c
  1686   002320  0B0F               	andlw	15
  1687   002322  6E0D               	movwf	lcd_send_4bits@_data_command^0,c
  1688   002324  EC1D  F012         	call	_lcd_send_4bits	;wreg free
  1689   002328  6E12               	movwf	lcd_4bit_send_char_data@ret^0,c
  1690                           
  1691                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 80:         ret = lcd_4bit_send_enable_signal(lcd);
  1692   00232A  C00F  F00B         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
  1693   00232E  C010  F00C         	movff	lcd_4bit_send_char_data@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  1694   002332  EC34  F013         	call	_lcd_4bit_send_enable_signal	;wreg free
  1695   002336  6E12               	movwf	lcd_4bit_send_char_data@ret^0,c
  1696                           
  1697                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 81:         ret = lcd_send_4bits(lcd, data);
  1698   002338  C00F  F00B         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  1699   00233C  C010  F00C         	movff	lcd_4bit_send_char_data@lcd+1,lcd_send_4bits@lcd+1
  1700   002340  C011  F00D         	movff	lcd_4bit_send_char_data@data,lcd_send_4bits@_data_command
  1701   002344  EC1D  F012         	call	_lcd_send_4bits	;wreg free
  1702   002348  6E12               	movwf	lcd_4bit_send_char_data@ret^0,c
  1703                           
  1704                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 82:         ret = lcd_4bit_send_enable_signal(lcd);
  1705   00234A  C00F  F00B         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
  1706   00234E  C010  F00C         	movff	lcd_4bit_send_char_data@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  1707   002352  EC34  F013         	call	_lcd_4bit_send_enable_signal	;wreg free
  1708   002356  6E12               	movwf	lcd_4bit_send_char_data@ret^0,c
  1709   002358                     l2612:
  1710                           
  1711                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 84:     return ret;
  1712   002358  5012               	movf	lcd_4bit_send_char_data@ret^0,w,c
  1713   00235A  0012               	return		;funcret
  1714   00235C                     __end_of_lcd_4bit_send_char_data:
  1715                           	callstack 0
  1716                           
  1717 ;; *************** function _keypad_get_value *****************
  1718 ;; Defined at:
  1719 ;;		line 49 in file "ECU/KeyPad/ecu_keypad.c"
  1720 ;; Parameters:    Size  Location     Type
  1721 ;;  _keypad_obj     2   10[COMRAM] PTR const struct .
  1722 ;;		 -> key_1(8), 
  1723 ;;  value           2   12[COMRAM] PTR unsigned char 
  1724 ;;		 -> KeypadValue(1), 
  1725 ;; Auto vars:     Size  Location     Type
  1726 ;;  l_columns_co    1   20[COMRAM] unsigned char 
  1727 ;;  l_rows_count    1   19[COMRAM] unsigned char 
  1728 ;;  l_counter       1   18[COMRAM] unsigned char 
  1729 ;;  column_logic    1   17[COMRAM] unsigned char 
  1730 ;;  ret             1   16[COMRAM] unsigned char 
  1731 ;; Return value:  Size  Location     Type
  1732 ;;                  1    wreg      unsigned char 
  1733 ;; Registers used:
  1734 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1735 ;; Tracked objects:
  1736 ;;		On entry : 0/0
  1737 ;;		On exit  : 0/0
  1738 ;;		Unchanged: 0/0
  1739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1740 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1741 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1742 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1743 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1744 ;;Total ram usage:       11 bytes
  1745 ;; Hardware stack levels used: 1
  1746 ;; Hardware stack levels required when called: 1
  1747 ;; This function calls:
  1748 ;;		_gpio_pin_read_logic
  1749 ;;		_gpio_pin_write_logic
  1750 ;; This function is called by:
  1751 ;;		_main
  1752 ;; This function uses a non-reentrant model
  1753 ;;
  1754                           
  1755                           	psect	text5
  1756   0019F8                     __ptext5:
  1757                           	callstack 0
  1758   0019F8                     _keypad_get_value:
  1759                           	callstack 29
  1760   0019F8                     
  1761                           ;ECU/KeyPad/ecu_keypad.c: 51:     uint8 l_rows_counter = 0, l_columns_counter = 0, l_cou
      +                          nter = 0;
  1762   0019F8  0E00               	movlw	0
  1763   0019FA  6E14               	movwf	keypad_get_value@l_rows_counter^0,c
  1764   0019FC  0E00               	movlw	0
  1765   0019FE  6E15               	movwf	keypad_get_value@l_columns_counter^0,c
  1766   001A00  0E00               	movlw	0
  1767   001A02  6E13               	movwf	keypad_get_value@l_counter^0,c
  1768                           
  1769                           ;ECU/KeyPad/ecu_keypad.c: 52:     uint8 column_logic = 0;
  1770   001A04  0E00               	movlw	0
  1771   001A06  6E12               	movwf	keypad_get_value@column_logic^0,c
  1772   001A08                     
  1773                           ;ECU/KeyPad/ecu_keypad.c: 53:     if((((void*)0) == _keypad_obj) || (((void*)0) == value
      +                          )){
  1774   001A08  500B               	movf	keypad_get_value@_keypad_obj^0,w,c
  1775   001A0A  100C               	iorwf	(keypad_get_value@_keypad_obj+1)^0,w,c
  1776   001A0C  B4D8               	btfsc	status,2,c
  1777   001A0E  EF0B  F00D         	goto	u2021
  1778   001A12  EF0D  F00D         	goto	u2020
  1779   001A16                     u2021:
  1780   001A16  EF16  F00D         	goto	l2892
  1781   001A1A                     u2020:
  1782   001A1A  500D               	movf	keypad_get_value@value^0,w,c
  1783   001A1C  100E               	iorwf	(keypad_get_value@value+1)^0,w,c
  1784   001A1E  A4D8               	btfss	status,2,c
  1785   001A20  EF14  F00D         	goto	u2031
  1786   001A24  EF16  F00D         	goto	u2030
  1787   001A28                     u2031:
  1788   001A28  EF1A  F00D         	goto	l2894
  1789   001A2C                     u2030:
  1790   001A2C                     l2892:
  1791                           
  1792                           ;ECU/KeyPad/ecu_keypad.c: 54:        ret = (Std_ReturnType)0x00;
  1793   001A2C  0E00               	movlw	0
  1794   001A2E  6E11               	movwf	keypad_get_value@ret^0,c
  1795                           
  1796                           ;ECU/KeyPad/ecu_keypad.c: 55:     }
  1797   001A30  EF81  F00D         	goto	l2934
  1798   001A34                     l2894:
  1799                           
  1800                           ;ECU/KeyPad/ecu_keypad.c: 57:         for(l_rows_counter = 0; l_rows_counter < 4; l_rows
      +                          _counter++){
  1801   001A34  0E00               	movlw	0
  1802   001A36  6E14               	movwf	keypad_get_value@l_rows_counter^0,c
  1803   001A38                     l2900:
  1804                           
  1805                           ;ECU/KeyPad/ecu_keypad.c: 58:             for(l_counter = 0; l_counter < 4; l_counter++)
      +                          {
  1806   001A38  0E00               	movlw	0
  1807   001A3A  6E13               	movwf	keypad_get_value@l_counter^0,c
  1808   001A3C                     l2906:
  1809   001A3C  5013               	movf	keypad_get_value@l_counter^0,w,c
  1810   001A3E  240B               	addwf	keypad_get_value@_keypad_obj^0,w,c
  1811   001A40  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1812   001A42  0E00               	movlw	0
  1813   001A44  200C               	addwfc	(keypad_get_value@_keypad_obj+1)^0,w,c
  1814   001A46  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  1815   001A48  0E00               	movlw	0
  1816   001A4A  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  1817   001A4C  ECD5  F00B         	call	_gpio_pin_write_logic	;wreg free
  1818   001A50                     
  1819                           ;ECU/KeyPad/ecu_keypad.c: 60:             }
  1820   001A50  2A13               	incf	keypad_get_value@l_counter^0,f,c
  1821   001A52  0E03               	movlw	3
  1822   001A54  6413               	cpfsgt	keypad_get_value@l_counter^0,c
  1823   001A56  EF2F  F00D         	goto	u2041
  1824   001A5A  EF31  F00D         	goto	u2040
  1825   001A5E                     u2041:
  1826   001A5E  EF1E  F00D         	goto	l2906
  1827   001A62                     u2040:
  1828   001A62                     
  1829                           ;ECU/KeyPad/ecu_keypad.c: 61:             gpio_pin_write_logic(&(_keypad_obj->keypad_row
      +                          _pins[l_rows_counter]), GPIO_HIGH);
  1830   001A62  5014               	movf	keypad_get_value@l_rows_counter^0,w,c
  1831   001A64  240B               	addwf	keypad_get_value@_keypad_obj^0,w,c
  1832   001A66  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1833   001A68  0E00               	movlw	0
  1834   001A6A  200C               	addwfc	(keypad_get_value@_keypad_obj+1)^0,w,c
  1835   001A6C  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  1836   001A6E  0E01               	movlw	1
  1837   001A70  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  1838   001A72  ECD5  F00B         	call	_gpio_pin_write_logic	;wreg free
  1839   001A76                     
  1840                           ;ECU/KeyPad/ecu_keypad.c: 62:             for(l_columns_counter = 0; l_columns_counter <
      +                           4; l_columns_counter++){
  1841   001A76  0E00               	movlw	0
  1842   001A78  6E15               	movwf	keypad_get_value@l_columns_counter^0,c
  1843   001A7A                     l2920:
  1844                           
  1845                           ;ECU/KeyPad/ecu_keypad.c: 63:                 ret = gpio_pin_read_logic(&(_keypad_obj->k
      +                          eypad_columns_pins[l_columns_counter]), &column_logic);
  1846   001A7A  5015               	movf	keypad_get_value@l_columns_counter^0,w,c
  1847   001A7C  240B               	addwf	keypad_get_value@_keypad_obj^0,w,c
  1848   001A7E  6E0F               	movwf	??_keypad_get_value^0,c
  1849   001A80  0E00               	movlw	0
  1850   001A82  200C               	addwfc	(keypad_get_value@_keypad_obj+1)^0,w,c
  1851   001A84  6E10               	movwf	(??_keypad_get_value+1)^0,c
  1852   001A86  0E04               	movlw	4
  1853   001A88  240F               	addwf	??_keypad_get_value^0,w,c
  1854   001A8A  6E01               	movwf	gpio_pin_read_logic@_pin_config^0,c
  1855   001A8C  0E00               	movlw	0
  1856   001A8E  2010               	addwfc	(??_keypad_get_value+1)^0,w,c
  1857   001A90  6E02               	movwf	(gpio_pin_read_logic@_pin_config+1)^0,c
  1858   001A92  0E12               	movlw	low keypad_get_value@column_logic
  1859   001A94  6E03               	movwf	gpio_pin_read_logic@logic^0,c
  1860   001A96  0E00               	movlw	high keypad_get_value@column_logic
  1861   001A98  6E04               	movwf	(gpio_pin_read_logic@logic+1)^0,c
  1862   001A9A  ECCC  F00E         	call	_gpio_pin_read_logic	;wreg free
  1863   001A9E  6E11               	movwf	keypad_get_value@ret^0,c
  1864   001AA0                     
  1865                           ;ECU/KeyPad/ecu_keypad.c: 64:                 if(GPIO_HIGH == column_logic){
  1866   001AA0  0412               	decf	keypad_get_value@column_logic^0,w,c
  1867   001AA2  A4D8               	btfss	status,2,c
  1868   001AA4  EF56  F00D         	goto	u2051
  1869   001AA8  EF58  F00D         	goto	u2050
  1870   001AAC                     u2051:
  1871   001AAC  EF6F  F00D         	goto	l2926
  1872   001AB0                     u2050:
  1873   001AB0                     
  1874                           ;ECU/KeyPad/ecu_keypad.c: 65:                     *value = btn_value[l_rows_counter][l_c
      +                          olumns_counter];
  1875   001AB0  5014               	movf	keypad_get_value@l_rows_counter^0,w,c
  1876   001AB2  0D04               	mullw	4
  1877   001AB4  0E01               	movlw	low _btn_value
  1878   001AB6  24F3               	addwf	243,w,c
  1879   001AB8  6E0F               	movwf	??_keypad_get_value^0,c
  1880   001ABA  0E10               	movlw	high _btn_value
  1881   001ABC  20F4               	addwfc	prodh,w,c
  1882   001ABE  6E10               	movwf	(??_keypad_get_value+1)^0,c
  1883   001AC0  5015               	movf	keypad_get_value@l_columns_counter^0,w,c
  1884   001AC2  260F               	addwf	??_keypad_get_value^0,f,c
  1885   001AC4  0E00               	movlw	0
  1886   001AC6  2210               	addwfc	(??_keypad_get_value+1)^0,f,c
  1887   001AC8  C00F  FFF6         	movff	??_keypad_get_value,tblptrl
  1888   001ACC  C010  FFF7         	movff	??_keypad_get_value+1,tblptrh
  1889   001AD0                     	if	0	;tblptru may be non-zero
  1890   001AD0                     	endif
  1891   001AD0                     	if	0	;tblptru may be non-zero
  1892   001AD0                     	endif
  1893   001AD0  C00D  FFD9         	movff	keypad_get_value@value,fsr2l
  1894   001AD4  C00E  FFDA         	movff	keypad_get_value@value+1,fsr2h
  1895   001AD8  0008               	tblrd		*
  1896   001ADA  CFF5 FFDF          	movff	tablat,indf2
  1897   001ADE                     l2926:
  1898                           
  1899                           ;ECU/KeyPad/ecu_keypad.c: 67:             }
  1900   001ADE  2A15               	incf	keypad_get_value@l_columns_counter^0,f,c
  1901   001AE0  0E03               	movlw	3
  1902   001AE2  6415               	cpfsgt	keypad_get_value@l_columns_counter^0,c
  1903   001AE4  EF76  F00D         	goto	u2061
  1904   001AE8  EF78  F00D         	goto	u2060
  1905   001AEC                     u2061:
  1906   001AEC  EF3D  F00D         	goto	l2920
  1907   001AF0                     u2060:
  1908   001AF0                     
  1909                           ;ECU/KeyPad/ecu_keypad.c: 68:         }
  1910   001AF0  2A14               	incf	keypad_get_value@l_rows_counter^0,f,c
  1911   001AF2  0E03               	movlw	3
  1912   001AF4  6414               	cpfsgt	keypad_get_value@l_rows_counter^0,c
  1913   001AF6  EF7F  F00D         	goto	u2071
  1914   001AFA  EF81  F00D         	goto	u2070
  1915   001AFE                     u2071:
  1916   001AFE  EF1C  F00D         	goto	l2900
  1917   001B02                     u2070:
  1918   001B02                     l2934:
  1919                           
  1920                           ;ECU/KeyPad/ecu_keypad.c: 70:     return ret;
  1921   001B02  5011               	movf	keypad_get_value@ret^0,w,c
  1922   001B04  0012               	return		;funcret
  1923   001B06                     __end_of_keypad_get_value:
  1924                           	callstack 0
  1925                           
  1926 ;; *************** function _gpio_pin_read_logic *****************
  1927 ;; Defined at:
  1928 ;;		line 107 in file "MCAL/GPIO/hal_gpio.c"
  1929 ;; Parameters:    Size  Location     Type
  1930 ;;  _pin_config     2    0[COMRAM] PTR const struct .
  1931 ;;		 -> key_1.keypad_columns_pins(4), key_1(8), 
  1932 ;;  logic           2    2[COMRAM] PTR enum E2968
  1933 ;;		 -> keypad_get_value@column_logic(1), 
  1934 ;; Auto vars:     Size  Location     Type
  1935 ;;  ret             1    9[COMRAM] unsigned char 
  1936 ;; Return value:  Size  Location     Type
  1937 ;;                  1    wreg      unsigned char 
  1938 ;; Registers used:
  1939 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1940 ;; Tracked objects:
  1941 ;;		On entry : 0/0
  1942 ;;		On exit  : 0/0
  1943 ;;		Unchanged: 0/0
  1944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1945 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1946 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1947 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1948 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1949 ;;Total ram usage:       10 bytes
  1950 ;; Hardware stack levels used: 1
  1951 ;; This function calls:
  1952 ;;		Nothing
  1953 ;; This function is called by:
  1954 ;;		_keypad_get_value
  1955 ;; This function uses a non-reentrant model
  1956 ;;
  1957                           
  1958                           	psect	text6
  1959   001D98                     __ptext6:
  1960                           	callstack 0
  1961   001D98                     _gpio_pin_read_logic:
  1962                           	callstack 29
  1963   001D98                     
  1964                           ;MCAL/GPIO/hal_gpio.c: 108:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1965   001D98  0E01               	movlw	1
  1966   001D9A  6E0A               	movwf	gpio_pin_read_logic@ret^0,c
  1967   001D9C                     
  1968                           ;MCAL/GPIO/hal_gpio.c: 109:     if(((void*)0) == _pin_config || ((void*)0) == logic || (
      +                          _pin_config->pin > (8 - 1))){
  1969   001D9C  5001               	movf	gpio_pin_read_logic@_pin_config^0,w,c
  1970   001D9E  1002               	iorwf	(gpio_pin_read_logic@_pin_config+1)^0,w,c
  1971   001DA0  B4D8               	btfsc	status,2,c
  1972   001DA2  EFD5  F00E         	goto	u1841
  1973   001DA6  EFD7  F00E         	goto	u1840
  1974   001DAA                     u1841:
  1975   001DAA  EFF1  F00E         	goto	l2762
  1976   001DAE                     u1840:
  1977   001DAE  5003               	movf	gpio_pin_read_logic@logic^0,w,c
  1978   001DB0  1004               	iorwf	(gpio_pin_read_logic@logic+1)^0,w,c
  1979   001DB2  B4D8               	btfsc	status,2,c
  1980   001DB4  EFDE  F00E         	goto	u1851
  1981   001DB8  EFE0  F00E         	goto	u1850
  1982   001DBC                     u1851:
  1983   001DBC  EFF1  F00E         	goto	l2762
  1984   001DC0                     u1850:
  1985   001DC0  C001  FFD9         	movff	gpio_pin_read_logic@_pin_config,fsr2l
  1986   001DC4  C002  FFDA         	movff	gpio_pin_read_logic@_pin_config+1,fsr2h
  1987   001DC8  30DF               	rrcf	223,w,c
  1988   001DCA  32E8               	rrcf	wreg,f,c
  1989   001DCC  32E8               	rrcf	wreg,f,c
  1990   001DCE  0B07               	andlw	7
  1991   001DD0  6E05               	movwf	??_gpio_pin_read_logic^0,c
  1992   001DD2  0E07               	movlw	7
  1993   001DD4  6405               	cpfsgt	??_gpio_pin_read_logic^0,c
  1994   001DD6  EFEF  F00E         	goto	u1861
  1995   001DDA  EFF1  F00E         	goto	u1860
  1996   001DDE                     u1861:
  1997   001DDE  EFF5  F00E         	goto	l2764
  1998   001DE2                     u1860:
  1999   001DE2                     l2762:
  2000                           
  2001                           ;MCAL/GPIO/hal_gpio.c: 110:         ret = (Std_ReturnType)0x00;
  2002   001DE2  0E00               	movlw	0
  2003   001DE4  6E0A               	movwf	gpio_pin_read_logic@ret^0,c
  2004                           
  2005                           ;MCAL/GPIO/hal_gpio.c: 111:     }
  2006   001DE6  EF26  F00F         	goto	l2766
  2007   001DEA                     l2764:
  2008                           
  2009                           ;MCAL/GPIO/hal_gpio.c: 113:            *logic = ((*port_registers[_pin_config->port] >> 
      +                          _pin_config->pin) & (uint8)1);
  2010   001DEA  C001  FFD9         	movff	gpio_pin_read_logic@_pin_config,fsr2l
  2011   001DEE  C002  FFDA         	movff	gpio_pin_read_logic@_pin_config+1,fsr2h
  2012   001DF2  30DF               	rrcf	223,w,c
  2013   001DF4  32E8               	rrcf	wreg,f,c
  2014   001DF6  32E8               	rrcf	wreg,f,c
  2015   001DF8  0B07               	andlw	7
  2016   001DFA  6E05               	movwf	??_gpio_pin_read_logic^0,c
  2017   001DFC  C001  FFD9         	movff	gpio_pin_read_logic@_pin_config,fsr2l
  2018   001E00  C002  FFDA         	movff	gpio_pin_read_logic@_pin_config+1,fsr2h
  2019   001E04  50DF               	movf	223,w,c
  2020   001E06  0B07               	andlw	7
  2021   001E08  6E06               	movwf	(??_gpio_pin_read_logic+1)^0,c
  2022   001E0A  5006               	movf	(??_gpio_pin_read_logic+1)^0,w,c
  2023   001E0C  0D02               	mullw	2
  2024   001E0E  0EAC               	movlw	low _port_registers
  2025   001E10  24F3               	addwf	243,w,c
  2026   001E12  6ED9               	movwf	fsr2l,c
  2027   001E14  0E00               	movlw	high _port_registers
  2028   001E16  20F4               	addwfc	prodh,w,c
  2029   001E18  6EDA               	movwf	fsr2h,c
  2030   001E1A  CFDE F007          	movff	postinc2,??_gpio_pin_read_logic+2
  2031   001E1E  CFDD F008          	movff	postdec2,??_gpio_pin_read_logic+3
  2032   001E22  C007  FFD9         	movff	??_gpio_pin_read_logic+2,fsr2l
  2033   001E26  C008  FFDA         	movff	??_gpio_pin_read_logic+3,fsr2h
  2034   001E2A  50DF               	movf	indf2,w,c
  2035   001E2C  6E09               	movwf	(??_gpio_pin_read_logic+4)^0,c
  2036   001E2E  2A05               	incf	??_gpio_pin_read_logic^0,f,c
  2037   001E30  EF1C  F00F         	goto	u1874
  2038   001E34                     u1875:
  2039   001E34  90D8               	bcf	status,0,c
  2040   001E36  3209               	rrcf	(??_gpio_pin_read_logic+4)^0,f,c
  2041   001E38                     u1874:
  2042   001E38  2E05               	decfsz	??_gpio_pin_read_logic^0,f,c
  2043   001E3A  EF1A  F00F         	goto	u1875
  2044   001E3E  5009               	movf	(??_gpio_pin_read_logic+4)^0,w,c
  2045   001E40  0B01               	andlw	1
  2046   001E42  C003  FFD9         	movff	gpio_pin_read_logic@logic,fsr2l
  2047   001E46  C004  FFDA         	movff	gpio_pin_read_logic@logic+1,fsr2h
  2048   001E4A  6EDF               	movwf	indf2,c
  2049   001E4C                     l2766:
  2050                           
  2051                           ;MCAL/GPIO/hal_gpio.c: 115:     return ret;
  2052   001E4C  500A               	movf	gpio_pin_read_logic@ret^0,w,c
  2053   001E4E  0012               	return		;funcret
  2054   001E50                     __end_of_gpio_pin_read_logic:
  2055                           	callstack 0
  2056                           
  2057 ;; *************** function _convert_short_to_string *****************
  2058 ;; Defined at:
  2059 ;;		line 278 in file "ECU/Chr_LCD/ecu_chr_lcd.c"
  2060 ;; Parameters:    Size  Location     Type
  2061 ;;  value           2   82[COMRAM] unsigned short 
  2062 ;;  str             2   84[COMRAM] PTR unsigned char 
  2063 ;;		 -> result(6), 
  2064 ;; Auto vars:     Size  Location     Type
  2065 ;;  Temp_String     6   86[COMRAM] unsigned char [6]
  2066 ;;  DataCounter     1   93[COMRAM] unsigned char 
  2067 ;;  ret             1   92[COMRAM] unsigned char 
  2068 ;; Return value:  Size  Location     Type
  2069 ;;                  1    wreg      unsigned char 
  2070 ;; Registers used:
  2071 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2072 ;; Tracked objects:
  2073 ;;		On entry : 0/0
  2074 ;;		On exit  : 0/0
  2075 ;;		Unchanged: 0/0
  2076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2077 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2078 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2080 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2081 ;;Total ram usage:       12 bytes
  2082 ;; Hardware stack levels used: 1
  2083 ;; Hardware stack levels required when called: 8
  2084 ;; This function calls:
  2085 ;;		_memset
  2086 ;;		_sprintf
  2087 ;; This function is called by:
  2088 ;;		_main
  2089 ;; This function uses a non-reentrant model
  2090 ;;
  2091                           
  2092                           	psect	text7
  2093   001E50                     __ptext7:
  2094                           	callstack 0
  2095   001E50                     _convert_short_to_string:
  2096                           	callstack 22
  2097   001E50                     
  2098                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 279:     Std_ReturnType ret = (Std_ReturnType)0x01;
  2099   001E50  0E01               	movlw	1
  2100   001E52  6E5D               	movwf	convert_short_to_string@ret^0,c
  2101   001E54                     
  2102                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 280:     uint8 Temp_String[6] = {0};
  2103   001E54  EE20  F057         	lfsr	2,convert_short_to_string@Temp_String
  2104   001E58  0E05               	movlw	5
  2105   001E5A                     u1991:
  2106   001E5A  6ADE               	clrf	postinc2,c
  2107   001E5C  06E8               	decf	wreg,f,c
  2108   001E5E  E2FD               	bc	u1991
  2109   001E60                     
  2110                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 281:     uint8 DataCounter = 0;
  2111   001E60  0E00               	movlw	0
  2112   001E62  6E5E               	movwf	convert_short_to_string@DataCounter^0,c
  2113   001E64                     
  2114                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 282:     if(((void*)0) == str){
  2115   001E64  5055               	movf	convert_short_to_string@str^0,w,c
  2116   001E66  1056               	iorwf	(convert_short_to_string@str+1)^0,w,c
  2117   001E68  A4D8               	btfss	status,2,c
  2118   001E6A  EF39  F00F         	goto	u2001
  2119   001E6E  EF3B  F00F         	goto	u2000
  2120   001E72                     u2001:
  2121   001E72  EF3F  F00F         	goto	l2870
  2122   001E76                     u2000:
  2123   001E76                     
  2124                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 283:         ret = (Std_ReturnType)0x00;
  2125   001E76  0E00               	movlw	0
  2126   001E78  6E5D               	movwf	convert_short_to_string@ret^0,c
  2127                           
  2128                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 284:     }
  2129   001E7A  EF81  F00F         	goto	l2882
  2130   001E7E                     l2870:
  2131                           
  2132                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 286:         memset(str, ' ', 5);
  2133   001E7E  C055  F001         	movff	convert_short_to_string@str,memset@dest
  2134   001E82  C056  F002         	movff	convert_short_to_string@str+1,memset@dest+1
  2135   001E86  0E00               	movlw	0
  2136   001E88  6E04               	movwf	(memset@c+1)^0,c
  2137   001E8A  0E20               	movlw	32
  2138   001E8C  6E03               	movwf	memset@c^0,c
  2139   001E8E  0E00               	movlw	0
  2140   001E90  6E06               	movwf	(memset@n+1)^0,c
  2141   001E92  0E05               	movlw	5
  2142   001E94  6E05               	movwf	memset@n^0,c
  2143   001E96  EC78  F00A         	call	_memset	;wreg free
  2144   001E9A                     
  2145                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 287:         str[5] = '\0';
  2146   001E9A  EE20 F005          	lfsr	2,5
  2147   001E9E  5055               	movf	convert_short_to_string@str^0,w,c
  2148   001EA0  26D9               	addwf	fsr2l,f,c
  2149   001EA2  5056               	movf	(convert_short_to_string@str+1)^0,w,c
  2150   001EA4  22DA               	addwfc	fsr2h,f,c
  2151   001EA6  6ADF               	clrf	indf2,c
  2152   001EA8                     
  2153                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 288:         sprintf((char *)Temp_String, "%i", value);
  2154   001EA8  0E57               	movlw	low convert_short_to_string@Temp_String
  2155   001EAA  6E3F               	movwf	sprintf@s^0,c
  2156   001EAC  0E00               	movlw	high convert_short_to_string@Temp_String
  2157   001EAE  6E40               	movwf	(sprintf@s+1)^0,c
  2158   001EB0  0E23               	movlw	low STR_1
  2159   001EB2  6E41               	movwf	sprintf@fmt^0,c
  2160   001EB4  0E10               	movlw	high STR_1
  2161   001EB6  6E42               	movwf	(sprintf@fmt+1)^0,c
  2162   001EB8  C053  F043         	movff	convert_short_to_string@value,?_sprintf+4
  2163   001EBC  C054  F044         	movff	convert_short_to_string@value+1,?_sprintf+5
  2164   001EC0  ECA9  F012         	call	_sprintf	;wreg free
  2165                           
  2166                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 289:         while(Temp_String[DataCounter] != '\0'){
  2167   001EC4  EF73  F00F         	goto	l2880
  2168   001EC8                     l2876:
  2169                           
  2170                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 290:             str[DataCounter] = Temp_String[DataCounter]
      +                          ;
  2171   001EC8  0E57               	movlw	low convert_short_to_string@Temp_String
  2172   001ECA  245E               	addwf	convert_short_to_string@DataCounter^0,w,c
  2173   001ECC  6ED9               	movwf	fsr2l,c
  2174   001ECE  6ADA               	clrf	fsr2h,c
  2175   001ED0  0E00               	movlw	high convert_short_to_string@Temp_String
  2176   001ED2  22DA               	addwfc	fsr2h,f,c
  2177   001ED4  505E               	movf	convert_short_to_string@DataCounter^0,w,c
  2178   001ED6  2455               	addwf	convert_short_to_string@str^0,w,c
  2179   001ED8  6EE1               	movwf	fsr1l,c
  2180   001EDA  0E00               	movlw	0
  2181   001EDC  2056               	addwfc	(convert_short_to_string@str+1)^0,w,c
  2182   001EDE  6EE2               	movwf	fsr1h,c
  2183   001EE0  CFDF FFE7          	movff	indf2,indf1
  2184   001EE4                     
  2185                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 291:             DataCounter++;
  2186   001EE4  2A5E               	incf	convert_short_to_string@DataCounter^0,f,c
  2187   001EE6                     l2880:
  2188                           
  2189                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 289:         while(Temp_String[DataCounter] != '\0'){
  2190   001EE6  0E57               	movlw	low convert_short_to_string@Temp_String
  2191   001EE8  245E               	addwf	convert_short_to_string@DataCounter^0,w,c
  2192   001EEA  6ED9               	movwf	fsr2l,c
  2193   001EEC  6ADA               	clrf	fsr2h,c
  2194   001EEE  0E00               	movlw	high convert_short_to_string@Temp_String
  2195   001EF0  22DA               	addwfc	fsr2h,f,c
  2196   001EF2  50DF               	movf	indf2,w,c
  2197   001EF4  A4D8               	btfss	status,2,c
  2198   001EF6  EF7F  F00F         	goto	u2011
  2199   001EFA  EF81  F00F         	goto	u2010
  2200   001EFE                     u2011:
  2201   001EFE  EF64  F00F         	goto	l2876
  2202   001F02                     u2010:
  2203   001F02                     l2882:
  2204                           
  2205                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 294:     return ret;
  2206   001F02  505D               	movf	convert_short_to_string@ret^0,w,c
  2207   001F04  0012               	return		;funcret
  2208   001F06                     __end_of_convert_short_to_string:
  2209                           	callstack 0
  2210                           
  2211 ;; *************** function _sprintf *****************
  2212 ;; Defined at:
  2213 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_sprintf.c"
  2214 ;; Parameters:    Size  Location     Type
  2215 ;;  s               2   62[COMRAM] PTR unsigned char 
  2216 ;;		 -> convert_short_to_string@Temp_String(6), 
  2217 ;;  fmt             2   64[COMRAM] PTR const unsigned char 
  2218 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2219 ;; Auto vars:     Size  Location     Type
  2220 ;;  f              12   70[COMRAM] struct _IO_FILE
  2221 ;;  ap              2   68[COMRAM] PTR void [1]
  2222 ;;		 -> ?_sprintf(2), 
  2223 ;;  ret             2    0        int 
  2224 ;; Return value:  Size  Location     Type
  2225 ;;                  2   62[COMRAM] int 
  2226 ;; Registers used:
  2227 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2228 ;; Tracked objects:
  2229 ;;		On entry : 0/0
  2230 ;;		On exit  : 0/0
  2231 ;;		Unchanged: 0/0
  2232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2233 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2234 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2236 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2237 ;;Total ram usage:       20 bytes
  2238 ;; Hardware stack levels used: 1
  2239 ;; Hardware stack levels required when called: 7
  2240 ;; This function calls:
  2241 ;;		_vfprintf
  2242 ;; This function is called by:
  2243 ;;		_convert_short_to_string
  2244 ;;		_convert_byte_to_string
  2245 ;;		_convert_int_to_string
  2246 ;; This function uses a non-reentrant model
  2247 ;;
  2248                           
  2249                           	psect	text8
  2250   002552                     __ptext8:
  2251                           	callstack 0
  2252   002552                     _sprintf:
  2253                           	callstack 22
  2254   002552  0E43               	movlw	low (?_sprintf+4)
  2255   002554  6E45               	movwf	sprintf@ap^0,c
  2256   002556  0E00               	movlw	high (?_sprintf+4)
  2257   002558  6E46               	movwf	(sprintf@ap+1)^0,c
  2258   00255A  C03F  F047         	movff	sprintf@s,sprintf@f
  2259   00255E  C040  F048         	movff	sprintf@s+1,sprintf@f+1
  2260   002562  0E00               	movlw	0
  2261   002564  6E4B               	movwf	(sprintf@f+4)^0,c
  2262   002566  0E00               	movlw	0
  2263   002568  6E4A               	movwf	(sprintf@f+3)^0,c
  2264   00256A  0E00               	movlw	0
  2265   00256C  6E52               	movwf	(sprintf@f+11)^0,c
  2266   00256E  0E00               	movlw	0
  2267   002570  6E51               	movwf	(sprintf@f+10)^0,c
  2268   002572  0E47               	movlw	low sprintf@f
  2269   002574  6E37               	movwf	vfprintf@fp^0,c
  2270   002576  0E00               	movlw	high sprintf@f
  2271   002578  6E38               	movwf	(vfprintf@fp+1)^0,c
  2272   00257A  C041  F039         	movff	sprintf@fmt,vfprintf@fmt
  2273   00257E  C042  F03A         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2274   002582  0E45               	movlw	low sprintf@ap
  2275   002584  6E3B               	movwf	vfprintf@ap^0,c
  2276   002586  0E00               	movlw	high sprintf@ap
  2277   002588  6E3C               	movwf	(vfprintf@ap+1)^0,c
  2278   00258A  EC82  F012         	call	_vfprintf	;wreg free
  2279   00258E  504A               	movf	(sprintf@f+3)^0,w,c
  2280   002590  243F               	addwf	sprintf@s^0,w,c
  2281   002592  6ED9               	movwf	fsr2l,c
  2282   002594  504B               	movf	(sprintf@f+4)^0,w,c
  2283   002596  2040               	addwfc	(sprintf@s+1)^0,w,c
  2284   002598  6EDA               	movwf	fsr2h,c
  2285   00259A  6ADF               	clrf	indf2,c
  2286   00259C  0012               	return		;funcret
  2287   00259E                     __end_of_sprintf:
  2288                           	callstack 0
  2289                           
  2290 ;; *************** function _vfprintf *****************
  2291 ;; Defined at:
  2292 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2293 ;; Parameters:    Size  Location     Type
  2294 ;;  fp              2   54[COMRAM] PTR struct _IO_FILE
  2295 ;;		 -> sprintf@f(12), 
  2296 ;;  fmt             2   56[COMRAM] PTR const unsigned char 
  2297 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2298 ;;  ap              2   58[COMRAM] PTR PTR void 
  2299 ;;		 -> sprintf@ap(2), 
  2300 ;; Auto vars:     Size  Location     Type
  2301 ;;  cfmt            2   60[COMRAM] PTR unsigned char 
  2302 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2303 ;; Return value:  Size  Location     Type
  2304 ;;                  2   54[COMRAM] int 
  2305 ;; Registers used:
  2306 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2307 ;; Tracked objects:
  2308 ;;		On entry : 0/0
  2309 ;;		On exit  : 0/0
  2310 ;;		Unchanged: 0/0
  2311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2312 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2313 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2315 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2316 ;;Total ram usage:        8 bytes
  2317 ;; Hardware stack levels used: 1
  2318 ;; Hardware stack levels required when called: 6
  2319 ;; This function calls:
  2320 ;;		_vfpfcnvrt
  2321 ;; This function is called by:
  2322 ;;		_sprintf
  2323 ;; This function uses a non-reentrant model
  2324 ;;
  2325                           
  2326                           	psect	text9
  2327   002504                     __ptext9:
  2328                           	callstack 0
  2329   002504                     _vfprintf:
  2330                           	callstack 22
  2331   002504                     
  2332                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  2333   002504  C039  F03D         	movff	vfprintf@fmt,vfprintf@cfmt
  2334   002508  C03A  F03E         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2335                           
  2336                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  2337   00250C  EF96  F012         	goto	l2556
  2338   002510                     l2554:
  2339                           
  2340                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2341   002510  C037  F029         	movff	vfprintf@fp,vfpfcnvrt@fp
  2342   002514  C038  F02A         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2343   002518  0E3D               	movlw	low vfprintf@cfmt
  2344   00251A  6E2B               	movwf	vfpfcnvrt@fmt^0,c
  2345   00251C  0E00               	movlw	high vfprintf@cfmt
  2346   00251E  6E2C               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2347   002520  C03B  F02D         	movff	vfprintf@ap,vfpfcnvrt@ap
  2348   002524  C03C  F02E         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2349   002528  EC6B  F00C         	call	_vfpfcnvrt	;wreg free
  2350   00252C                     l2556:
  2351                           
  2352                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  2353   00252C  C03D  FFF6         	movff	vfprintf@cfmt,tblptrl
  2354   002530  C03E  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2355   002534                     	if	0	;tblptru may be non-zero
  2356   002534                     	endif
  2357   002534                     	if	0	;tblptru may be non-zero
  2358   002534                     	endif
  2359   002534  0008               	tblrd		*
  2360   002536  50F5               	movf	tablat,w,c
  2361   002538  0900               	iorlw	0
  2362   00253A  A4D8               	btfss	status,2,c
  2363   00253C  EFA2  F012         	goto	u1691
  2364   002540  EFA4  F012         	goto	u1690
  2365   002544                     u1691:
  2366   002544  EF88  F012         	goto	l2554
  2367   002548                     u1690:
  2368   002548                     
  2369                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  2370   002548  0E00               	movlw	0
  2371   00254A  6E38               	movwf	(?_vfprintf+1)^0,c
  2372   00254C  0E00               	movlw	0
  2373   00254E  6E37               	movwf	?_vfprintf^0,c
  2374   002550  0012               	return		;funcret
  2375   002552                     __end_of_vfprintf:
  2376                           	callstack 0
  2377                           
  2378 ;; *************** function _vfpfcnvrt *****************
  2379 ;; Defined at:
  2380 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2381 ;; Parameters:    Size  Location     Type
  2382 ;;  fp              2   40[COMRAM] PTR struct _IO_FILE
  2383 ;;		 -> sprintf@f(12), 
  2384 ;;  fmt             2   42[COMRAM] PTR PTR unsigned char 
  2385 ;;		 -> vfprintf@cfmt(2), 
  2386 ;;  ap              2   44[COMRAM] PTR PTR void 
  2387 ;;		 -> sprintf@ap(2), 
  2388 ;; Auto vars:     Size  Location     Type
  2389 ;;  convarg         4   48[COMRAM] struct .
  2390 ;;  cp              2   52[COMRAM] PTR unsigned char 
  2391 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2392 ;;  i               2    0        int 
  2393 ;;  done            2    0        int 
  2394 ;;  c               1    0        unsigned char 
  2395 ;; Return value:  Size  Location     Type
  2396 ;;                  1    wreg      void 
  2397 ;; Registers used:
  2398 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2399 ;; Tracked objects:
  2400 ;;		On entry : 0/0
  2401 ;;		On exit  : 0/0
  2402 ;;		Unchanged: 0/0
  2403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2404 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2405 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2406 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2407 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2408 ;;Total ram usage:       14 bytes
  2409 ;; Hardware stack levels used: 1
  2410 ;; Hardware stack levels required when called: 5
  2411 ;; This function calls:
  2412 ;;		_dtoa
  2413 ;;		_fputc
  2414 ;; This function is called by:
  2415 ;;		_vfprintf
  2416 ;; This function uses a non-reentrant model
  2417 ;;
  2418                           
  2419                           	psect	text10
  2420   0018D6                     __ptext10:
  2421                           	callstack 0
  2422   0018D6                     _vfpfcnvrt:
  2423                           	callstack 22
  2424   0018D6                     
  2425                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  2426   0018D6  C02B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2427   0018DA  C02C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2428   0018DE  CFDE FFF6          	movff	postinc2,tblptrl
  2429   0018E2  CFDD FFF7          	movff	postdec2,tblptrh
  2430   0018E6                     	if	0	;tblptru may be non-zero
  2431   0018E6                     	endif
  2432   0018E6                     	if	0	;tblptru may be non-zero
  2433   0018E6                     	endif
  2434   0018E6  0008               	tblrd		*
  2435   0018E8  50F5               	movf	tablat,w,c
  2436   0018EA  0A25               	xorlw	37
  2437   0018EC  A4D8               	btfss	status,2,c
  2438   0018EE  EF7B  F00C         	goto	u1631
  2439   0018F2  EF7D  F00C         	goto	u1630
  2440   0018F6                     u1631:
  2441   0018F6  EFE7  F00C         	goto	l2520
  2442   0018FA                     u1630:
  2443   0018FA                     
  2444                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  2445   0018FA  C02B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2446   0018FE  C02C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2447   001902  2ADE               	incf	postinc2,f,c
  2448   001904  0E00               	movlw	0
  2449   001906  22DD               	addwfc	postdec2,f,c
  2450   001908                     
  2451                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  2452   001908  0E00               	movlw	0
  2453   00190A  6E64               	movwf	(_width+1)^0,c
  2454   00190C  0E00               	movlw	0
  2455   00190E  6E63               	movwf	_width^0,c
  2456   001910  C063  F06B         	movff	_width,_flags
  2457   001914                     
  2458                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  2459   001914  6865               	setf	_prec^0,c
  2460   001916  6866               	setf	(_prec+1)^0,c
  2461   001918                     
  2462                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1143:   cp = *fmt
      +                          ;
  2463   001918  C02B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2464   00191C  C02C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2465   001920  CFDE F035          	movff	postinc2,vfpfcnvrt@cp
  2466   001924  CFDD F036          	movff	postdec2,vfpfcnvrt@cp+1
  2467   001928                     
  2468                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1213:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2469   001928  C035  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2470   00192C  C036  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2471   001930                     	if	0	;tblptru may be non-zero
  2472   001930                     	endif
  2473   001930                     	if	0	;tblptru may be non-zero
  2474   001930                     	endif
  2475   001930  0008               	tblrd		*
  2476   001932  50F5               	movf	tablat,w,c
  2477   001934  0A64               	xorlw	100
  2478   001936  B4D8               	btfsc	status,2,c
  2479   001938  EFA0  F00C         	goto	u1641
  2480   00193C  EFA2  F00C         	goto	u1640
  2481   001940                     u1641:
  2482   001940  EFB0  F00C         	goto	l2510
  2483   001944                     u1640:
  2484   001944  C035  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2485   001948  C036  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2486   00194C                     	if	0	;tblptru may be non-zero
  2487   00194C                     	endif
  2488   00194C                     	if	0	;tblptru may be non-zero
  2489   00194C                     	endif
  2490   00194C  0008               	tblrd		*
  2491   00194E  50F5               	movf	tablat,w,c
  2492   001950  0A69               	xorlw	105
  2493   001952  A4D8               	btfss	status,2,c
  2494   001954  EFAE  F00C         	goto	u1651
  2495   001958  EFB0  F00C         	goto	u1650
  2496   00195C                     u1651:
  2497   00195C  EFDE  F00C         	goto	l2516
  2498   001960                     u1650:
  2499   001960                     l2510:
  2500                           
  2501                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1256:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2502   001960  C02D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2503   001964  C02E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2504   001968  CFDF F02F          	movff	indf2,??_vfpfcnvrt
  2505   00196C  0E02               	movlw	2
  2506   00196E  26DE               	addwf	postinc2,f,c
  2507   001970  CFDF F030          	movff	indf2,??_vfpfcnvrt+1
  2508   001974  0E00               	movlw	0
  2509   001976  22DD               	addwfc	postdec2,f,c
  2510   001978  C02F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2511   00197C  C030  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2512   001980  CFDE F031          	movff	postinc2,vfpfcnvrt@convarg
  2513   001984  CFDD F032          	movff	postdec2,vfpfcnvrt@convarg+1
  2514                           
  2515                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1258:    *fmt = c
      +                          p+1;
  2516   001988  0E01               	movlw	1
  2517   00198A  2435               	addwf	vfpfcnvrt@cp^0,w,c
  2518   00198C  6E2F               	movwf	??_vfpfcnvrt^0,c
  2519   00198E  0E00               	movlw	0
  2520   001990  2036               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  2521   001992  6E30               	movwf	(??_vfpfcnvrt+1)^0,c
  2522   001994  C02B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2523   001998  C02C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2524   00199C  C02F  FFDE         	movff	??_vfpfcnvrt,postinc2
  2525   0019A0  C030  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2526   0019A4                     
  2527                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1259:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  2528   0019A4  C029  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2529   0019A8  C02A  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2530   0019AC  C031  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  2531   0019B0  C032  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2532   0019B4  ECAE  F009         	call	_dtoa	;wreg free
  2533   0019B8  EFFB  F00C         	goto	l1138
  2534   0019BC                     l2516:
  2535                           
  2536                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  2537   0019BC  C02B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2538   0019C0  C02C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2539   0019C4  2ADE               	incf	postinc2,f,c
  2540   0019C6  0E00               	movlw	0
  2541   0019C8  22DD               	addwfc	postdec2,f,c
  2542   0019CA  EFFB  F00C         	goto	l1138
  2543   0019CE                     l2520:
  2544                           
  2545                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  2546   0019CE  C02B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2547   0019D2  C02C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2548   0019D6  CFDE FFF6          	movff	postinc2,tblptrl
  2549   0019DA  CFDD FFF7          	movff	postdec2,tblptrh
  2550   0019DE                     	if	0	;tblptru may be non-zero
  2551   0019DE                     	endif
  2552   0019DE                     	if	0	;tblptru may be non-zero
  2553   0019DE                     	endif
  2554   0019DE  0008               	tblrd		*
  2555   0019E0  50F5               	movf	tablat,w,c
  2556   0019E2  6E01               	movwf	fputc@c^0,c
  2557   0019E4  6A02               	clrf	(fputc@c+1)^0,c
  2558   0019E6  C029  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2559   0019EA  C02A  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2560   0019EE  EC05  F00E         	call	_fputc	;wreg free
  2561   0019F2  EFDE  F00C         	goto	l2516
  2562   0019F6                     l1138:
  2563   0019F6  0012               	return		;funcret
  2564   0019F8                     __end_of_vfpfcnvrt:
  2565                           	callstack 0
  2566                           
  2567 ;; *************** function _dtoa *****************
  2568 ;; Defined at:
  2569 ;;		line 470 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2570 ;; Parameters:    Size  Location     Type
  2571 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2572 ;;		 -> sprintf@f(12), 
  2573 ;;  d               2   29[COMRAM] int 
  2574 ;; Auto vars:     Size  Location     Type
  2575 ;;  i               2   37[COMRAM] int 
  2576 ;;  w               2   35[COMRAM] int 
  2577 ;;  p               2   33[COMRAM] int 
  2578 ;;  s               1   39[COMRAM] unsigned char 
  2579 ;; Return value:  Size  Location     Type
  2580 ;;                  1    wreg      void 
  2581 ;; Registers used:
  2582 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2583 ;; Tracked objects:
  2584 ;;		On entry : 0/0
  2585 ;;		On exit  : 0/0
  2586 ;;		Unchanged: 0/0
  2587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2588 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2589 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2591 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2592 ;;Total ram usage:       13 bytes
  2593 ;; Hardware stack levels used: 1
  2594 ;; Hardware stack levels required when called: 4
  2595 ;; This function calls:
  2596 ;;		___awdiv
  2597 ;;		___awmod
  2598 ;;		_abs
  2599 ;;		_pad
  2600 ;; This function is called by:
  2601 ;;		_vfpfcnvrt
  2602 ;; This function uses a non-reentrant model
  2603 ;;
  2604                           
  2605                           	psect	text11
  2606   00135C                     __ptext11:
  2607                           	callstack 0
  2608   00135C                     _dtoa:
  2609                           	callstack 22
  2610   00135C                     
  2611                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 470: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 471: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           472:  char s;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 473
      +                          :     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           476:     s = d < 0 ? 1 : 0;
  2612   00135C  BE1F               	btfsc	(dtoa@d+1)^0,7,c
  2613   00135E  EFB3  F009         	goto	u1471
  2614   001362  EFB6  F009         	goto	u1470
  2615   001366                     u1471:
  2616   001366  0E01               	movlw	1
  2617   001368  EFB7  F009         	goto	u1480
  2618   00136C                     u1470:
  2619   00136C  0E00               	movlw	0
  2620   00136E                     u1480:
  2621   00136E  6E28               	movwf	dtoa@s^0,c
  2622   001370                     
  2623                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 477:     if (s) {
  2624   001370  5028               	movf	dtoa@s^0,w,c
  2625   001372  B4D8               	btfsc	status,2,c
  2626   001374  EFBE  F009         	goto	u1491
  2627   001378  EFC0  F009         	goto	u1490
  2628   00137C                     u1491:
  2629   00137C  EFC4  F009         	goto	l2404
  2630   001380                     u1490:
  2631   001380                     
  2632                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 478:         d = 
      +                          -d;
  2633   001380  6C1E               	negf	dtoa@d^0,c
  2634   001382  1E1F               	comf	(dtoa@d+1)^0,f,c
  2635   001384  B0D8               	btfsc	status,0,c
  2636   001386  2A1F               	incf	(dtoa@d+1)^0,f,c
  2637   001388                     l2404:
  2638                           
  2639                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 487:     p = (0 <
      +                          = prec) ? prec : 1;
  2640   001388  BE66               	btfsc	(_prec+1)^0,7,c
  2641   00138A  EFCB  F009         	goto	u1500
  2642   00138E  EFC9  F009         	goto	u1501
  2643   001392                     u1501:
  2644   001392  EFD1  F009         	goto	l1117
  2645   001396                     u1500:
  2646   001396  0E00               	movlw	0
  2647   001398  6E23               	movwf	(dtoa@p+1)^0,c
  2648   00139A  0E01               	movlw	1
  2649   00139C  6E22               	movwf	dtoa@p^0,c
  2650   00139E  EFD5  F009         	goto	l1119
  2651   0013A2                     l1117:
  2652   0013A2  C065  F022         	movff	_prec,dtoa@p
  2653   0013A6  C066  F023         	movff	_prec+1,dtoa@p+1
  2654   0013AA                     l1119:
  2655                           
  2656                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 488:     w = widt
      +                          h;
  2657   0013AA  C063  F024         	movff	_width,dtoa@w
  2658   0013AE  C064  F025         	movff	_width+1,dtoa@w+1
  2659   0013B2                     
  2660                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 489:     if (s
  2661   0013B2  5028               	movf	dtoa@s^0,w,c
  2662   0013B4  B4D8               	btfsc	status,2,c
  2663   0013B6  EFDF  F009         	goto	u1511
  2664   0013BA  EFE1  F009         	goto	u1510
  2665   0013BE                     u1511:
  2666   0013BE  EFF8  F009         	goto	l1120
  2667   0013C2                     u1510:
  2668   0013C2                     
  2669                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 493:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 494:         --w;
  2670   0013C2  0624               	decf	dtoa@w^0,f,c
  2671   0013C4  A0D8               	btfss	status,0,c
  2672   0013C6  0625               	decf	(dtoa@w+1)^0,f,c
  2673   0013C8                     
  2674                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 495:   s = s ? '-
      +                          ' : '+';
  2675   0013C8  5028               	movf	dtoa@s^0,w,c
  2676   0013CA  A4D8               	btfss	status,2,c
  2677   0013CC  EFEA  F009         	goto	u1521
  2678   0013D0  EFEC  F009         	goto	u1520
  2679   0013D4                     u1521:
  2680   0013D4  EFF2  F009         	goto	l2416
  2681   0013D8                     u1520:
  2682   0013D8  0E00               	movlw	0
  2683   0013DA  6E21               	movwf	(_dtoa$1101+1)^0,c
  2684   0013DC  0E2B               	movlw	43
  2685   0013DE  6E20               	movwf	_dtoa$1101^0,c
  2686   0013E0  EFF6  F009         	goto	l2418
  2687   0013E4                     l2416:
  2688   0013E4  0E00               	movlw	0
  2689   0013E6  6E21               	movwf	(_dtoa$1101+1)^0,c
  2690   0013E8  0E2D               	movlw	45
  2691   0013EA  6E20               	movwf	_dtoa$1101^0,c
  2692   0013EC                     l2418:
  2693   0013EC  C020  F028         	movff	_dtoa$1101,dtoa@s
  2694   0013F0                     l1120:
  2695                           
  2696                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 505:     i = size
      +                          of(dbuf) - 1;
  2697   0013F0  0E00               	movlw	0
  2698   0013F2  6E27               	movwf	(dtoa@i+1)^0,c
  2699   0013F4  0E1F               	movlw	31
  2700   0013F6  6E26               	movwf	dtoa@i^0,c
  2701   0013F8                     
  2702                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 506:     dbuf[i] 
      +                          = '\0';
  2703   0013F8  0E00               	movlw	0
  2704   0013FA  0100               	movlb	0	; () banked
  2705   0013FC  6FA5               	movwf	(_dbuf+31)& (0+255),b
  2706                           
  2707                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  2708   0013FE  EF31  F00A         	goto	l2432
  2709   001402                     l2422:
  2710                           
  2711                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 511:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 512:         --i;
  2712   001402  0626               	decf	dtoa@i^0,f,c
  2713   001404  A0D8               	btfss	status,0,c
  2714   001406  0627               	decf	(dtoa@i+1)^0,f,c
  2715   001408                     
  2716                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 513:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  2717   001408  0E86               	movlw	low _dbuf
  2718   00140A  2426               	addwf	dtoa@i^0,w,c
  2719   00140C  6ED9               	movwf	fsr2l,c
  2720   00140E  0E00               	movlw	high _dbuf
  2721   001410  2027               	addwfc	(dtoa@i+1)^0,w,c
  2722   001412  6EDA               	movwf	fsr2h,c
  2723   001414  C01E  F001         	movff	dtoa@d,___awmod@dividend
  2724   001418  C01F  F002         	movff	dtoa@d+1,___awmod@dividend+1
  2725   00141C  0E00               	movlw	0
  2726   00141E  6E04               	movwf	(___awmod@divisor+1)^0,c
  2727   001420  0E0A               	movlw	10
  2728   001422  6E03               	movwf	___awmod@divisor^0,c
  2729   001424  EC83  F00F         	call	___awmod	;wreg free
  2730   001428  C001  F007         	movff	?___awmod,abs@a
  2731   00142C  C002  F008         	movff	?___awmod+1,abs@a+1
  2732   001430  EC14  F013         	call	_abs	;wreg free
  2733   001434  5007               	movf	?_abs^0,w,c
  2734   001436  0F30               	addlw	48
  2735   001438  6EDF               	movwf	indf2,c
  2736   00143A                     
  2737                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 514:         --p;
  2738   00143A  0622               	decf	dtoa@p^0,f,c
  2739   00143C  A0D8               	btfss	status,0,c
  2740   00143E  0623               	decf	(dtoa@p+1)^0,f,c
  2741   001440                     
  2742                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 515:         --w;
  2743   001440  0624               	decf	dtoa@w^0,f,c
  2744   001442  A0D8               	btfss	status,0,c
  2745   001444  0625               	decf	(dtoa@w+1)^0,f,c
  2746   001446                     
  2747                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 516:         d = 
      +                          d / 10;
  2748   001446  C01E  F001         	movff	dtoa@d,___awdiv@dividend
  2749   00144A  C01F  F002         	movff	dtoa@d+1,___awdiv@dividend+1
  2750   00144E  0E00               	movlw	0
  2751   001450  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2752   001452  0E0A               	movlw	10
  2753   001454  6E03               	movwf	___awdiv@divisor^0,c
  2754   001456  EC6A  F00E         	call	___awdiv	;wreg free
  2755   00145A  C001  F01E         	movff	?___awdiv,dtoa@d
  2756   00145E  C002  F01F         	movff	?___awdiv+1,dtoa@d+1
  2757   001462                     l2432:
  2758                           
  2759                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  2760   001462  BE27               	btfsc	(dtoa@i+1)^0,7,c
  2761   001464  EF3C  F00A         	goto	u1531
  2762   001468  5027               	movf	(dtoa@i+1)^0,w,c
  2763   00146A  E108               	bnz	u1530
  2764   00146C  0426               	decf	dtoa@i^0,w,c
  2765   00146E  A0D8               	btfss	status,0,c
  2766   001470  EF3C  F00A         	goto	u1531
  2767   001474  EF3E  F00A         	goto	u1530
  2768   001478                     u1531:
  2769   001478  EF54  F00A         	goto	l2438
  2770   00147C                     u1530:
  2771   00147C  501E               	movf	dtoa@d^0,w,c
  2772   00147E  101F               	iorwf	(dtoa@d+1)^0,w,c
  2773   001480  A4D8               	btfss	status,2,c
  2774   001482  EF45  F00A         	goto	u1541
  2775   001486  EF47  F00A         	goto	u1540
  2776   00148A                     u1541:
  2777   00148A  EF01  F00A         	goto	l2422
  2778   00148E                     u1540:
  2779   00148E  BE23               	btfsc	(dtoa@p+1)^0,7,c
  2780   001490  EF54  F00A         	goto	u1550
  2781   001494  5023               	movf	(dtoa@p+1)^0,w,c
  2782   001496  E106               	bnz	u1551
  2783   001498  0422               	decf	dtoa@p^0,w,c
  2784   00149A  B0D8               	btfsc	status,0,c
  2785   00149C  EF52  F00A         	goto	u1551
  2786   0014A0  EF54  F00A         	goto	u1550
  2787   0014A4                     u1551:
  2788   0014A4  EF01  F00A         	goto	l2422
  2789   0014A8                     u1550:
  2790   0014A8                     l2438:
  2791                           
  2792                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 520:     if (s !=
      +                           0) {
  2793   0014A8  5028               	movf	dtoa@s^0,w,c
  2794   0014AA  B4D8               	btfsc	status,2,c
  2795   0014AC  EF5A  F00A         	goto	u1561
  2796   0014B0  EF5C  F00A         	goto	u1560
  2797   0014B4                     u1561:
  2798   0014B4  EF67  F00A         	goto	l2444
  2799   0014B8                     u1560:
  2800   0014B8                     
  2801                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 521:         --i;
  2802   0014B8  0626               	decf	dtoa@i^0,f,c
  2803   0014BA  A0D8               	btfss	status,0,c
  2804   0014BC  0627               	decf	(dtoa@i+1)^0,f,c
  2805   0014BE                     
  2806                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 522:         dbuf
      +                          [i] = s;
  2807   0014BE  0E86               	movlw	low _dbuf
  2808   0014C0  2426               	addwf	dtoa@i^0,w,c
  2809   0014C2  6ED9               	movwf	fsr2l,c
  2810   0014C4  0E00               	movlw	high _dbuf
  2811   0014C6  2027               	addwfc	(dtoa@i+1)^0,w,c
  2812   0014C8  6EDA               	movwf	fsr2h,c
  2813   0014CA  C028  FFDF         	movff	dtoa@s,indf2
  2814   0014CE                     l2444:
  2815                           
  2816                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 526:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2817   0014CE  C01C  F011         	movff	dtoa@fp,pad@fp
  2818   0014D2  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  2819   0014D6  0E86               	movlw	low _dbuf
  2820   0014D8  2426               	addwf	dtoa@i^0,w,c
  2821   0014DA  6E13               	movwf	pad@buf^0,c
  2822   0014DC  0E00               	movlw	high _dbuf
  2823   0014DE  2027               	addwfc	(dtoa@i+1)^0,w,c
  2824   0014E0  6E14               	movwf	(pad@buf+1)^0,c
  2825   0014E2  C024  F015         	movff	dtoa@w,pad@p
  2826   0014E6  C025  F016         	movff	dtoa@w+1,pad@p+1
  2827   0014EA  ECFE  F010         	call	_pad	;wreg free
  2828   0014EE  0012               	return		;funcret
  2829   0014F0                     __end_of_dtoa:
  2830                           	callstack 0
  2831                           
  2832 ;; *************** function _pad *****************
  2833 ;; Defined at:
  2834 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2835 ;; Parameters:    Size  Location     Type
  2836 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2837 ;;		 -> sprintf@f(12), 
  2838 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2839 ;;		 -> dbuf(32), 
  2840 ;;  p               2   20[COMRAM] int 
  2841 ;; Auto vars:     Size  Location     Type
  2842 ;;  w               2   25[COMRAM] int 
  2843 ;;  i               2   23[COMRAM] int 
  2844 ;; Return value:  Size  Location     Type
  2845 ;;                  1    wreg      void 
  2846 ;; Registers used:
  2847 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2848 ;; Tracked objects:
  2849 ;;		On entry : 0/0
  2850 ;;		On exit  : 0/0
  2851 ;;		Unchanged: 0/0
  2852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2853 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2854 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2855 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2856 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2857 ;;Total ram usage:       11 bytes
  2858 ;; Hardware stack levels used: 1
  2859 ;; Hardware stack levels required when called: 3
  2860 ;; This function calls:
  2861 ;;		_fputc
  2862 ;;		_fputs
  2863 ;; This function is called by:
  2864 ;;		_dtoa
  2865 ;; This function uses a non-reentrant model
  2866 ;;
  2867                           
  2868                           	psect	text12
  2869   0021FC                     __ptext12:
  2870                           	callstack 0
  2871   0021FC                     _pad:
  2872                           	callstack 22
  2873   0021FC                     
  2874                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 164:     w = (p < 0) ? 0 : p;
  2875   0021FC  BE16               	btfsc	(pad@p+1)^0,7,c
  2876   0021FE  EF03  F011         	goto	u1401
  2877   002202  EF05  F011         	goto	u1400
  2878   002206                     u1401:
  2879   002206  EF0B  F011         	goto	l2360
  2880   00220A                     u1400:
  2881   00220A  C015  F01A         	movff	pad@p,pad@w
  2882   00220E  C016  F01B         	movff	pad@p+1,pad@w+1
  2883   002212  EF0F  F011         	goto	l1108
  2884   002216                     l2360:
  2885   002216  0E00               	movlw	0
  2886   002218  6E1B               	movwf	(pad@w+1)^0,c
  2887   00221A  0E00               	movlw	0
  2888   00221C  6E1A               	movwf	pad@w^0,c
  2889   00221E                     l1108:
  2890                           
  2891                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  2892   00221E  0E00               	movlw	0
  2893   002220  6E19               	movwf	(pad@i+1)^0,c
  2894   002222  0E00               	movlw	0
  2895   002224  6E18               	movwf	pad@i^0,c
  2896                           
  2897                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  2898   002226  EF21  F011         	goto	l2366
  2899   00222A                     l2362:
  2900                           
  2901                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  2902   00222A  0E00               	movlw	0
  2903   00222C  6E02               	movwf	(fputc@c+1)^0,c
  2904   00222E  0E20               	movlw	32
  2905   002230  6E01               	movwf	fputc@c^0,c
  2906   002232  C011  F003         	movff	pad@fp,fputc@fp
  2907   002236  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2908   00223A  EC05  F00E         	call	_fputc	;wreg free
  2909   00223E                     
  2910                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  2911   00223E  4A18               	infsnz	pad@i^0,f,c
  2912   002240  2A19               	incf	(pad@i+1)^0,f,c
  2913   002242                     l2366:
  2914                           
  2915                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  2916   002242  501A               	movf	pad@w^0,w,c
  2917   002244  5C18               	subwf	pad@i^0,w,c
  2918   002246  5019               	movf	(pad@i+1)^0,w,c
  2919   002248  0A80               	xorlw	128
  2920   00224A  6E17               	movwf	??_pad^0,c
  2921   00224C  501B               	movf	(pad@w+1)^0,w,c
  2922   00224E  0A80               	xorlw	128
  2923   002250  5817               	subwfb	??_pad^0,w,c
  2924   002252  A0D8               	btfss	status,0,c
  2925   002254  EF2E  F011         	goto	u1411
  2926   002258  EF30  F011         	goto	u1410
  2927   00225C                     u1411:
  2928   00225C  EF15  F011         	goto	l2362
  2929   002260                     u1410:
  2930   002260                     
  2931                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  2932   002260  C013  F00A         	movff	pad@buf,fputs@s
  2933   002264  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2934   002268  C011  F00C         	movff	pad@fp,fputs@fp
  2935   00226C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2936   002270  ECF2  F012         	call	_fputs	;wreg free
  2937   002274  0012               	return		;funcret
  2938   002276                     __end_of_pad:
  2939                           	callstack 0
  2940                           
  2941 ;; *************** function _fputs *****************
  2942 ;; Defined at:
  2943 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  2944 ;; Parameters:    Size  Location     Type
  2945 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2946 ;;		 -> dbuf(32), 
  2947 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2948 ;;		 -> sprintf@f(12), 
  2949 ;; Auto vars:     Size  Location     Type
  2950 ;;  i               2   14[COMRAM] int 
  2951 ;;  c               1   13[COMRAM] unsigned char 
  2952 ;; Return value:  Size  Location     Type
  2953 ;;                  2    9[COMRAM] int 
  2954 ;; Registers used:
  2955 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2956 ;; Tracked objects:
  2957 ;;		On entry : 0/0
  2958 ;;		On exit  : 0/0
  2959 ;;		Unchanged: 0/0
  2960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2961 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2962 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2964 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2965 ;;Total ram usage:        7 bytes
  2966 ;; Hardware stack levels used: 1
  2967 ;; Hardware stack levels required when called: 2
  2968 ;; This function calls:
  2969 ;;		_fputc
  2970 ;; This function is called by:
  2971 ;;		_pad
  2972 ;; This function uses a non-reentrant model
  2973 ;;
  2974                           
  2975                           	psect	text13
  2976   0025E4                     __ptext13:
  2977                           	callstack 0
  2978   0025E4                     _fputs:
  2979                           	callstack 22
  2980   0025E4  0E00               	movlw	0
  2981   0025E6  6E10               	movwf	(fputs@i+1)^0,c
  2982   0025E8  0E00               	movlw	0
  2983   0025EA  6E0F               	movwf	fputs@i^0,c
  2984   0025EC  EF03  F013         	goto	l2274
  2985   0025F0                     l2270:
  2986   0025F0  C00E  F001         	movff	fputs@c,fputc@c
  2987   0025F4  6A02               	clrf	(fputc@c+1)^0,c
  2988   0025F6  C00C  F003         	movff	fputs@fp,fputc@fp
  2989   0025FA  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2990   0025FE  EC05  F00E         	call	_fputc	;wreg free
  2991   002602  4A0F               	infsnz	fputs@i^0,f,c
  2992   002604  2A10               	incf	(fputs@i+1)^0,f,c
  2993   002606                     l2274:
  2994   002606  500F               	movf	fputs@i^0,w,c
  2995   002608  240A               	addwf	fputs@s^0,w,c
  2996   00260A  6ED9               	movwf	fsr2l,c
  2997   00260C  5010               	movf	(fputs@i+1)^0,w,c
  2998   00260E  200B               	addwfc	(fputs@s+1)^0,w,c
  2999   002610  6EDA               	movwf	fsr2h,c
  3000   002612  50DF               	movf	indf2,w,c
  3001   002614  6E0E               	movwf	fputs@c^0,c
  3002   002616  500E               	movf	fputs@c^0,w,c
  3003   002618  A4D8               	btfss	status,2,c
  3004   00261A  EF11  F013         	goto	u1271
  3005   00261E  EF13  F013         	goto	u1270
  3006   002622                     u1271:
  3007   002622  EFF8  F012         	goto	l2270
  3008   002626                     u1270:
  3009   002626  0012               	return		;funcret
  3010   002628                     __end_of_fputs:
  3011                           	callstack 0
  3012                           
  3013 ;; *************** function _fputc *****************
  3014 ;; Defined at:
  3015 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  3016 ;; Parameters:    Size  Location     Type
  3017 ;;  c               2    0[COMRAM] int 
  3018 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  3019 ;;		 -> sprintf@f(12), 
  3020 ;; Auto vars:     Size  Location     Type
  3021 ;;		None
  3022 ;; Return value:  Size  Location     Type
  3023 ;;                  2    0[COMRAM] int 
  3024 ;; Registers used:
  3025 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3026 ;; Tracked objects:
  3027 ;;		On entry : 0/0
  3028 ;;		On exit  : 0/0
  3029 ;;		Unchanged: 0/0
  3030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3031 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3033 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3034 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3035 ;;Total ram usage:        9 bytes
  3036 ;; Hardware stack levels used: 1
  3037 ;; Hardware stack levels required when called: 1
  3038 ;; This function calls:
  3039 ;;		_putch
  3040 ;; This function is called by:
  3041 ;;		_pad
  3042 ;;		_vfpfcnvrt
  3043 ;;		_fputs
  3044 ;; This function uses a non-reentrant model
  3045 ;;
  3046                           
  3047                           	psect	text14
  3048   001C0A                     __ptext14:
  3049                           	callstack 0
  3050   001C0A                     _fputc:
  3051                           	callstack 25
  3052   001C0A  5003               	movf	fputc@fp^0,w,c
  3053   001C0C  1004               	iorwf	(fputc@fp+1)^0,w,c
  3054   001C0E  B4D8               	btfsc	status,2,c
  3055   001C10  EF0C  F00E         	goto	u1231
  3056   001C14  EF0E  F00E         	goto	u1230
  3057   001C18                     u1231:
  3058   001C18  EF17  F00E         	goto	l2258
  3059   001C1C                     u1230:
  3060   001C1C  5003               	movf	fputc@fp^0,w,c
  3061   001C1E  1004               	iorwf	(fputc@fp+1)^0,w,c
  3062   001C20  A4D8               	btfss	status,2,c
  3063   001C22  EF15  F00E         	goto	u1241
  3064   001C26  EF17  F00E         	goto	u1240
  3065   001C2A                     u1241:
  3066   001C2A  EF1C  F00E         	goto	l2260
  3067   001C2E                     u1240:
  3068   001C2E                     l2258:
  3069   001C2E  5001               	movf	fputc@c^0,w,c
  3070   001C30  EC9B  F013         	call	_putch
  3071   001C34  EF69  F00E         	goto	l1163
  3072   001C38                     l2260:
  3073   001C38  EE20 F00A          	lfsr	2,10
  3074   001C3C  5003               	movf	fputc@fp^0,w,c
  3075   001C3E  26D9               	addwf	fsr2l,f,c
  3076   001C40  5004               	movf	(fputc@fp+1)^0,w,c
  3077   001C42  22DA               	addwfc	fsr2h,f,c
  3078   001C44  50DE               	movf	postinc2,w,c
  3079   001C46  10DE               	iorwf	postinc2,w,c
  3080   001C48  B4D8               	btfsc	status,2,c
  3081   001C4A  EF29  F00E         	goto	u1251
  3082   001C4E  EF2B  F00E         	goto	u1250
  3083   001C52                     u1251:
  3084   001C52  EF46  F00E         	goto	l2264
  3085   001C56                     u1250:
  3086   001C56  EE20 F00A          	lfsr	2,10
  3087   001C5A  5003               	movf	fputc@fp^0,w,c
  3088   001C5C  26D9               	addwf	fsr2l,f,c
  3089   001C5E  5004               	movf	(fputc@fp+1)^0,w,c
  3090   001C60  22DA               	addwfc	fsr2h,f,c
  3091   001C62  EE10 F003          	lfsr	1,3
  3092   001C66  5003               	movf	fputc@fp^0,w,c
  3093   001C68  26E1               	addwf	fsr1l,f,c
  3094   001C6A  5004               	movf	(fputc@fp+1)^0,w,c
  3095   001C6C  22E2               	addwfc	fsr1h,f,c
  3096   001C6E  50DE               	movf	postinc2,w,c
  3097   001C70  5CE6               	subwf	postinc1,w,c
  3098   001C72  50E6               	movf	postinc1,w,c
  3099   001C74  0A80               	xorlw	128
  3100   001C76  6E09               	movwf	(??_fputc+4)^0,c
  3101   001C78  50DE               	movf	postinc2,w,c
  3102   001C7A  0A80               	xorlw	128
  3103   001C7C  5809               	subwfb	(??_fputc+4)^0,w,c
  3104   001C7E  B0D8               	btfsc	status,0,c
  3105   001C80  EF44  F00E         	goto	u1261
  3106   001C84  EF46  F00E         	goto	u1260
  3107   001C88                     u1261:
  3108   001C88  EF69  F00E         	goto	l1163
  3109   001C8C                     u1260:
  3110   001C8C                     l2264:
  3111   001C8C  EE20 F003          	lfsr	2,3
  3112   001C90  5003               	movf	fputc@fp^0,w,c
  3113   001C92  26D9               	addwf	fsr2l,f,c
  3114   001C94  5004               	movf	(fputc@fp+1)^0,w,c
  3115   001C96  22DA               	addwfc	fsr2h,f,c
  3116   001C98  CFDE F005          	movff	postinc2,??_fputc
  3117   001C9C  CFDD F006          	movff	postdec2,??_fputc+1
  3118   001CA0  C003  FFD9         	movff	fputc@fp,fsr2l
  3119   001CA4  C004  FFDA         	movff	fputc@fp+1,fsr2h
  3120   001CA8  CFDE F007          	movff	postinc2,??_fputc+2
  3121   001CAC  CFDD F008          	movff	postdec2,??_fputc+3
  3122   001CB0  5005               	movf	??_fputc^0,w,c
  3123   001CB2  2407               	addwf	(??_fputc+2)^0,w,c
  3124   001CB4  6ED9               	movwf	fsr2l,c
  3125   001CB6  5006               	movf	(??_fputc+1)^0,w,c
  3126   001CB8  2008               	addwfc	(??_fputc+3)^0,w,c
  3127   001CBA  6EDA               	movwf	fsr2h,c
  3128   001CBC  C001  FFDF         	movff	fputc@c,indf2
  3129   001CC0  EE20 F003          	lfsr	2,3
  3130   001CC4  5003               	movf	fputc@fp^0,w,c
  3131   001CC6  26D9               	addwf	fsr2l,f,c
  3132   001CC8  5004               	movf	(fputc@fp+1)^0,w,c
  3133   001CCA  22DA               	addwfc	fsr2h,f,c
  3134   001CCC  2ADE               	incf	postinc2,f,c
  3135   001CCE  0E00               	movlw	0
  3136   001CD0  22DD               	addwfc	postdec2,f,c
  3137   001CD2                     l1163:
  3138   001CD2  0012               	return		;funcret
  3139   001CD4                     __end_of_fputc:
  3140                           	callstack 0
  3141                           
  3142 ;; *************** function _putch *****************
  3143 ;; Defined at:
  3144 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\putch.c"
  3145 ;; Parameters:    Size  Location     Type
  3146 ;;  c               1    wreg     unsigned char 
  3147 ;; Auto vars:     Size  Location     Type
  3148 ;;  c               1    0[COMRAM] unsigned char 
  3149 ;; Return value:  Size  Location     Type
  3150 ;;                  1    wreg      void 
  3151 ;; Registers used:
  3152 ;;		wreg
  3153 ;; Tracked objects:
  3154 ;;		On entry : 0/0
  3155 ;;		On exit  : 0/0
  3156 ;;		Unchanged: 0/0
  3157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3162 ;;Total ram usage:        0 bytes
  3163 ;; Hardware stack levels used: 1
  3164 ;; This function calls:
  3165 ;;		Nothing
  3166 ;; This function is called by:
  3167 ;;		_fputc
  3168 ;; This function uses a non-reentrant model
  3169 ;;
  3170                           
  3171                           	psect	text15
  3172   002736                     __ptext15:
  3173                           	callstack 0
  3174   002736                     _putch:
  3175                           	callstack 25
  3176   002736  0012               	return		;funcret
  3177   002738                     __end_of_putch:
  3178                           	callstack 0
  3179                           
  3180 ;; *************** function _abs *****************
  3181 ;; Defined at:
  3182 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\abs.c"
  3183 ;; Parameters:    Size  Location     Type
  3184 ;;  a               2    6[COMRAM] int 
  3185 ;; Auto vars:     Size  Location     Type
  3186 ;;		None
  3187 ;; Return value:  Size  Location     Type
  3188 ;;                  2    6[COMRAM] int 
  3189 ;; Registers used:
  3190 ;;		wreg, status,2, status,0
  3191 ;; Tracked objects:
  3192 ;;		On entry : 0/0
  3193 ;;		On exit  : 0/0
  3194 ;;		Unchanged: 0/0
  3195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3196 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3198 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3199 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3200 ;;Total ram usage:        4 bytes
  3201 ;; Hardware stack levels used: 1
  3202 ;; This function calls:
  3203 ;;		Nothing
  3204 ;; This function is called by:
  3205 ;;		_dtoa
  3206 ;; This function uses a non-reentrant model
  3207 ;;
  3208                           
  3209                           	psect	text16
  3210   002628                     __ptext16:
  3211                           	callstack 0
  3212   002628                     _abs:
  3213                           	callstack 25
  3214   002628  BE08               	btfsc	(abs@a+1)^0,7,c
  3215   00262A  EF21  F013         	goto	u1420
  3216   00262E  5008               	movf	(abs@a+1)^0,w,c
  3217   002630  E106               	bnz	u1421
  3218   002632  0407               	decf	abs@a^0,w,c
  3219   002634  B0D8               	btfsc	status,0,c
  3220   002636  EF1F  F013         	goto	u1421
  3221   00263A  EF21  F013         	goto	u1420
  3222   00263E                     u1421:
  3223   00263E  EF2F  F013         	goto	l1148
  3224   002642                     u1420:
  3225   002642  C007  F009         	movff	abs@a,??_abs
  3226   002646  C008  F00A         	movff	abs@a+1,??_abs+1
  3227   00264A  1E09               	comf	??_abs^0,f,c
  3228   00264C  1E0A               	comf	(??_abs+1)^0,f,c
  3229   00264E  4A09               	infsnz	??_abs^0,f,c
  3230   002650  2A0A               	incf	(??_abs+1)^0,f,c
  3231   002652  C009  F007         	movff	??_abs,?_abs
  3232   002656  C00A  F008         	movff	??_abs+1,?_abs+1
  3233   00265A  EF33  F013         	goto	l1151
  3234   00265E                     l1148:
  3235   00265E  C007  F007         	movff	abs@a,?_abs
  3236   002662  C008  F008         	movff	abs@a+1,?_abs+1
  3237   002666                     l1151:
  3238   002666  0012               	return		;funcret
  3239   002668                     __end_of_abs:
  3240                           	callstack 0
  3241                           
  3242 ;; *************** function ___awmod *****************
  3243 ;; Defined at:
  3244 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  3245 ;; Parameters:    Size  Location     Type
  3246 ;;  dividend        2    0[COMRAM] int 
  3247 ;;  divisor         2    2[COMRAM] int 
  3248 ;; Auto vars:     Size  Location     Type
  3249 ;;  sign            1    5[COMRAM] unsigned char 
  3250 ;;  counter         1    4[COMRAM] unsigned char 
  3251 ;; Return value:  Size  Location     Type
  3252 ;;                  2    0[COMRAM] int 
  3253 ;; Registers used:
  3254 ;;		wreg, status,2, status,0
  3255 ;; Tracked objects:
  3256 ;;		On entry : 0/0
  3257 ;;		On exit  : 0/0
  3258 ;;		Unchanged: 0/0
  3259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3260 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3261 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3263 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3264 ;;Total ram usage:        6 bytes
  3265 ;; Hardware stack levels used: 1
  3266 ;; This function calls:
  3267 ;;		Nothing
  3268 ;; This function is called by:
  3269 ;;		_dtoa
  3270 ;; This function uses a non-reentrant model
  3271 ;;
  3272                           
  3273                           	psect	text17
  3274   001F06                     __ptext17:
  3275                           	callstack 0
  3276   001F06                     ___awmod:
  3277                           	callstack 25
  3278   001F06  0E00               	movlw	0
  3279   001F08  6E06               	movwf	___awmod@sign^0,c
  3280   001F0A  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  3281   001F0C  EF8C  F00F         	goto	u1340
  3282   001F10  EF8A  F00F         	goto	u1341
  3283   001F14                     u1341:
  3284   001F14  EF92  F00F         	goto	l2328
  3285   001F18                     u1340:
  3286   001F18  6C01               	negf	___awmod@dividend^0,c
  3287   001F1A  1E02               	comf	(___awmod@dividend+1)^0,f,c
  3288   001F1C  B0D8               	btfsc	status,0,c
  3289   001F1E  2A02               	incf	(___awmod@dividend+1)^0,f,c
  3290   001F20  0E01               	movlw	1
  3291   001F22  6E06               	movwf	___awmod@sign^0,c
  3292   001F24                     l2328:
  3293   001F24  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  3294   001F26  EF99  F00F         	goto	u1350
  3295   001F2A  EF97  F00F         	goto	u1351
  3296   001F2E                     u1351:
  3297   001F2E  EF9D  F00F         	goto	l2332
  3298   001F32                     u1350:
  3299   001F32  6C03               	negf	___awmod@divisor^0,c
  3300   001F34  1E04               	comf	(___awmod@divisor+1)^0,f,c
  3301   001F36  B0D8               	btfsc	status,0,c
  3302   001F38  2A04               	incf	(___awmod@divisor+1)^0,f,c
  3303   001F3A                     l2332:
  3304   001F3A  5003               	movf	___awmod@divisor^0,w,c
  3305   001F3C  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  3306   001F3E  B4D8               	btfsc	status,2,c
  3307   001F40  EFA4  F00F         	goto	u1361
  3308   001F44  EFA6  F00F         	goto	u1360
  3309   001F48                     u1361:
  3310   001F48  EFCA  F00F         	goto	l2348
  3311   001F4C                     u1360:
  3312   001F4C  0E01               	movlw	1
  3313   001F4E  6E05               	movwf	___awmod@counter^0,c
  3314   001F50  EFAE  F00F         	goto	l2338
  3315   001F54                     l2336:
  3316   001F54  90D8               	bcf	status,0,c
  3317   001F56  3603               	rlcf	___awmod@divisor^0,f,c
  3318   001F58  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  3319   001F5A  2A05               	incf	___awmod@counter^0,f,c
  3320   001F5C                     l2338:
  3321   001F5C  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  3322   001F5E  EFB3  F00F         	goto	u1371
  3323   001F62  EFB5  F00F         	goto	u1370
  3324   001F66                     u1371:
  3325   001F66  EFAA  F00F         	goto	l2336
  3326   001F6A                     u1370:
  3327   001F6A                     l2340:
  3328   001F6A  5003               	movf	___awmod@divisor^0,w,c
  3329   001F6C  5C01               	subwf	___awmod@dividend^0,w,c
  3330   001F6E  5004               	movf	(___awmod@divisor+1)^0,w,c
  3331   001F70  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  3332   001F72  A0D8               	btfss	status,0,c
  3333   001F74  EFBE  F00F         	goto	u1381
  3334   001F78  EFC0  F00F         	goto	u1380
  3335   001F7C                     u1381:
  3336   001F7C  EFC4  F00F         	goto	l2344
  3337   001F80                     u1380:
  3338   001F80  5003               	movf	___awmod@divisor^0,w,c
  3339   001F82  5E01               	subwf	___awmod@dividend^0,f,c
  3340   001F84  5004               	movf	(___awmod@divisor+1)^0,w,c
  3341   001F86  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  3342   001F88                     l2344:
  3343   001F88  90D8               	bcf	status,0,c
  3344   001F8A  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  3345   001F8C  3203               	rrcf	___awmod@divisor^0,f,c
  3346   001F8E  2E05               	decfsz	___awmod@counter^0,f,c
  3347   001F90  EFB5  F00F         	goto	l2340
  3348   001F94                     l2348:
  3349   001F94  5006               	movf	___awmod@sign^0,w,c
  3350   001F96  B4D8               	btfsc	status,2,c
  3351   001F98  EFD0  F00F         	goto	u1391
  3352   001F9C  EFD2  F00F         	goto	u1390
  3353   001FA0                     u1391:
  3354   001FA0  EFD6  F00F         	goto	l2352
  3355   001FA4                     u1390:
  3356   001FA4  6C01               	negf	___awmod@dividend^0,c
  3357   001FA6  1E02               	comf	(___awmod@dividend+1)^0,f,c
  3358   001FA8  B0D8               	btfsc	status,0,c
  3359   001FAA  2A02               	incf	(___awmod@dividend+1)^0,f,c
  3360   001FAC                     l2352:
  3361   001FAC  C001  F001         	movff	___awmod@dividend,?___awmod
  3362   001FB0  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  3363   001FB4  0012               	return		;funcret
  3364   001FB6                     __end_of___awmod:
  3365                           	callstack 0
  3366                           
  3367 ;; *************** function ___awdiv *****************
  3368 ;; Defined at:
  3369 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  3370 ;; Parameters:    Size  Location     Type
  3371 ;;  dividend        2    0[COMRAM] int 
  3372 ;;  divisor         2    2[COMRAM] int 
  3373 ;; Auto vars:     Size  Location     Type
  3374 ;;  quotient        2    6[COMRAM] int 
  3375 ;;  sign            1    5[COMRAM] unsigned char 
  3376 ;;  counter         1    4[COMRAM] unsigned char 
  3377 ;; Return value:  Size  Location     Type
  3378 ;;                  2    0[COMRAM] int 
  3379 ;; Registers used:
  3380 ;;		wreg, status,2, status,0
  3381 ;; Tracked objects:
  3382 ;;		On entry : 0/0
  3383 ;;		On exit  : 0/0
  3384 ;;		Unchanged: 0/0
  3385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3386 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3387 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3389 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3390 ;;Total ram usage:        8 bytes
  3391 ;; Hardware stack levels used: 1
  3392 ;; This function calls:
  3393 ;;		Nothing
  3394 ;; This function is called by:
  3395 ;;		_dtoa
  3396 ;; This function uses a non-reentrant model
  3397 ;;
  3398                           
  3399                           	psect	text18
  3400   001CD4                     __ptext18:
  3401                           	callstack 0
  3402   001CD4                     ___awdiv:
  3403                           	callstack 25
  3404   001CD4  0E00               	movlw	0
  3405   001CD6  6E06               	movwf	___awdiv@sign^0,c
  3406   001CD8  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  3407   001CDA  EF73  F00E         	goto	u1280
  3408   001CDE  EF71  F00E         	goto	u1281
  3409   001CE2                     u1281:
  3410   001CE2  EF79  F00E         	goto	l2284
  3411   001CE6                     u1280:
  3412   001CE6  6C03               	negf	___awdiv@divisor^0,c
  3413   001CE8  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  3414   001CEA  B0D8               	btfsc	status,0,c
  3415   001CEC  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  3416   001CEE  0E01               	movlw	1
  3417   001CF0  6E06               	movwf	___awdiv@sign^0,c
  3418   001CF2                     l2284:
  3419   001CF2  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  3420   001CF4  EF80  F00E         	goto	u1290
  3421   001CF8  EF7E  F00E         	goto	u1291
  3422   001CFC                     u1291:
  3423   001CFC  EF86  F00E         	goto	l2290
  3424   001D00                     u1290:
  3425   001D00  6C01               	negf	___awdiv@dividend^0,c
  3426   001D02  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  3427   001D04  B0D8               	btfsc	status,0,c
  3428   001D06  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  3429   001D08  0E01               	movlw	1
  3430   001D0A  1A06               	xorwf	___awdiv@sign^0,f,c
  3431   001D0C                     l2290:
  3432   001D0C  0E00               	movlw	0
  3433   001D0E  6E08               	movwf	(___awdiv@quotient+1)^0,c
  3434   001D10  0E00               	movlw	0
  3435   001D12  6E07               	movwf	___awdiv@quotient^0,c
  3436   001D14  5003               	movf	___awdiv@divisor^0,w,c
  3437   001D16  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  3438   001D18  B4D8               	btfsc	status,2,c
  3439   001D1A  EF91  F00E         	goto	u1301
  3440   001D1E  EF93  F00E         	goto	u1300
  3441   001D22                     u1301:
  3442   001D22  EFBB  F00E         	goto	l2312
  3443   001D26                     u1300:
  3444   001D26  0E01               	movlw	1
  3445   001D28  6E05               	movwf	___awdiv@counter^0,c
  3446   001D2A  EF9B  F00E         	goto	l2298
  3447   001D2E                     l2296:
  3448   001D2E  90D8               	bcf	status,0,c
  3449   001D30  3603               	rlcf	___awdiv@divisor^0,f,c
  3450   001D32  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  3451   001D34  2A05               	incf	___awdiv@counter^0,f,c
  3452   001D36                     l2298:
  3453   001D36  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  3454   001D38  EFA0  F00E         	goto	u1311
  3455   001D3C  EFA2  F00E         	goto	u1310
  3456   001D40                     u1311:
  3457   001D40  EF97  F00E         	goto	l2296
  3458   001D44                     u1310:
  3459   001D44                     l2300:
  3460   001D44  90D8               	bcf	status,0,c
  3461   001D46  3607               	rlcf	___awdiv@quotient^0,f,c
  3462   001D48  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  3463   001D4A  5003               	movf	___awdiv@divisor^0,w,c
  3464   001D4C  5C01               	subwf	___awdiv@dividend^0,w,c
  3465   001D4E  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3466   001D50  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  3467   001D52  A0D8               	btfss	status,0,c
  3468   001D54  EFAE  F00E         	goto	u1321
  3469   001D58  EFB0  F00E         	goto	u1320
  3470   001D5C                     u1321:
  3471   001D5C  EFB5  F00E         	goto	l2308
  3472   001D60                     u1320:
  3473   001D60  5003               	movf	___awdiv@divisor^0,w,c
  3474   001D62  5E01               	subwf	___awdiv@dividend^0,f,c
  3475   001D64  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3476   001D66  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  3477   001D68  8007               	bsf	___awdiv@quotient^0,0,c
  3478   001D6A                     l2308:
  3479   001D6A  90D8               	bcf	status,0,c
  3480   001D6C  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  3481   001D6E  3203               	rrcf	___awdiv@divisor^0,f,c
  3482   001D70  2E05               	decfsz	___awdiv@counter^0,f,c
  3483   001D72  EFA2  F00E         	goto	l2300
  3484   001D76                     l2312:
  3485   001D76  5006               	movf	___awdiv@sign^0,w,c
  3486   001D78  B4D8               	btfsc	status,2,c
  3487   001D7A  EFC1  F00E         	goto	u1331
  3488   001D7E  EFC3  F00E         	goto	u1330
  3489   001D82                     u1331:
  3490   001D82  EFC7  F00E         	goto	l2316
  3491   001D86                     u1330:
  3492   001D86  6C07               	negf	___awdiv@quotient^0,c
  3493   001D88  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  3494   001D8A  B0D8               	btfsc	status,0,c
  3495   001D8C  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  3496   001D8E                     l2316:
  3497   001D8E  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3498   001D92  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3499   001D96  0012               	return		;funcret
  3500   001D98                     __end_of___awdiv:
  3501                           	callstack 0
  3502                           
  3503 ;; *************** function _memset *****************
  3504 ;; Defined at:
  3505 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\memset.c"
  3506 ;; Parameters:    Size  Location     Type
  3507 ;;  dest            2    0[COMRAM] PTR void 
  3508 ;;		 -> result(6), 
  3509 ;;  c               2    2[COMRAM] int 
  3510 ;;  n               2    4[COMRAM] unsigned int 
  3511 ;; Auto vars:     Size  Location     Type
  3512 ;;  s               2   10[COMRAM] PTR unsigned char 
  3513 ;;		 -> result(6), 
  3514 ;;  k               2    8[COMRAM] unsigned int 
  3515 ;; Return value:  Size  Location     Type
  3516 ;;                  2    0[COMRAM] PTR void 
  3517 ;; Registers used:
  3518 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3519 ;; Tracked objects:
  3520 ;;		On entry : 0/0
  3521 ;;		On exit  : 0/0
  3522 ;;		Unchanged: 0/0
  3523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3524 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3525 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3526 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3527 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3528 ;;Total ram usage:       12 bytes
  3529 ;; Hardware stack levels used: 1
  3530 ;; This function calls:
  3531 ;;		Nothing
  3532 ;; This function is called by:
  3533 ;;		_convert_short_to_string
  3534 ;;		_convert_byte_to_string
  3535 ;;		_convert_int_to_string
  3536 ;; This function uses a non-reentrant model
  3537 ;;
  3538                           
  3539                           	psect	text19
  3540   0014F0                     __ptext19:
  3541                           	callstack 0
  3542   0014F0                     _memset:
  3543                           	callstack 29
  3544   0014F0  C001  F00B         	movff	memset@dest,memset@s
  3545   0014F4  C002  F00C         	movff	memset@dest+1,memset@s+1
  3546   0014F8  5005               	movf	memset@n^0,w,c
  3547   0014FA  1006               	iorwf	(memset@n+1)^0,w,c
  3548   0014FC  A4D8               	btfss	status,2,c
  3549   0014FE  EF83  F00A         	goto	u1761
  3550   001502  EF85  F00A         	goto	u1760
  3551   001506                     u1761:
  3552   001506  EF87  F00A         	goto	l2680
  3553   00150A                     u1760:
  3554   00150A  EF32  F00B         	goto	l1073
  3555   00150E                     l2680:
  3556   00150E  C00B  FFD9         	movff	memset@s,fsr2l
  3557   001512  C00C  FFDA         	movff	memset@s+1,fsr2h
  3558   001516  C003  FFDF         	movff	memset@c,indf2
  3559   00151A  5005               	movf	memset@n^0,w,c
  3560   00151C  240B               	addwf	memset@s^0,w,c
  3561   00151E  6E07               	movwf	??_memset^0,c
  3562   001520  5006               	movf	(memset@n+1)^0,w,c
  3563   001522  200C               	addwfc	(memset@s+1)^0,w,c
  3564   001524  6E08               	movwf	(??_memset+1)^0,c
  3565   001526  0EFF               	movlw	255
  3566   001528  2407               	addwf	??_memset^0,w,c
  3567   00152A  6ED9               	movwf	fsr2l,c
  3568   00152C  0EFF               	movlw	255
  3569   00152E  2008               	addwfc	(??_memset+1)^0,w,c
  3570   001530  6EDA               	movwf	fsr2h,c
  3571   001532  C003  FFDF         	movff	memset@c,indf2
  3572   001536  5006               	movf	(memset@n+1)^0,w,c
  3573   001538  E107               	bnz	u1771
  3574   00153A  0E03               	movlw	3
  3575   00153C  5C05               	subwf	memset@n^0,w,c
  3576   00153E  B0D8               	btfsc	status,0,c
  3577   001540  EFA4  F00A         	goto	u1771
  3578   001544  EFA6  F00A         	goto	u1770
  3579   001548                     u1771:
  3580   001548  EFA8  F00A         	goto	l2686
  3581   00154C                     u1770:
  3582   00154C  EF32  F00B         	goto	l1073
  3583   001550                     l2686:
  3584   001550  EE20 F001          	lfsr	2,1
  3585   001554  500B               	movf	memset@s^0,w,c
  3586   001556  26D9               	addwf	fsr2l,f,c
  3587   001558  500C               	movf	(memset@s+1)^0,w,c
  3588   00155A  22DA               	addwfc	fsr2h,f,c
  3589   00155C  C003  FFDF         	movff	memset@c,indf2
  3590   001560  EE20 F002          	lfsr	2,2
  3591   001564  500B               	movf	memset@s^0,w,c
  3592   001566  26D9               	addwf	fsr2l,f,c
  3593   001568  500C               	movf	(memset@s+1)^0,w,c
  3594   00156A  22DA               	addwfc	fsr2h,f,c
  3595   00156C  C003  FFDF         	movff	memset@c,indf2
  3596   001570  5005               	movf	memset@n^0,w,c
  3597   001572  240B               	addwf	memset@s^0,w,c
  3598   001574  6E07               	movwf	??_memset^0,c
  3599   001576  5006               	movf	(memset@n+1)^0,w,c
  3600   001578  200C               	addwfc	(memset@s+1)^0,w,c
  3601   00157A  6E08               	movwf	(??_memset+1)^0,c
  3602   00157C  0EFE               	movlw	254
  3603   00157E  2407               	addwf	??_memset^0,w,c
  3604   001580  6ED9               	movwf	fsr2l,c
  3605   001582  0EFF               	movlw	255
  3606   001584  2008               	addwfc	(??_memset+1)^0,w,c
  3607   001586  6EDA               	movwf	fsr2h,c
  3608   001588  C003  FFDF         	movff	memset@c,indf2
  3609   00158C  5005               	movf	memset@n^0,w,c
  3610   00158E  240B               	addwf	memset@s^0,w,c
  3611   001590  6E07               	movwf	??_memset^0,c
  3612   001592  5006               	movf	(memset@n+1)^0,w,c
  3613   001594  200C               	addwfc	(memset@s+1)^0,w,c
  3614   001596  6E08               	movwf	(??_memset+1)^0,c
  3615   001598  0EFD               	movlw	253
  3616   00159A  2407               	addwf	??_memset^0,w,c
  3617   00159C  6ED9               	movwf	fsr2l,c
  3618   00159E  0EFF               	movlw	255
  3619   0015A0  2008               	addwfc	(??_memset+1)^0,w,c
  3620   0015A2  6EDA               	movwf	fsr2h,c
  3621   0015A4  C003  FFDF         	movff	memset@c,indf2
  3622   0015A8  5006               	movf	(memset@n+1)^0,w,c
  3623   0015AA  E107               	bnz	u1781
  3624   0015AC  0E07               	movlw	7
  3625   0015AE  5C05               	subwf	memset@n^0,w,c
  3626   0015B0  B0D8               	btfsc	status,0,c
  3627   0015B2  EFDD  F00A         	goto	u1781
  3628   0015B6  EFDF  F00A         	goto	u1780
  3629   0015BA                     u1781:
  3630   0015BA  EFE1  F00A         	goto	l2692
  3631   0015BE                     u1780:
  3632   0015BE  EF32  F00B         	goto	l1073
  3633   0015C2                     l2692:
  3634   0015C2  EE20 F003          	lfsr	2,3
  3635   0015C6  500B               	movf	memset@s^0,w,c
  3636   0015C8  26D9               	addwf	fsr2l,f,c
  3637   0015CA  500C               	movf	(memset@s+1)^0,w,c
  3638   0015CC  22DA               	addwfc	fsr2h,f,c
  3639   0015CE  C003  FFDF         	movff	memset@c,indf2
  3640   0015D2  5005               	movf	memset@n^0,w,c
  3641   0015D4  240B               	addwf	memset@s^0,w,c
  3642   0015D6  6E07               	movwf	??_memset^0,c
  3643   0015D8  5006               	movf	(memset@n+1)^0,w,c
  3644   0015DA  200C               	addwfc	(memset@s+1)^0,w,c
  3645   0015DC  6E08               	movwf	(??_memset+1)^0,c
  3646   0015DE  0EFC               	movlw	252
  3647   0015E0  2407               	addwf	??_memset^0,w,c
  3648   0015E2  6ED9               	movwf	fsr2l,c
  3649   0015E4  0EFF               	movlw	255
  3650   0015E6  2008               	addwfc	(??_memset+1)^0,w,c
  3651   0015E8  6EDA               	movwf	fsr2h,c
  3652   0015EA  C003  FFDF         	movff	memset@c,indf2
  3653   0015EE  5006               	movf	(memset@n+1)^0,w,c
  3654   0015F0  E107               	bnz	u1791
  3655   0015F2  0E09               	movlw	9
  3656   0015F4  5C05               	subwf	memset@n^0,w,c
  3657   0015F6  B0D8               	btfsc	status,0,c
  3658   0015F8  EF00  F00B         	goto	u1791
  3659   0015FC  EF02  F00B         	goto	u1790
  3660   001600                     u1791:
  3661   001600  EF04  F00B         	goto	l2698
  3662   001604                     u1790:
  3663   001604  EF32  F00B         	goto	l1073
  3664   001608                     l2698:
  3665   001608  C00B  F007         	movff	memset@s,??_memset
  3666   00160C  C00C  F008         	movff	memset@s+1,??_memset+1
  3667   001610  1E07               	comf	??_memset^0,f,c
  3668   001612  1E08               	comf	(??_memset+1)^0,f,c
  3669   001614  4A07               	infsnz	??_memset^0,f,c
  3670   001616  2A08               	incf	(??_memset+1)^0,f,c
  3671   001618  0E03               	movlw	3
  3672   00161A  1407               	andwf	??_memset^0,w,c
  3673   00161C  6E09               	movwf	memset@k^0,c
  3674   00161E  6A0A               	clrf	(memset@k+1)^0,c
  3675   001620  5009               	movf	memset@k^0,w,c
  3676   001622  260B               	addwf	memset@s^0,f,c
  3677   001624  500A               	movf	(memset@k+1)^0,w,c
  3678   001626  220C               	addwfc	(memset@s+1)^0,f,c
  3679   001628  5009               	movf	memset@k^0,w,c
  3680   00162A  5E05               	subwf	memset@n^0,f,c
  3681   00162C  500A               	movf	(memset@k+1)^0,w,c
  3682   00162E  5A06               	subwfb	(memset@n+1)^0,f,c
  3683   001630  0EFC               	movlw	252
  3684   001632  1605               	andwf	memset@n^0,f,c
  3685   001634  0EFF               	movlw	255
  3686   001636  1606               	andwf	(memset@n+1)^0,f,c
  3687   001638  EF29  F00B         	goto	l2706
  3688   00163C                     l2700:
  3689   00163C  C00B  FFD9         	movff	memset@s,fsr2l
  3690   001640  C00C  FFDA         	movff	memset@s+1,fsr2h
  3691   001644  C003  FFDF         	movff	memset@c,indf2
  3692   001648  0605               	decf	memset@n^0,f,c
  3693   00164A  A0D8               	btfss	status,0,c
  3694   00164C  0606               	decf	(memset@n+1)^0,f,c
  3695   00164E  4A0B               	infsnz	memset@s^0,f,c
  3696   001650  2A0C               	incf	(memset@s+1)^0,f,c
  3697   001652                     l2706:
  3698   001652  5005               	movf	memset@n^0,w,c
  3699   001654  1006               	iorwf	(memset@n+1)^0,w,c
  3700   001656  A4D8               	btfss	status,2,c
  3701   001658  EF30  F00B         	goto	u1801
  3702   00165C  EF32  F00B         	goto	u1800
  3703   001660                     u1801:
  3704   001660  EF1E  F00B         	goto	l2700
  3705   001664                     u1800:
  3706   001664                     l1073:
  3707   001664  0012               	return		;funcret
  3708   001666                     __end_of_memset:
  3709                           	callstack 0
  3710                           
  3711 ;; *************** function _clearDataArrays *****************
  3712 ;; Defined at:
  3713 ;;		line 200 in file "application.c"
  3714 ;; Parameters:    Size  Location     Type
  3715 ;;  arr             2    0[COMRAM] PTR unsigned char 
  3716 ;;		 -> SecondNumber(4), FirstNumber(4), 
  3717 ;;  size            1    2[COMRAM] unsigned char 
  3718 ;; Auto vars:     Size  Location     Type
  3719 ;;  i               1    3[COMRAM] unsigned char 
  3720 ;; Return value:  Size  Location     Type
  3721 ;;                  1    wreg      void 
  3722 ;; Registers used:
  3723 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3724 ;; Tracked objects:
  3725 ;;		On entry : 0/0
  3726 ;;		On exit  : 0/0
  3727 ;;		Unchanged: 0/0
  3728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3729 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3730 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3732 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3733 ;;Total ram usage:        4 bytes
  3734 ;; Hardware stack levels used: 1
  3735 ;; This function calls:
  3736 ;;		Nothing
  3737 ;; This function is called by:
  3738 ;;		_main
  3739 ;; This function uses a non-reentrant model
  3740 ;;
  3741                           
  3742                           	psect	text20
  3743   00269E                     __ptext20:
  3744                           	callstack 0
  3745   00269E                     _clearDataArrays:
  3746                           	callstack 30
  3747   00269E                     
  3748                           ;application.c: 201:     for (uint8 i = 0; i < size; i++) {
  3749   00269E  0E00               	movlw	0
  3750   0026A0  6E04               	movwf	clearDataArrays@i^0,c
  3751   0026A2  EF5B  F013         	goto	l2950
  3752   0026A6                     l2946:
  3753                           
  3754                           ;application.c: 202:         arr[i] = '\0';
  3755   0026A6  5004               	movf	clearDataArrays@i^0,w,c
  3756   0026A8  2401               	addwf	clearDataArrays@arr^0,w,c
  3757   0026AA  6ED9               	movwf	fsr2l,c
  3758   0026AC  0E00               	movlw	0
  3759   0026AE  2002               	addwfc	(clearDataArrays@arr+1)^0,w,c
  3760   0026B0  6EDA               	movwf	fsr2h,c
  3761   0026B2  6ADF               	clrf	indf2,c
  3762   0026B4                     
  3763                           ;application.c: 203:     }
  3764   0026B4  2A04               	incf	clearDataArrays@i^0,f,c
  3765   0026B6                     l2950:
  3766   0026B6  5003               	movf	clearDataArrays@size^0,w,c
  3767   0026B8  5C04               	subwf	clearDataArrays@i^0,w,c
  3768   0026BA  A0D8               	btfss	status,0,c
  3769   0026BC  EF62  F013         	goto	u2081
  3770   0026C0  EF64  F013         	goto	u2080
  3771   0026C4                     u2081:
  3772   0026C4  EF53  F013         	goto	l2946
  3773   0026C8                     u2080:
  3774   0026C8  0012               	return		;funcret
  3775   0026CA                     __end_of_clearDataArrays:
  3776                           	callstack 0
  3777                           
  3778 ;; *************** function _app_initialize *****************
  3779 ;; Defined at:
  3780 ;;		line 193 in file "application.c"
  3781 ;; Parameters:    Size  Location     Type
  3782 ;;		None
  3783 ;; Auto vars:     Size  Location     Type
  3784 ;;  ret             1    0        unsigned char 
  3785 ;; Return value:  Size  Location     Type
  3786 ;;                  1    wreg      void 
  3787 ;; Registers used:
  3788 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3789 ;; Tracked objects:
  3790 ;;		On entry : 0/0
  3791 ;;		On exit  : 0/0
  3792 ;;		Unchanged: 0/0
  3793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3798 ;;Total ram usage:        0 bytes
  3799 ;; Hardware stack levels used: 1
  3800 ;; Hardware stack levels required when called: 4
  3801 ;; This function calls:
  3802 ;;		_keypad_initialize
  3803 ;;		_lcd_4bit_initialize
  3804 ;; This function is called by:
  3805 ;;		_main
  3806 ;; This function uses a non-reentrant model
  3807 ;;
  3808                           
  3809                           	psect	text21
  3810   002716                     __ptext21:
  3811                           	callstack 0
  3812   002716                     _app_initialize:
  3813                           	callstack 26
  3814   002716  0E77               	movlw	low _lcd_1
  3815   002718  6E13               	movwf	lcd_4bit_initialize@lcd^0,c
  3816   00271A  0E00               	movlw	high _lcd_1
  3817   00271C  6E14               	movwf	(lcd_4bit_initialize@lcd+1)^0,c
  3818   00271E  EC83  F00D         	call	_lcd_4bit_initialize	;wreg free
  3819   002722  0ECA               	movlw	low _key_1
  3820   002724  6E0F               	movwf	keypad_initialize@_keypad_obj^0,c
  3821   002726  0E00               	movlw	high _key_1
  3822   002728  6E10               	movwf	(keypad_initialize@_keypad_obj+1)^0,c
  3823   00272A  EC7F  F010         	call	_keypad_initialize	;wreg free
  3824   00272E  0012               	return		;funcret
  3825   002730                     __end_of_app_initialize:
  3826                           	callstack 0
  3827                           
  3828 ;; *************** function _lcd_4bit_initialize *****************
  3829 ;; Defined at:
  3830 ;;		line 17 in file "ECU/Chr_LCD/ecu_chr_lcd.c"
  3831 ;; Parameters:    Size  Location     Type
  3832 ;;  lcd             2   18[COMRAM] PTR const struct .
  3833 ;;		 -> lcd_1(6), 
  3834 ;; Auto vars:     Size  Location     Type
  3835 ;;  ret             1   23[COMRAM] unsigned char 
  3836 ;;  l_data_pins_    1   22[COMRAM] unsigned char 
  3837 ;; Return value:  Size  Location     Type
  3838 ;;                  1    wreg      unsigned char 
  3839 ;; Registers used:
  3840 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3841 ;; Tracked objects:
  3842 ;;		On entry : 0/0
  3843 ;;		On exit  : 0/0
  3844 ;;		Unchanged: 0/0
  3845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3846 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3847 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3848 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3849 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3850 ;;Total ram usage:        6 bytes
  3851 ;; Hardware stack levels used: 1
  3852 ;; Hardware stack levels required when called: 3
  3853 ;; This function calls:
  3854 ;;		_gpio_pin_initialize
  3855 ;;		_lcd_4bit_send_command
  3856 ;; This function is called by:
  3857 ;;		_app_initialize
  3858 ;; This function uses a non-reentrant model
  3859 ;;
  3860                           
  3861                           	psect	text22
  3862   001B06                     __ptext22:
  3863                           	callstack 0
  3864   001B06                     _lcd_4bit_initialize:
  3865                           	callstack 26
  3866   001B06                     
  3867                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 19:     uint8 l_data_pins_counter = 0;
  3868   001B06  0E00               	movlw	0
  3869   001B08  6E17               	movwf	lcd_4bit_initialize@l_data_pins_counter^0,c
  3870   001B0A                     
  3871                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 20:     if(((void*)0) == lcd){
  3872   001B0A  5013               	movf	lcd_4bit_initialize@lcd^0,w,c
  3873   001B0C  1014               	iorwf	(lcd_4bit_initialize@lcd+1)^0,w,c
  3874   001B0E  A4D8               	btfss	status,2,c
  3875   001B10  EF8C  F00D         	goto	u1701
  3876   001B14  EF8E  F00D         	goto	u1700
  3877   001B18                     u1701:
  3878   001B18  EF92  F00D         	goto	l2568
  3879   001B1C                     u1700:
  3880   001B1C                     
  3881                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 21:         ret = (Std_ReturnType)0x00;
  3882   001B1C  0E00               	movlw	0
  3883   001B1E  6E18               	movwf	lcd_4bit_initialize@ret^0,c
  3884                           
  3885                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 22:     }
  3886   001B20  EF03  F00E         	goto	l2600
  3887   001B24                     l2568:
  3888                           
  3889                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 24:         ret = gpio_pin_initialize(&(lcd->lcd_rs));
  3890   001B24  C013  F00B         	movff	lcd_4bit_initialize@lcd,gpio_pin_initialize@_pin_config
  3891   001B28  C014  F00C         	movff	lcd_4bit_initialize@lcd+1,gpio_pin_initialize@_pin_config+1
  3892   001B2C  ECE7  F011         	call	_gpio_pin_initialize	;wreg free
  3893   001B30  6E18               	movwf	lcd_4bit_initialize@ret^0,c
  3894                           
  3895                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 25:         ret = gpio_pin_initialize(&(lcd->lcd_en));
  3896   001B32  0E01               	movlw	1
  3897   001B34  2413               	addwf	lcd_4bit_initialize@lcd^0,w,c
  3898   001B36  6E0B               	movwf	gpio_pin_initialize@_pin_config^0,c
  3899   001B38  0E00               	movlw	0
  3900   001B3A  2014               	addwfc	(lcd_4bit_initialize@lcd+1)^0,w,c
  3901   001B3C  6E0C               	movwf	(gpio_pin_initialize@_pin_config+1)^0,c
  3902   001B3E  ECE7  F011         	call	_gpio_pin_initialize	;wreg free
  3903   001B42  6E18               	movwf	lcd_4bit_initialize@ret^0,c
  3904   001B44                     
  3905                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 26:         for(l_data_pins_counter = 0; l_data_pins_counter
      +                           < 4; l_data_pins_counter++){
  3906   001B44  0E00               	movlw	0
  3907   001B46  6E17               	movwf	lcd_4bit_initialize@l_data_pins_counter^0,c
  3908   001B48                     l2576:
  3909   001B48  5017               	movf	lcd_4bit_initialize@l_data_pins_counter^0,w,c
  3910   001B4A  2413               	addwf	lcd_4bit_initialize@lcd^0,w,c
  3911   001B4C  6E15               	movwf	??_lcd_4bit_initialize^0,c
  3912   001B4E  0E00               	movlw	0
  3913   001B50  2014               	addwfc	(lcd_4bit_initialize@lcd+1)^0,w,c
  3914   001B52  6E16               	movwf	(??_lcd_4bit_initialize+1)^0,c
  3915   001B54  0E02               	movlw	2
  3916   001B56  2415               	addwf	??_lcd_4bit_initialize^0,w,c
  3917   001B58  6E0B               	movwf	gpio_pin_initialize@_pin_config^0,c
  3918   001B5A  0E00               	movlw	0
  3919   001B5C  2016               	addwfc	(??_lcd_4bit_initialize+1)^0,w,c
  3920   001B5E  6E0C               	movwf	(gpio_pin_initialize@_pin_config+1)^0,c
  3921   001B60  ECE7  F011         	call	_gpio_pin_initialize	;wreg free
  3922   001B64                     
  3923                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 28:         }
  3924   001B64  2A17               	incf	lcd_4bit_initialize@l_data_pins_counter^0,f,c
  3925   001B66  0E03               	movlw	3
  3926   001B68  6417               	cpfsgt	lcd_4bit_initialize@l_data_pins_counter^0,c
  3927   001B6A  EFB9  F00D         	goto	u1711
  3928   001B6E  EFBB  F00D         	goto	u1710
  3929   001B72                     u1711:
  3930   001B72  EFA4  F00D         	goto	l2576
  3931   001B76                     u1710:
  3932   001B76                     
  3933                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 30:         _delay((unsigned long)((20)*(8000000UL/4000.0)))
      +                          ;
  3934   001B76  0E34               	movlw	52
  3935   001B78  6E15               	movwf	??_lcd_4bit_initialize^0,c
  3936   001B7A  0EF2               	movlw	242
  3937   001B7C                     u2497:
  3938   001B7C  2EE8               	decfsz	wreg,f,c
  3939   001B7E  D7FE               	bra	u2497
  3940   001B80  2E15               	decfsz	??_lcd_4bit_initialize^0,f,c
  3941   001B82  D7FC               	bra	u2497
  3942   001B84  C013  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3943   001B88  C014  F010         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  3944   001B8C  0E33               	movlw	51
  3945   001B8E  6E11               	movwf	lcd_4bit_send_command@command^0,c
  3946   001B90  ECAE  F011         	call	_lcd_4bit_send_command	;wreg free
  3947   001B94  C013  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3948   001B98  C014  F010         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  3949   001B9C  0E32               	movlw	50
  3950   001B9E  6E11               	movwf	lcd_4bit_send_command@command^0,c
  3951   001BA0  ECAE  F011         	call	_lcd_4bit_send_command	;wreg free
  3952   001BA4  C013  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3953   001BA8  C014  F010         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  3954   001BAC  0E28               	movlw	40
  3955   001BAE  6E11               	movwf	lcd_4bit_send_command@command^0,c
  3956   001BB0  ECAE  F011         	call	_lcd_4bit_send_command	;wreg free
  3957   001BB4  C013  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3958   001BB8  C014  F010         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  3959   001BBC  0E01               	movlw	1
  3960   001BBE  6E11               	movwf	lcd_4bit_send_command@command^0,c
  3961   001BC0  ECAE  F011         	call	_lcd_4bit_send_command	;wreg free
  3962   001BC4  C013  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3963   001BC8  C014  F010         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  3964   001BCC  0E02               	movlw	2
  3965   001BCE  6E11               	movwf	lcd_4bit_send_command@command^0,c
  3966   001BD0  ECAE  F011         	call	_lcd_4bit_send_command	;wreg free
  3967   001BD4  C013  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3968   001BD8  C014  F010         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  3969   001BDC  0E06               	movlw	6
  3970   001BDE  6E11               	movwf	lcd_4bit_send_command@command^0,c
  3971   001BE0  ECAE  F011         	call	_lcd_4bit_send_command	;wreg free
  3972   001BE4  C013  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3973   001BE8  C014  F010         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  3974   001BEC  0E0C               	movlw	12
  3975   001BEE  6E11               	movwf	lcd_4bit_send_command@command^0,c
  3976   001BF0  ECAE  F011         	call	_lcd_4bit_send_command	;wreg free
  3977   001BF4                     
  3978                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 38:         ret = lcd_4bit_send_command(lcd, 0X28);
  3979   001BF4  C013  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3980   001BF8  C014  F010         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  3981   001BFC  0E28               	movlw	40
  3982   001BFE  6E11               	movwf	lcd_4bit_send_command@command^0,c
  3983   001C00  ECAE  F011         	call	_lcd_4bit_send_command	;wreg free
  3984   001C04  6E18               	movwf	lcd_4bit_initialize@ret^0,c
  3985   001C06                     l2600:
  3986                           
  3987                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 52:     return ret;
  3988   001C06  5018               	movf	lcd_4bit_initialize@ret^0,w,c
  3989   001C08  0012               	return		;funcret
  3990   001C0A                     __end_of_lcd_4bit_initialize:
  3991                           	callstack 0
  3992                           
  3993 ;; *************** function _lcd_4bit_send_command *****************
  3994 ;; Defined at:
  3995 ;;		line 55 in file "ECU/Chr_LCD/ecu_chr_lcd.c"
  3996 ;; Parameters:    Size  Location     Type
  3997 ;;  lcd             2   14[COMRAM] PTR const struct .
  3998 ;;		 -> lcd_1(6), 
  3999 ;;  command         1   16[COMRAM] unsigned char 
  4000 ;; Auto vars:     Size  Location     Type
  4001 ;;  ret             1   17[COMRAM] unsigned char 
  4002 ;; Return value:  Size  Location     Type
  4003 ;;                  1    wreg      unsigned char 
  4004 ;; Registers used:
  4005 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4006 ;; Tracked objects:
  4007 ;;		On entry : 0/0
  4008 ;;		On exit  : 0/0
  4009 ;;		Unchanged: 0/0
  4010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4011 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4012 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4014 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4015 ;;Total ram usage:        4 bytes
  4016 ;; Hardware stack levels used: 1
  4017 ;; Hardware stack levels required when called: 2
  4018 ;; This function calls:
  4019 ;;		_gpio_pin_write_logic
  4020 ;;		_lcd_4bit_send_enable_signal
  4021 ;;		_lcd_send_4bits
  4022 ;; This function is called by:
  4023 ;;		_lcd_4bit_initialize
  4024 ;;		_lcd_4bit_set_cursor
  4025 ;;		_main
  4026 ;;		_lcd_4bit_send_custome_char
  4027 ;;		_lcd_8bit_initialize
  4028 ;; This function uses a non-reentrant model
  4029 ;;
  4030                           
  4031                           	psect	text23
  4032   00235C                     __ptext23:
  4033                           	callstack 0
  4034   00235C                     _lcd_4bit_send_command:
  4035                           	callstack 26
  4036   00235C                     
  4037                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 58:     if(((void*)0) == lcd){
  4038   00235C  500F               	movf	lcd_4bit_send_command@lcd^0,w,c
  4039   00235E  1010               	iorwf	(lcd_4bit_send_command@lcd+1)^0,w,c
  4040   002360  A4D8               	btfss	status,2,c
  4041   002362  EFB5  F011         	goto	u1681
  4042   002366  EFB7  F011         	goto	u1680
  4043   00236A                     u1681:
  4044   00236A  EFBB  F011         	goto	l2546
  4045   00236E                     u1680:
  4046   00236E                     
  4047                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 59:         ret = (Std_ReturnType)0x00;
  4048   00236E  0E00               	movlw	0
  4049   002370  6E12               	movwf	lcd_4bit_send_command@ret^0,c
  4050                           
  4051                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 60:     }
  4052   002372  EFE5  F011         	goto	l2548
  4053   002376                     l2546:
  4054                           
  4055                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 62:         ret = gpio_pin_write_logic(&(lcd->lcd_rs), GPIO_
      +                          LOW);
  4056   002376  C00F  F001         	movff	lcd_4bit_send_command@lcd,gpio_pin_write_logic@_pin_config
  4057   00237A  C010  F002         	movff	lcd_4bit_send_command@lcd+1,gpio_pin_write_logic@_pin_config+1
  4058   00237E  0E00               	movlw	0
  4059   002380  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  4060   002382  ECD5  F00B         	call	_gpio_pin_write_logic	;wreg free
  4061   002386  6E12               	movwf	lcd_4bit_send_command@ret^0,c
  4062                           
  4063                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 63:         ret = lcd_send_4bits(lcd, (command >> 4));
  4064   002388  C00F  F00B         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  4065   00238C  C010  F00C         	movff	lcd_4bit_send_command@lcd+1,lcd_send_4bits@lcd+1
  4066   002390  3811               	swapf	lcd_4bit_send_command@command^0,w,c
  4067   002392  0B0F               	andlw	15
  4068   002394  6E0D               	movwf	lcd_send_4bits@_data_command^0,c
  4069   002396  EC1D  F012         	call	_lcd_send_4bits	;wreg free
  4070   00239A  6E12               	movwf	lcd_4bit_send_command@ret^0,c
  4071                           
  4072                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 64:         ret = lcd_4bit_send_enable_signal(lcd);
  4073   00239C  C00F  F00B         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  4074   0023A0  C010  F00C         	movff	lcd_4bit_send_command@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  4075   0023A4  EC34  F013         	call	_lcd_4bit_send_enable_signal	;wreg free
  4076   0023A8  6E12               	movwf	lcd_4bit_send_command@ret^0,c
  4077                           
  4078                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 65:         ret = lcd_send_4bits(lcd, command);
  4079   0023AA  C00F  F00B         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  4080   0023AE  C010  F00C         	movff	lcd_4bit_send_command@lcd+1,lcd_send_4bits@lcd+1
  4081   0023B2  C011  F00D         	movff	lcd_4bit_send_command@command,lcd_send_4bits@_data_command
  4082   0023B6  EC1D  F012         	call	_lcd_send_4bits	;wreg free
  4083   0023BA  6E12               	movwf	lcd_4bit_send_command@ret^0,c
  4084                           
  4085                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 66:         ret = lcd_4bit_send_enable_signal(lcd);
  4086   0023BC  C00F  F00B         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  4087   0023C0  C010  F00C         	movff	lcd_4bit_send_command@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  4088   0023C4  EC34  F013         	call	_lcd_4bit_send_enable_signal	;wreg free
  4089   0023C8  6E12               	movwf	lcd_4bit_send_command@ret^0,c
  4090   0023CA                     l2548:
  4091                           
  4092                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 68:     return ret;
  4093   0023CA  5012               	movf	lcd_4bit_send_command@ret^0,w,c
  4094   0023CC  0012               	return		;funcret
  4095   0023CE                     __end_of_lcd_4bit_send_command:
  4096                           	callstack 0
  4097                           
  4098 ;; *************** function _lcd_send_4bits *****************
  4099 ;; Defined at:
  4100 ;;		line 309 in file "ECU/Chr_LCD/ecu_chr_lcd.c"
  4101 ;; Parameters:    Size  Location     Type
  4102 ;;  lcd             2   10[COMRAM] PTR const struct .
  4103 ;;		 -> lcd_1(6), 
  4104 ;;  _data_comman    1   12[COMRAM] unsigned char 
  4105 ;; Auto vars:     Size  Location     Type
  4106 ;;  ret             1   13[COMRAM] unsigned char 
  4107 ;; Return value:  Size  Location     Type
  4108 ;;                  1    wreg      unsigned char 
  4109 ;; Registers used:
  4110 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4111 ;; Tracked objects:
  4112 ;;		On entry : 0/0
  4113 ;;		On exit  : 0/0
  4114 ;;		Unchanged: 0/0
  4115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4116 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4117 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4119 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4120 ;;Total ram usage:        4 bytes
  4121 ;; Hardware stack levels used: 1
  4122 ;; Hardware stack levels required when called: 1
  4123 ;; This function calls:
  4124 ;;		_gpio_pin_write_logic
  4125 ;; This function is called by:
  4126 ;;		_lcd_4bit_send_command
  4127 ;;		_lcd_4bit_send_char_data
  4128 ;; This function uses a non-reentrant model
  4129 ;;
  4130                           
  4131                           	psect	text24
  4132   00243A                     __ptext24:
  4133                           	callstack 0
  4134   00243A                     _lcd_send_4bits:
  4135                           	callstack 26
  4136   00243A  0E02               	movlw	2
  4137   00243C  240B               	addwf	lcd_send_4bits@lcd^0,w,c
  4138   00243E  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  4139   002440  0E00               	movlw	0
  4140   002442  200C               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  4141   002444  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  4142   002446  500D               	movf	lcd_send_4bits@_data_command^0,w,c
  4143   002448  0B01               	andlw	1
  4144   00244A  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  4145   00244C  ECD5  F00B         	call	_gpio_pin_write_logic	;wreg free
  4146   002450  0E03               	movlw	3
  4147   002452  240B               	addwf	lcd_send_4bits@lcd^0,w,c
  4148   002454  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  4149   002456  0E00               	movlw	0
  4150   002458  200C               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  4151   00245A  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  4152   00245C  90D8               	bcf	status,0,c
  4153   00245E  300D               	rrcf	lcd_send_4bits@_data_command^0,w,c
  4154   002460  0B01               	andlw	1
  4155   002462  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  4156   002464  ECD5  F00B         	call	_gpio_pin_write_logic	;wreg free
  4157   002468  0E04               	movlw	4
  4158   00246A  240B               	addwf	lcd_send_4bits@lcd^0,w,c
  4159   00246C  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  4160   00246E  0E00               	movlw	0
  4161   002470  200C               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  4162   002472  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  4163   002474  400D               	rrncf	lcd_send_4bits@_data_command^0,w,c
  4164   002476  42E8               	rrncf	wreg,f,c
  4165   002478  0B3F               	andlw	63
  4166   00247A  0B01               	andlw	1
  4167   00247C  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  4168   00247E  ECD5  F00B         	call	_gpio_pin_write_logic	;wreg free
  4169   002482                     
  4170                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 314:     ret = gpio_pin_write_logic(&(lcd->lcd_data[3]), (_d
      +                          ata_command >> 3) & (uint8)0X01);
  4171   002482  0E05               	movlw	5
  4172   002484  240B               	addwf	lcd_send_4bits@lcd^0,w,c
  4173   002486  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  4174   002488  0E00               	movlw	0
  4175   00248A  200C               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  4176   00248C  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  4177   00248E  380D               	swapf	lcd_send_4bits@_data_command^0,w,c
  4178   002490  46E8               	rlncf	wreg,f,c
  4179   002492  0B1F               	andlw	31
  4180   002494  0B01               	andlw	1
  4181   002496  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  4182   002498  ECD5  F00B         	call	_gpio_pin_write_logic	;wreg free
  4183   00249C  6E0E               	movwf	lcd_send_4bits@ret^0,c
  4184                           
  4185                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 315:     return ret;
  4186   00249E  500E               	movf	lcd_send_4bits@ret^0,w,c
  4187   0024A0  0012               	return		;funcret
  4188   0024A2                     __end_of_lcd_send_4bits:
  4189                           	callstack 0
  4190                           
  4191 ;; *************** function _lcd_4bit_send_enable_signal *****************
  4192 ;; Defined at:
  4193 ;;		line 318 in file "ECU/Chr_LCD/ecu_chr_lcd.c"
  4194 ;; Parameters:    Size  Location     Type
  4195 ;;  lcd             2   10[COMRAM] PTR const struct .
  4196 ;;		 -> lcd_1(6), 
  4197 ;; Auto vars:     Size  Location     Type
  4198 ;;  ret             1   12[COMRAM] unsigned char 
  4199 ;; Return value:  Size  Location     Type
  4200 ;;                  1    wreg      unsigned char 
  4201 ;; Registers used:
  4202 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4203 ;; Tracked objects:
  4204 ;;		On entry : 0/0
  4205 ;;		On exit  : 0/0
  4206 ;;		Unchanged: 0/0
  4207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4208 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4209 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4211 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4212 ;;Total ram usage:        3 bytes
  4213 ;; Hardware stack levels used: 1
  4214 ;; Hardware stack levels required when called: 1
  4215 ;; This function calls:
  4216 ;;		_gpio_pin_write_logic
  4217 ;; This function is called by:
  4218 ;;		_lcd_4bit_send_command
  4219 ;;		_lcd_4bit_send_char_data
  4220 ;; This function uses a non-reentrant model
  4221 ;;
  4222                           
  4223                           	psect	text25
  4224   002668                     __ptext25:
  4225                           	callstack 0
  4226   002668                     _lcd_4bit_send_enable_signal:
  4227                           	callstack 26
  4228   002668  0E01               	movlw	1
  4229   00266A  240B               	addwf	lcd_4bit_send_enable_signal@lcd^0,w,c
  4230   00266C  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  4231   00266E  0E00               	movlw	0
  4232   002670  200C               	addwfc	(lcd_4bit_send_enable_signal@lcd+1)^0,w,c
  4233   002672  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  4234   002674  0E01               	movlw	1
  4235   002676  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  4236   002678  ECD5  F00B         	call	_gpio_pin_write_logic	;wreg free
  4237   00267C                     
  4238                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 321:     _delay((unsigned long)((5)*(8000000UL/4000000.0)));
  4239   00267C  0E03               	movlw	3
  4240   00267E                     u2507:
  4241   00267E  2EE8               	decfsz	wreg,f,c
  4242   002680  D7FE               	bra	u2507
  4243   002682  F000               	nop	
  4244   002684                     
  4245                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 322:     ret = gpio_pin_write_logic(&(lcd->lcd_en), GPIO_LOW
      +                          );
  4246   002684  0E01               	movlw	1
  4247   002686  240B               	addwf	lcd_4bit_send_enable_signal@lcd^0,w,c
  4248   002688  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  4249   00268A  0E00               	movlw	0
  4250   00268C  200C               	addwfc	(lcd_4bit_send_enable_signal@lcd+1)^0,w,c
  4251   00268E  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  4252   002690  0E00               	movlw	0
  4253   002692  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  4254   002694  ECD5  F00B         	call	_gpio_pin_write_logic	;wreg free
  4255   002698  6E0D               	movwf	lcd_4bit_send_enable_signal@ret^0,c
  4256   00269A                     
  4257                           ;ECU/Chr_LCD/ecu_chr_lcd.c: 323:     return ret;
  4258   00269A  500D               	movf	lcd_4bit_send_enable_signal@ret^0,w,c
  4259   00269C  0012               	return		;funcret
  4260   00269E                     __end_of_lcd_4bit_send_enable_signal:
  4261                           	callstack 0
  4262                           
  4263 ;; *************** function _keypad_initialize *****************
  4264 ;; Defined at:
  4265 ;;		line 25 in file "ECU/KeyPad/ecu_keypad.c"
  4266 ;; Parameters:    Size  Location     Type
  4267 ;;  _keypad_obj     2   14[COMRAM] PTR const struct .
  4268 ;;		 -> key_1(8), 
  4269 ;; Auto vars:     Size  Location     Type
  4270 ;;  columns_coun    1   20[COMRAM] unsigned char 
  4271 ;;  rows_counter    1   19[COMRAM] unsigned char 
  4272 ;;  ret             1   18[COMRAM] unsigned char 
  4273 ;; Return value:  Size  Location     Type
  4274 ;;                  1    wreg      unsigned char 
  4275 ;; Registers used:
  4276 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4277 ;; Tracked objects:
  4278 ;;		On entry : 0/0
  4279 ;;		On exit  : 0/0
  4280 ;;		Unchanged: 0/0
  4281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4282 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4283 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4284 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4285 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4286 ;;Total ram usage:        7 bytes
  4287 ;; Hardware stack levels used: 1
  4288 ;; Hardware stack levels required when called: 2
  4289 ;; This function calls:
  4290 ;;		_gpio_pin_direction_initialize
  4291 ;;		_gpio_pin_initialize
  4292 ;; This function is called by:
  4293 ;;		_app_initialize
  4294 ;; This function uses a non-reentrant model
  4295 ;;
  4296                           
  4297                           	psect	text26
  4298   0020FE                     __ptext26:
  4299                           	callstack 0
  4300   0020FE                     _keypad_initialize:
  4301                           	callstack 27
  4302   0020FE                     
  4303                           ;ECU/KeyPad/ecu_keypad.c: 27:     uint8 rows_counter = 0, columns_counter = 0;
  4304   0020FE  0E00               	movlw	0
  4305   002100  6E14               	movwf	keypad_initialize@rows_counter^0,c
  4306   002102  0E00               	movlw	0
  4307   002104  6E15               	movwf	keypad_initialize@columns_counter^0,c
  4308   002106                     
  4309                           ;ECU/KeyPad/ecu_keypad.c: 28:     if(((void*)0) == _keypad_obj){
  4310   002106  500F               	movf	keypad_initialize@_keypad_obj^0,w,c
  4311   002108  1010               	iorwf	(keypad_initialize@_keypad_obj+1)^0,w,c
  4312   00210A  A4D8               	btfss	status,2,c
  4313   00210C  EF8A  F010         	goto	u1811
  4314   002110  EF8C  F010         	goto	u1810
  4315   002114                     u1811:
  4316   002114  EF90  F010         	goto	l2726
  4317   002118                     u1810:
  4318   002118                     
  4319                           ;ECU/KeyPad/ecu_keypad.c: 29:        ret = (Std_ReturnType)0x00;
  4320   002118  0E00               	movlw	0
  4321   00211A  6E13               	movwf	keypad_initialize@ret^0,c
  4322                           
  4323                           ;ECU/KeyPad/ecu_keypad.c: 30:     }
  4324   00211C  EFBD  F010         	goto	l2750
  4325   002120                     l2726:
  4326                           
  4327                           ;ECU/KeyPad/ecu_keypad.c: 32:         for(rows_counter = 0; rows_counter < 4; rows_count
      +                          er++){
  4328   002120  0E00               	movlw	0
  4329   002122  6E14               	movwf	keypad_initialize@rows_counter^0,c
  4330   002124                     l2732:
  4331   002124  5014               	movf	keypad_initialize@rows_counter^0,w,c
  4332   002126  240F               	addwf	keypad_initialize@_keypad_obj^0,w,c
  4333   002128  6E0B               	movwf	gpio_pin_initialize@_pin_config^0,c
  4334   00212A  0E00               	movlw	0
  4335   00212C  2010               	addwfc	(keypad_initialize@_keypad_obj+1)^0,w,c
  4336   00212E  6E0C               	movwf	(gpio_pin_initialize@_pin_config+1)^0,c
  4337   002130  ECE7  F011         	call	_gpio_pin_initialize	;wreg free
  4338   002134                     
  4339                           ;ECU/KeyPad/ecu_keypad.c: 34:         }
  4340   002134  2A14               	incf	keypad_initialize@rows_counter^0,f,c
  4341   002136  0E03               	movlw	3
  4342   002138  6414               	cpfsgt	keypad_initialize@rows_counter^0,c
  4343   00213A  EFA1  F010         	goto	u1821
  4344   00213E  EFA3  F010         	goto	u1820
  4345   002142                     u1821:
  4346   002142  EF92  F010         	goto	l2732
  4347   002146                     u1820:
  4348   002146                     
  4349                           ;ECU/KeyPad/ecu_keypad.c: 35:         for(columns_counter = 0; columns_counter < 4; colu
      +                          mns_counter++){
  4350   002146  0E00               	movlw	0
  4351   002148  6E15               	movwf	keypad_initialize@columns_counter^0,c
  4352   00214A                     l2744:
  4353                           
  4354                           ;ECU/KeyPad/ecu_keypad.c: 36:             ret = gpio_pin_direction_initialize(&(_keypad_
      +                          obj->keypad_columns_pins[columns_counter]));
  4355   00214A  5015               	movf	keypad_initialize@columns_counter^0,w,c
  4356   00214C  240F               	addwf	keypad_initialize@_keypad_obj^0,w,c
  4357   00214E  6E11               	movwf	??_keypad_initialize^0,c
  4358   002150  0E00               	movlw	0
  4359   002152  2010               	addwfc	(keypad_initialize@_keypad_obj+1)^0,w,c
  4360   002154  6E12               	movwf	(??_keypad_initialize+1)^0,c
  4361   002156  0E04               	movlw	4
  4362   002158  2411               	addwf	??_keypad_initialize^0,w,c
  4363   00215A  6E01               	movwf	gpio_pin_direction_initialize@_pin_config^0,c
  4364   00215C  0E00               	movlw	0
  4365   00215E  2012               	addwfc	(??_keypad_initialize+1)^0,w,c
  4366   002160  6E02               	movwf	(gpio_pin_direction_initialize@_pin_config+1)^0,c
  4367   002162  EC33  F00B         	call	_gpio_pin_direction_initialize	;wreg free
  4368   002166  6E13               	movwf	keypad_initialize@ret^0,c
  4369   002168                     
  4370                           ;ECU/KeyPad/ecu_keypad.c: 37:         }
  4371   002168  2A15               	incf	keypad_initialize@columns_counter^0,f,c
  4372   00216A  0E03               	movlw	3
  4373   00216C  6415               	cpfsgt	keypad_initialize@columns_counter^0,c
  4374   00216E  EFBB  F010         	goto	u1831
  4375   002172  EFBD  F010         	goto	u1830
  4376   002176                     u1831:
  4377   002176  EFA5  F010         	goto	l2744
  4378   00217A                     u1830:
  4379   00217A                     l2750:
  4380                           
  4381                           ;ECU/KeyPad/ecu_keypad.c: 39:     return ret;
  4382   00217A  5013               	movf	keypad_initialize@ret^0,w,c
  4383   00217C  0012               	return		;funcret
  4384   00217E                     __end_of_keypad_initialize:
  4385                           	callstack 0
  4386                           
  4387 ;; *************** function _gpio_pin_initialize *****************
  4388 ;; Defined at:
  4389 ;;		line 148 in file "MCAL/GPIO/hal_gpio.c"
  4390 ;; Parameters:    Size  Location     Type
  4391 ;;  _pin_config     2   10[COMRAM] PTR const struct .
  4392 ;;		 -> key_1.keypad_row_pins(4), key_1(8), lcd_1.lcd_data(4), lcd_1(6), 
  4393 ;; Auto vars:     Size  Location     Type
  4394 ;;  ret             1   13[COMRAM] unsigned char 
  4395 ;; Return value:  Size  Location     Type
  4396 ;;                  1    wreg      unsigned char 
  4397 ;; Registers used:
  4398 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4399 ;; Tracked objects:
  4400 ;;		On entry : 0/0
  4401 ;;		On exit  : 0/0
  4402 ;;		Unchanged: 0/0
  4403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4404 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4405 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4406 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4407 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4408 ;;Total ram usage:        4 bytes
  4409 ;; Hardware stack levels used: 1
  4410 ;; Hardware stack levels required when called: 1
  4411 ;; This function calls:
  4412 ;;		_gpio_pin_direction_initialize
  4413 ;;		_gpio_pin_write_logic
  4414 ;; This function is called by:
  4415 ;;		_lcd_4bit_initialize
  4416 ;;		_keypad_initialize
  4417 ;;		_lcd_8bit_initialize
  4418 ;; This function uses a non-reentrant model
  4419 ;;
  4420                           
  4421                           	psect	text27
  4422   0023CE                     __ptext27:
  4423                           	callstack 0
  4424   0023CE                     _gpio_pin_initialize:
  4425                           	callstack 27
  4426   0023CE                     
  4427                           ;MCAL/GPIO/hal_gpio.c: 150:     if(((void*)0) == _pin_config || (_pin_config->pin > (8 -
      +                           1))){
  4428   0023CE  500B               	movf	gpio_pin_initialize@_pin_config^0,w,c
  4429   0023D0  100C               	iorwf	(gpio_pin_initialize@_pin_config+1)^0,w,c
  4430   0023D2  B4D8               	btfsc	status,2,c
  4431   0023D4  EFEE  F011         	goto	u1661
  4432   0023D8  EFF0  F011         	goto	u1660
  4433   0023DC                     u1661:
  4434   0023DC  EF01  F012         	goto	l2532
  4435   0023E0                     u1660:
  4436   0023E0  C00B  FFD9         	movff	gpio_pin_initialize@_pin_config,fsr2l
  4437   0023E4  C00C  FFDA         	movff	gpio_pin_initialize@_pin_config+1,fsr2h
  4438   0023E8  30DF               	rrcf	223,w,c
  4439   0023EA  32E8               	rrcf	wreg,f,c
  4440   0023EC  32E8               	rrcf	wreg,f,c
  4441   0023EE  0B07               	andlw	7
  4442   0023F0  6E0D               	movwf	??_gpio_pin_initialize^0,c
  4443   0023F2  0E07               	movlw	7
  4444   0023F4  640D               	cpfsgt	??_gpio_pin_initialize^0,c
  4445   0023F6  EFFF  F011         	goto	u1671
  4446   0023FA  EF01  F012         	goto	u1670
  4447   0023FE                     u1671:
  4448   0023FE  EF05  F012         	goto	l2534
  4449   002402                     u1670:
  4450   002402                     l2532:
  4451                           
  4452                           ;MCAL/GPIO/hal_gpio.c: 151:         ret = (Std_ReturnType)0x00;
  4453   002402  0E00               	movlw	0
  4454   002404  6E0E               	movwf	gpio_pin_initialize@ret^0,c
  4455                           
  4456                           ;MCAL/GPIO/hal_gpio.c: 152:     }
  4457   002406  EF1B  F012         	goto	l2536
  4458   00240A                     l2534:
  4459                           
  4460                           ;MCAL/GPIO/hal_gpio.c: 154:          ret = gpio_pin_direction_initialize(_pin_config);
  4461   00240A  C00B  F001         	movff	gpio_pin_initialize@_pin_config,gpio_pin_direction_initialize@_pin_config
  4462   00240E  C00C  F002         	movff	gpio_pin_initialize@_pin_config+1,gpio_pin_direction_initialize@_pin_config+1
  4463   002412  EC33  F00B         	call	_gpio_pin_direction_initialize	;wreg free
  4464   002416  6E0E               	movwf	gpio_pin_initialize@ret^0,c
  4465                           
  4466                           ;MCAL/GPIO/hal_gpio.c: 155:          ret = gpio_pin_write_logic(_pin_config, _pin_config
      +                          ->logic);
  4467   002418  C00B  F001         	movff	gpio_pin_initialize@_pin_config,gpio_pin_write_logic@_pin_config
  4468   00241C  C00C  F002         	movff	gpio_pin_initialize@_pin_config+1,gpio_pin_write_logic@_pin_config+1
  4469   002420  C00B  FFD9         	movff	gpio_pin_initialize@_pin_config,fsr2l
  4470   002424  C00C  FFDA         	movff	gpio_pin_initialize@_pin_config+1,fsr2h
  4471   002428  0E00               	movlw	0
  4472   00242A  BEDF               	btfsc	indf2,7,c
  4473   00242C  0E01               	movlw	1
  4474   00242E  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  4475   002430  ECD5  F00B         	call	_gpio_pin_write_logic	;wreg free
  4476   002434  6E0E               	movwf	gpio_pin_initialize@ret^0,c
  4477   002436                     l2536:
  4478                           
  4479                           ;MCAL/GPIO/hal_gpio.c: 157:     return ret;
  4480   002436  500E               	movf	gpio_pin_initialize@ret^0,w,c
  4481   002438  0012               	return		;funcret
  4482   00243A                     __end_of_gpio_pin_initialize:
  4483                           	callstack 0
  4484                           
  4485 ;; *************** function _gpio_pin_write_logic *****************
  4486 ;; Defined at:
  4487 ;;		line 78 in file "MCAL/GPIO/hal_gpio.c"
  4488 ;; Parameters:    Size  Location     Type
  4489 ;;  _pin_config     2    0[COMRAM] PTR const struct .
  4490 ;;		 -> key_1.keypad_row_pins(4), key_1(8), lcd_1.lcd_data(4), lcd_1(6), 
  4491 ;;  logic           1    2[COMRAM] enum E2968
  4492 ;; Auto vars:     Size  Location     Type
  4493 ;;  ret             1    9[COMRAM] unsigned char 
  4494 ;; Return value:  Size  Location     Type
  4495 ;;                  1    wreg      unsigned char 
  4496 ;; Registers used:
  4497 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4498 ;; Tracked objects:
  4499 ;;		On entry : 0/0
  4500 ;;		On exit  : 0/0
  4501 ;;		Unchanged: 0/0
  4502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4503 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4504 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4505 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4506 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4507 ;;Total ram usage:       10 bytes
  4508 ;; Hardware stack levels used: 1
  4509 ;; This function calls:
  4510 ;;		Nothing
  4511 ;; This function is called by:
  4512 ;;		_lcd_4bit_send_command
  4513 ;;		_lcd_4bit_send_char_data
  4514 ;;		_lcd_send_4bits
  4515 ;;		_lcd_4bit_send_enable_signal
  4516 ;;		_keypad_get_value
  4517 ;;		_gpio_pin_initialize
  4518 ;;		_lcd_8bit_send_command
  4519 ;;		_lcd_8bit_send_char_data
  4520 ;;		_lcd_8bit_send_enable_signal
  4521 ;; This function uses a non-reentrant model
  4522 ;;
  4523                           
  4524                           	psect	text28
  4525   0017AA                     __ptext28:
  4526                           	callstack 0
  4527   0017AA                     _gpio_pin_write_logic:
  4528                           	callstack 26
  4529   0017AA                     
  4530                           ;MCAL/GPIO/hal_gpio.c: 79:     Std_ReturnType ret = (Std_ReturnType)0x01;
  4531   0017AA  0E01               	movlw	1
  4532   0017AC  6E0A               	movwf	gpio_pin_write_logic@ret^0,c
  4533   0017AE                     
  4534                           ;MCAL/GPIO/hal_gpio.c: 80:     if((((void*)0) == _pin_config) || (_pin_config->pin > (8 
      +                          - 1))){
  4535   0017AE  5001               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  4536   0017B0  1002               	iorwf	(gpio_pin_write_logic@_pin_config+1)^0,w,c
  4537   0017B2  B4D8               	btfsc	status,2,c
  4538   0017B4  EFDE  F00B         	goto	u1431
  4539   0017B8  EFE0  F00B         	goto	u1430
  4540   0017BC                     u1431:
  4541   0017BC  EFF1  F00B         	goto	l2380
  4542   0017C0                     u1430:
  4543   0017C0  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  4544   0017C4  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  4545   0017C8  30DF               	rrcf	223,w,c
  4546   0017CA  32E8               	rrcf	wreg,f,c
  4547   0017CC  32E8               	rrcf	wreg,f,c
  4548   0017CE  0B07               	andlw	7
  4549   0017D0  6E04               	movwf	??_gpio_pin_write_logic^0,c
  4550   0017D2  0E07               	movlw	7
  4551   0017D4  6404               	cpfsgt	??_gpio_pin_write_logic^0,c
  4552   0017D6  EFEF  F00B         	goto	u1441
  4553   0017DA  EFF1  F00B         	goto	u1440
  4554   0017DE                     u1441:
  4555   0017DE  EF54  F00C         	goto	l2388
  4556   0017E2                     u1440:
  4557   0017E2                     l2380:
  4558                           
  4559                           ;MCAL/GPIO/hal_gpio.c: 81:         ret = (Std_ReturnType)0x00;
  4560   0017E2  0E00               	movlw	0
  4561   0017E4  6E0A               	movwf	gpio_pin_write_logic@ret^0,c
  4562                           
  4563                           ;MCAL/GPIO/hal_gpio.c: 82:     }
  4564   0017E6  EF69  F00C         	goto	l2390
  4565   0017EA                     l2382:
  4566                           
  4567                           ;MCAL/GPIO/hal_gpio.c: 86:                 (*lat_registers[_pin_config->port] &= ~((uint
      +                          8)1 << _pin_config->pin));
  4568   0017EA  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  4569   0017EE  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  4570   0017F2  30DF               	rrcf	223,w,c
  4571   0017F4  32E8               	rrcf	wreg,f,c
  4572   0017F6  32E8               	rrcf	wreg,f,c
  4573   0017F8  0B07               	andlw	7
  4574   0017FA  6E04               	movwf	??_gpio_pin_write_logic^0,c
  4575   0017FC  0E01               	movlw	1
  4576   0017FE  6E05               	movwf	(??_gpio_pin_write_logic+1)^0,c
  4577   001800  2A04               	incf	??_gpio_pin_write_logic^0,f,c
  4578   001802  EF05  F00C         	goto	u1454
  4579   001806                     u1455:
  4580   001806  90D8               	bcf	status,0,c
  4581   001808  3605               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  4582   00180A                     u1454:
  4583   00180A  2E04               	decfsz	??_gpio_pin_write_logic^0,f,c
  4584   00180C  EF03  F00C         	goto	u1455
  4585   001810  5005               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  4586   001812  0AFF               	xorlw	255
  4587   001814  6E06               	movwf	(??_gpio_pin_write_logic+2)^0,c
  4588   001816  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  4589   00181A  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  4590   00181E  50DF               	movf	223,w,c
  4591   001820  0B07               	andlw	7
  4592   001822  6E07               	movwf	(??_gpio_pin_write_logic+3)^0,c
  4593   001824  5007               	movf	(??_gpio_pin_write_logic+3)^0,w,c
  4594   001826  0D02               	mullw	2
  4595   001828  0EB6               	movlw	low _lat_registers
  4596   00182A  24F3               	addwf	243,w,c
  4597   00182C  6ED9               	movwf	fsr2l,c
  4598   00182E  0E00               	movlw	high _lat_registers
  4599   001830  20F4               	addwfc	prodh,w,c
  4600   001832  6EDA               	movwf	fsr2h,c
  4601   001834  CFDE F008          	movff	postinc2,??_gpio_pin_write_logic+4
  4602   001838  CFDD F009          	movff	postdec2,??_gpio_pin_write_logic+5
  4603   00183C  C008  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  4604   001840  C009  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  4605   001844  5006               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  4606   001846  16DF               	andwf	indf2,f,c
  4607                           
  4608                           ;MCAL/GPIO/hal_gpio.c: 87:                 break;
  4609   001848  EF69  F00C         	goto	l2390
  4610   00184C                     l2384:
  4611                           
  4612                           ;MCAL/GPIO/hal_gpio.c: 89:                 (*lat_registers[_pin_config->port] |= ((uint8
      +                          )1 << _pin_config->pin));
  4613   00184C  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  4614   001850  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  4615   001854  30DF               	rrcf	223,w,c
  4616   001856  32E8               	rrcf	wreg,f,c
  4617   001858  32E8               	rrcf	wreg,f,c
  4618   00185A  0B07               	andlw	7
  4619   00185C  6E04               	movwf	??_gpio_pin_write_logic^0,c
  4620   00185E  0E01               	movlw	1
  4621   001860  6E05               	movwf	(??_gpio_pin_write_logic+1)^0,c
  4622   001862  2A04               	incf	??_gpio_pin_write_logic^0,f,c
  4623   001864  EF36  F00C         	goto	u1464
  4624   001868                     u1465:
  4625   001868  90D8               	bcf	status,0,c
  4626   00186A  3605               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  4627   00186C                     u1464:
  4628   00186C  2E04               	decfsz	??_gpio_pin_write_logic^0,f,c
  4629   00186E  EF34  F00C         	goto	u1465
  4630   001872  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  4631   001876  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  4632   00187A  50DF               	movf	223,w,c
  4633   00187C  0B07               	andlw	7
  4634   00187E  6E06               	movwf	(??_gpio_pin_write_logic+2)^0,c
  4635   001880  5006               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  4636   001882  0D02               	mullw	2
  4637   001884  0EB6               	movlw	low _lat_registers
  4638   001886  24F3               	addwf	243,w,c
  4639   001888  6ED9               	movwf	fsr2l,c
  4640   00188A  0E00               	movlw	high _lat_registers
  4641   00188C  20F4               	addwfc	prodh,w,c
  4642   00188E  6EDA               	movwf	fsr2h,c
  4643   001890  CFDE F007          	movff	postinc2,??_gpio_pin_write_logic+3
  4644   001894  CFDD F008          	movff	postdec2,??_gpio_pin_write_logic+4
  4645   001898  C007  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  4646   00189C  C008  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  4647   0018A0  5005               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  4648   0018A2  12DF               	iorwf	indf2,f,c
  4649                           
  4650                           ;MCAL/GPIO/hal_gpio.c: 90:                 break;
  4651   0018A4  EF69  F00C         	goto	l2390
  4652   0018A8                     l2388:
  4653   0018A8  5003               	movf	gpio_pin_write_logic@logic^0,w,c
  4654   0018AA  6E04               	movwf	??_gpio_pin_write_logic^0,c
  4655   0018AC  6A05               	clrf	(??_gpio_pin_write_logic+1)^0,c
  4656                           
  4657                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4658                           ; Switch size 1, requested type "simple"
  4659                           ; Number of cases is 1, Range of values is 0 to 0
  4660                           ; switch strategies available:
  4661                           ; Name         Instructions Cycles
  4662                           ; simple_byte            4     3 (average)
  4663                           ;	Chosen strategy is simple_byte
  4664   0018AE  5005               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  4665   0018B0  0A00               	xorlw	0	; case 0
  4666   0018B2  B4D8               	btfsc	status,2,c
  4667   0018B4  EF5E  F00C         	goto	l3398
  4668   0018B8  EFF1  F00B         	goto	l2380
  4669   0018BC                     l3398:
  4670                           
  4671                           ; Switch size 1, requested type "simple"
  4672                           ; Number of cases is 2, Range of values is 0 to 1
  4673                           ; switch strategies available:
  4674                           ; Name         Instructions Cycles
  4675                           ; simple_byte            7     4 (average)
  4676                           ;	Chosen strategy is simple_byte
  4677   0018BC  5004               	movf	??_gpio_pin_write_logic^0,w,c
  4678   0018BE  0A00               	xorlw	0	; case 0
  4679   0018C0  B4D8               	btfsc	status,2,c
  4680   0018C2  EFF5  F00B         	goto	l2382
  4681   0018C6  0A01               	xorlw	1	; case 1
  4682   0018C8  B4D8               	btfsc	status,2,c
  4683   0018CA  EF26  F00C         	goto	l2384
  4684   0018CE  EFF1  F00B         	goto	l2380
  4685   0018D2                     l2390:
  4686                           
  4687                           ;MCAL/GPIO/hal_gpio.c: 95:     return ret;
  4688   0018D2  500A               	movf	gpio_pin_write_logic@ret^0,w,c
  4689   0018D4  0012               	return		;funcret
  4690   0018D6                     __end_of_gpio_pin_write_logic:
  4691                           	callstack 0
  4692                           
  4693 ;; *************** function _gpio_pin_direction_initialize *****************
  4694 ;; Defined at:
  4695 ;;		line 26 in file "MCAL/GPIO/hal_gpio.c"
  4696 ;; Parameters:    Size  Location     Type
  4697 ;;  _pin_config     2    0[COMRAM] PTR const struct .
  4698 ;;		 -> key_1.keypad_columns_pins(4), key_1.keypad_row_pins(4), key_1(8), lcd_1.lcd_data(4), 
  4699 ;;		 -> lcd_1(6), 
  4700 ;; Auto vars:     Size  Location     Type
  4701 ;;  ret             1    8[COMRAM] unsigned char 
  4702 ;; Return value:  Size  Location     Type
  4703 ;;                  1    wreg      unsigned char 
  4704 ;; Registers used:
  4705 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4706 ;; Tracked objects:
  4707 ;;		On entry : 0/0
  4708 ;;		On exit  : 0/0
  4709 ;;		Unchanged: 0/0
  4710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4711 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4712 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4713 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4714 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4715 ;;Total ram usage:        9 bytes
  4716 ;; Hardware stack levels used: 1
  4717 ;; This function calls:
  4718 ;;		Nothing
  4719 ;; This function is called by:
  4720 ;;		_keypad_initialize
  4721 ;;		_gpio_pin_initialize
  4722 ;; This function uses a non-reentrant model
  4723 ;;
  4724                           
  4725                           	psect	text29
  4726   001666                     __ptext29:
  4727                           	callstack 0
  4728   001666                     _gpio_pin_direction_initialize:
  4729                           	callstack 27
  4730   001666                     
  4731                           ;MCAL/GPIO/hal_gpio.c: 27:     Std_ReturnType ret = (Std_ReturnType)0x01;
  4732   001666  0E01               	movlw	1
  4733   001668  6E09               	movwf	gpio_pin_direction_initialize@ret^0,c
  4734   00166A                     
  4735                           ;MCAL/GPIO/hal_gpio.c: 29:     if(((void*)0) == _pin_config || (_pin_config->pin > (8 - 
      +                          1))){
  4736   00166A  5001               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  4737   00166C  1002               	iorwf	(gpio_pin_direction_initialize@_pin_config+1)^0,w,c
  4738   00166E  B4D8               	btfsc	status,2,c
  4739   001670  EF3C  F00B         	goto	u1571
  4740   001674  EF3E  F00B         	goto	u1570
  4741   001678                     u1571:
  4742   001678  EF4F  F00B         	goto	l2478
  4743   00167C                     u1570:
  4744   00167C  C001  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  4745   001680  C002  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  4746   001684  30DF               	rrcf	223,w,c
  4747   001686  32E8               	rrcf	wreg,f,c
  4748   001688  32E8               	rrcf	wreg,f,c
  4749   00168A  0B07               	andlw	7
  4750   00168C  6E03               	movwf	??_gpio_pin_direction_initialize^0,c
  4751   00168E  0E07               	movlw	7
  4752   001690  6403               	cpfsgt	??_gpio_pin_direction_initialize^0,c
  4753   001692  EF4D  F00B         	goto	u1581
  4754   001696  EF4F  F00B         	goto	u1580
  4755   00169A                     u1581:
  4756   00169A  EFB2  F00B         	goto	l2486
  4757   00169E                     u1580:
  4758   00169E                     l2478:
  4759                           
  4760                           ;MCAL/GPIO/hal_gpio.c: 30:         ret = (Std_ReturnType)0x00;
  4761   00169E  0E00               	movlw	0
  4762   0016A0  6E09               	movwf	gpio_pin_direction_initialize@ret^0,c
  4763                           
  4764                           ;MCAL/GPIO/hal_gpio.c: 31:     }
  4765   0016A2  EFD3  F00B         	goto	l2488
  4766   0016A6                     l2480:
  4767                           
  4768                           ;MCAL/GPIO/hal_gpio.c: 35:             (*tris_registers[_pin_config->port] &= ~((uint8)1
      +                           << _pin_config->pin));
  4769   0016A6  C001  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  4770   0016AA  C002  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  4771   0016AE  30DF               	rrcf	223,w,c
  4772   0016B0  32E8               	rrcf	wreg,f,c
  4773   0016B2  32E8               	rrcf	wreg,f,c
  4774   0016B4  0B07               	andlw	7
  4775   0016B6  6E03               	movwf	??_gpio_pin_direction_initialize^0,c
  4776   0016B8  0E01               	movlw	1
  4777   0016BA  6E04               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  4778   0016BC  2A03               	incf	??_gpio_pin_direction_initialize^0,f,c
  4779   0016BE  EF63  F00B         	goto	u1594
  4780   0016C2                     u1595:
  4781   0016C2  90D8               	bcf	status,0,c
  4782   0016C4  3604               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  4783   0016C6                     u1594:
  4784   0016C6  2E03               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  4785   0016C8  EF61  F00B         	goto	u1595
  4786   0016CC  5004               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  4787   0016CE  0AFF               	xorlw	255
  4788   0016D0  6E05               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  4789   0016D2  C001  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  4790   0016D6  C002  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  4791   0016DA  50DF               	movf	223,w,c
  4792   0016DC  0B07               	andlw	7
  4793   0016DE  6E06               	movwf	(??_gpio_pin_direction_initialize+3)^0,c
  4794   0016E0  5006               	movf	(??_gpio_pin_direction_initialize+3)^0,w,c
  4795   0016E2  0D02               	mullw	2
  4796   0016E4  0EC0               	movlw	low _tris_registers
  4797   0016E6  24F3               	addwf	243,w,c
  4798   0016E8  6ED9               	movwf	fsr2l,c
  4799   0016EA  0E00               	movlw	high _tris_registers
  4800   0016EC  20F4               	addwfc	prodh,w,c
  4801   0016EE  6EDA               	movwf	fsr2h,c
  4802   0016F0  CFDE F007          	movff	postinc2,??_gpio_pin_direction_initialize+4
  4803   0016F4  CFDD F008          	movff	postdec2,??_gpio_pin_direction_initialize+5
  4804   0016F8  C007  FFD9         	movff	??_gpio_pin_direction_initialize+4,fsr2l
  4805   0016FC  C008  FFDA         	movff	??_gpio_pin_direction_initialize+5,fsr2h
  4806   001700  5005               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  4807   001702  16DF               	andwf	indf2,f,c
  4808                           
  4809                           ;MCAL/GPIO/hal_gpio.c: 36:             break;
  4810   001704  EFD3  F00B         	goto	l2488
  4811   001708                     l2482:
  4812                           
  4813                           ;MCAL/GPIO/hal_gpio.c: 38:             (*tris_registers[_pin_config->port] |= ((uint8)1 
      +                          << _pin_config->pin));
  4814   001708  C001  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  4815   00170C  C002  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  4816   001710  30DF               	rrcf	223,w,c
  4817   001712  32E8               	rrcf	wreg,f,c
  4818   001714  32E8               	rrcf	wreg,f,c
  4819   001716  0B07               	andlw	7
  4820   001718  6E03               	movwf	??_gpio_pin_direction_initialize^0,c
  4821   00171A  0E01               	movlw	1
  4822   00171C  6E04               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  4823   00171E  2A03               	incf	??_gpio_pin_direction_initialize^0,f,c
  4824   001720  EF94  F00B         	goto	u1604
  4825   001724                     u1605:
  4826   001724  90D8               	bcf	status,0,c
  4827   001726  3604               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  4828   001728                     u1604:
  4829   001728  2E03               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  4830   00172A  EF92  F00B         	goto	u1605
  4831   00172E  C001  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  4832   001732  C002  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  4833   001736  50DF               	movf	223,w,c
  4834   001738  0B07               	andlw	7
  4835   00173A  6E05               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  4836   00173C  5005               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  4837   00173E  0D02               	mullw	2
  4838   001740  0EC0               	movlw	low _tris_registers
  4839   001742  24F3               	addwf	243,w,c
  4840   001744  6ED9               	movwf	fsr2l,c
  4841   001746  0E00               	movlw	high _tris_registers
  4842   001748  20F4               	addwfc	prodh,w,c
  4843   00174A  6EDA               	movwf	fsr2h,c
  4844   00174C  CFDE F006          	movff	postinc2,??_gpio_pin_direction_initialize+3
  4845   001750  CFDD F007          	movff	postdec2,??_gpio_pin_direction_initialize+4
  4846   001754  C006  FFD9         	movff	??_gpio_pin_direction_initialize+3,fsr2l
  4847   001758  C007  FFDA         	movff	??_gpio_pin_direction_initialize+4,fsr2h
  4848   00175C  5004               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  4849   00175E  12DF               	iorwf	indf2,f,c
  4850                           
  4851                           ;MCAL/GPIO/hal_gpio.c: 39:             break;
  4852   001760  EFD3  F00B         	goto	l2488
  4853   001764                     l2486:
  4854   001764  C001  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  4855   001768  C002  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  4856   00176C  BCDF               	btfsc	indf2,6,c
  4857   00176E  EFBB  F00B         	goto	u1611
  4858   001772  EFBE  F00B         	goto	u1610
  4859   001776                     u1611:
  4860   001776  0E01               	movlw	1
  4861   001778  EFBF  F00B         	goto	u1620
  4862   00177C                     u1610:
  4863   00177C  0E00               	movlw	0
  4864   00177E                     u1620:
  4865   00177E  6E03               	movwf	??_gpio_pin_direction_initialize^0,c
  4866   001780  6A04               	clrf	(??_gpio_pin_direction_initialize+1)^0,c
  4867                           
  4868                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4869                           ; Switch size 1, requested type "simple"
  4870                           ; Number of cases is 1, Range of values is 0 to 0
  4871                           ; switch strategies available:
  4872                           ; Name         Instructions Cycles
  4873                           ; simple_byte            4     3 (average)
  4874                           ;	Chosen strategy is simple_byte
  4875   001782  5004               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  4876   001784  0A00               	xorlw	0	; case 0
  4877   001786  B4D8               	btfsc	status,2,c
  4878   001788  EFC8  F00B         	goto	l3400
  4879   00178C  EFD3  F00B         	goto	l2488
  4880   001790                     l3400:
  4881                           
  4882                           ; Switch size 1, requested type "simple"
  4883                           ; Number of cases is 2, Range of values is 0 to 1
  4884                           ; switch strategies available:
  4885                           ; Name         Instructions Cycles
  4886                           ; simple_byte            7     4 (average)
  4887                           ;	Chosen strategy is simple_byte
  4888   001790  5003               	movf	??_gpio_pin_direction_initialize^0,w,c
  4889   001792  0A00               	xorlw	0	; case 0
  4890   001794  B4D8               	btfsc	status,2,c
  4891   001796  EF53  F00B         	goto	l2480
  4892   00179A  0A01               	xorlw	1	; case 1
  4893   00179C  B4D8               	btfsc	status,2,c
  4894   00179E  EF84  F00B         	goto	l2482
  4895   0017A2  EFD3  F00B         	goto	l2488
  4896   0017A6                     l2488:
  4897                           
  4898                           ;MCAL/GPIO/hal_gpio.c: 43:     return ret;
  4899   0017A6  5009               	movf	gpio_pin_direction_initialize@ret^0,w,c
  4900   0017A8  0012               	return		;funcret
  4901   0017AA                     __end_of_gpio_pin_direction_initialize:
  4902                           	callstack 0
  4903                           
  4904 ;; *************** function ___lwdiv *****************
  4905 ;; Defined at:
  4906 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\lwdiv.c"
  4907 ;; Parameters:    Size  Location     Type
  4908 ;;  dividend        2    0[COMRAM] unsigned int 
  4909 ;;  divisor         2    2[COMRAM] unsigned int 
  4910 ;; Auto vars:     Size  Location     Type
  4911 ;;  quotient        2    4[COMRAM] unsigned int 
  4912 ;;  counter         1    6[COMRAM] unsigned char 
  4913 ;; Return value:  Size  Location     Type
  4914 ;;                  2    0[COMRAM] unsigned int 
  4915 ;; Registers used:
  4916 ;;		wreg, status,2, status,0
  4917 ;; Tracked objects:
  4918 ;;		On entry : 0/0
  4919 ;;		On exit  : 0/0
  4920 ;;		Unchanged: 0/0
  4921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4922 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4923 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4925 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4926 ;;Total ram usage:        7 bytes
  4927 ;; Hardware stack levels used: 1
  4928 ;; This function calls:
  4929 ;;		Nothing
  4930 ;; This function is called by:
  4931 ;;		_main
  4932 ;; This function uses a non-reentrant model
  4933 ;;
  4934                           
  4935                           	psect	text30
  4936   002276                     __ptext30:
  4937                           	callstack 0
  4938   002276                     ___lwdiv:
  4939                           	callstack 30
  4940   002276  0E00               	movlw	0
  4941   002278  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  4942   00227A  0E00               	movlw	0
  4943   00227C  6E05               	movwf	___lwdiv@quotient^0,c
  4944   00227E  5003               	movf	___lwdiv@divisor^0,w,c
  4945   002280  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  4946   002282  B4D8               	btfsc	status,2,c
  4947   002284  EF46  F011         	goto	u2101
  4948   002288  EF48  F011         	goto	u2100
  4949   00228C                     u2101:
  4950   00228C  EF70  F011         	goto	l889
  4951   002290                     u2100:
  4952   002290  0E01               	movlw	1
  4953   002292  6E07               	movwf	___lwdiv@counter^0,c
  4954   002294  EF50  F011         	goto	l2968
  4955   002298                     l2966:
  4956   002298  90D8               	bcf	status,0,c
  4957   00229A  3603               	rlcf	___lwdiv@divisor^0,f,c
  4958   00229C  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  4959   00229E  2A07               	incf	___lwdiv@counter^0,f,c
  4960   0022A0                     l2968:
  4961   0022A0  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  4962   0022A2  EF55  F011         	goto	u2111
  4963   0022A6  EF57  F011         	goto	u2110
  4964   0022AA                     u2111:
  4965   0022AA  EF4C  F011         	goto	l2966
  4966   0022AE                     u2110:
  4967   0022AE                     l2970:
  4968   0022AE  90D8               	bcf	status,0,c
  4969   0022B0  3605               	rlcf	___lwdiv@quotient^0,f,c
  4970   0022B2  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  4971   0022B4  5003               	movf	___lwdiv@divisor^0,w,c
  4972   0022B6  5C01               	subwf	___lwdiv@dividend^0,w,c
  4973   0022B8  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  4974   0022BA  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  4975   0022BC  A0D8               	btfss	status,0,c
  4976   0022BE  EF63  F011         	goto	u2121
  4977   0022C2  EF65  F011         	goto	u2120
  4978   0022C6                     u2121:
  4979   0022C6  EF6A  F011         	goto	l2978
  4980   0022CA                     u2120:
  4981   0022CA  5003               	movf	___lwdiv@divisor^0,w,c
  4982   0022CC  5E01               	subwf	___lwdiv@dividend^0,f,c
  4983   0022CE  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  4984   0022D0  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  4985   0022D2  8005               	bsf	___lwdiv@quotient^0,0,c
  4986   0022D4                     l2978:
  4987   0022D4  90D8               	bcf	status,0,c
  4988   0022D6  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  4989   0022D8  3203               	rrcf	___lwdiv@divisor^0,f,c
  4990   0022DA  2E07               	decfsz	___lwdiv@counter^0,f,c
  4991   0022DC  EF57  F011         	goto	l2970
  4992   0022E0                     l889:
  4993   0022E0  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  4994   0022E4  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4995   0022E8  0012               	return		;funcret
  4996   0022EA                     __end_of___lwdiv:
  4997                           	callstack 0
  4998                           
  4999 ;; *************** function _Number_return *****************
  5000 ;; Defined at:
  5001 ;;		line 207 in file "application.c"
  5002 ;; Parameters:    Size  Location     Type
  5003 ;;  arr             2    6[COMRAM] PTR unsigned char 
  5004 ;;		 -> SecondNumber(4), FirstNumber(4), 
  5005 ;;  count           1    8[COMRAM] unsigned char 
  5006 ;; Auto vars:     Size  Location     Type
  5007 ;;  i               2   14[COMRAM] int 
  5008 ;;  num             2   12[COMRAM] unsigned short 
  5009 ;; Return value:  Size  Location     Type
  5010 ;;                  2    6[COMRAM] unsigned short 
  5011 ;; Registers used:
  5012 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5013 ;; Tracked objects:
  5014 ;;		On entry : 0/0
  5015 ;;		On exit  : 0/0
  5016 ;;		Unchanged: 0/0
  5017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5018 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5019 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5020 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5021 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5022 ;;Total ram usage:       10 bytes
  5023 ;; Hardware stack levels used: 1
  5024 ;; Hardware stack levels required when called: 1
  5025 ;; This function calls:
  5026 ;;		___wmul
  5027 ;; This function is called by:
  5028 ;;		_main
  5029 ;; This function uses a non-reentrant model
  5030 ;;
  5031                           
  5032                           	psect	text31
  5033   00217E                     __ptext31:
  5034                           	callstack 0
  5035   00217E                     _Number_return:
  5036                           	callstack 29
  5037   00217E                     
  5038                           ;application.c: 208:     uint16 num = 0;
  5039   00217E  0E00               	movlw	0
  5040   002180  6E0E               	movwf	(Number_return@num+1)^0,c
  5041   002182  0E00               	movlw	0
  5042   002184  6E0D               	movwf	Number_return@num^0,c
  5043                           
  5044                           ;application.c: 209:     for(int i = 0; i < count; i++){
  5045   002186  0E00               	movlw	0
  5046   002188  6E10               	movwf	(Number_return@i+1)^0,c
  5047   00218A  0E00               	movlw	0
  5048   00218C  6E0F               	movwf	Number_return@i^0,c
  5049   00218E  EFE7  F010         	goto	l2958
  5050   002192                     l2954:
  5051                           
  5052                           ;application.c: 210:         num = num * 10 + (arr[i] - '0');
  5053   002192  C00D  F001         	movff	Number_return@num,___wmul@multiplier
  5054   002196  C00E  F002         	movff	Number_return@num+1,___wmul@multiplier+1
  5055   00219A  0E00               	movlw	0
  5056   00219C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  5057   00219E  0E0A               	movlw	10
  5058   0021A0  6E03               	movwf	___wmul@multiplicand^0,c
  5059   0021A2  EC78  F013         	call	___wmul	;wreg free
  5060   0021A6  500F               	movf	Number_return@i^0,w,c
  5061   0021A8  2407               	addwf	Number_return@arr^0,w,c
  5062   0021AA  6ED9               	movwf	fsr2l,c
  5063   0021AC  5010               	movf	(Number_return@i+1)^0,w,c
  5064   0021AE  2008               	addwfc	(Number_return@arr+1)^0,w,c
  5065   0021B0  6EDA               	movwf	fsr2h,c
  5066   0021B2  50DF               	movf	indf2,w,c
  5067   0021B4  6E0A               	movwf	??_Number_return^0,c
  5068   0021B6  500A               	movf	??_Number_return^0,w,c
  5069   0021B8  2601               	addwf	?___wmul^0,f,c
  5070   0021BA  0E00               	movlw	0
  5071   0021BC  2202               	addwfc	(?___wmul+1)^0,f,c
  5072   0021BE  0ED0               	movlw	208
  5073   0021C0  2401               	addwf	?___wmul^0,w,c
  5074   0021C2  6E0D               	movwf	Number_return@num^0,c
  5075   0021C4  0EFF               	movlw	255
  5076   0021C6  2002               	addwfc	(?___wmul+1)^0,w,c
  5077   0021C8  6E0E               	movwf	(Number_return@num+1)^0,c
  5078   0021CA                     
  5079                           ;application.c: 211:     }
  5080   0021CA  4A0F               	infsnz	Number_return@i^0,f,c
  5081   0021CC  2A10               	incf	(Number_return@i+1)^0,f,c
  5082   0021CE                     l2958:
  5083   0021CE  5009               	movf	Number_return@count^0,w,c
  5084   0021D0  6E0A               	movwf	??_Number_return^0,c
  5085   0021D2  6A0B               	clrf	(??_Number_return+1)^0,c
  5086   0021D4  500A               	movf	??_Number_return^0,w,c
  5087   0021D6  5C0F               	subwf	Number_return@i^0,w,c
  5088   0021D8  5010               	movf	(Number_return@i+1)^0,w,c
  5089   0021DA  0A80               	xorlw	128
  5090   0021DC  6E0C               	movwf	(??_Number_return+2)^0,c
  5091   0021DE  500B               	movf	(??_Number_return+1)^0,w,c
  5092   0021E0  0A80               	xorlw	128
  5093   0021E2  580C               	subwfb	(??_Number_return+2)^0,w,c
  5094   0021E4  A0D8               	btfss	status,0,c
  5095   0021E6  EFF7  F010         	goto	u2091
  5096   0021EA  EFF9  F010         	goto	u2090
  5097   0021EE                     u2091:
  5098   0021EE  EFC9  F010         	goto	l2954
  5099   0021F2                     u2090:
  5100   0021F2                     
  5101                           ;application.c: 212:     return num;
  5102   0021F2  C00D  F007         	movff	Number_return@num,?_Number_return
  5103   0021F6  C00E  F008         	movff	Number_return@num+1,?_Number_return+1
  5104   0021FA  0012               	return		;funcret
  5105   0021FC                     __end_of_Number_return:
  5106                           	callstack 0
  5107                           
  5108 ;; *************** function ___wmul *****************
  5109 ;; Defined at:
  5110 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
  5111 ;; Parameters:    Size  Location     Type
  5112 ;;  multiplier      2    0[COMRAM] unsigned int 
  5113 ;;  multiplicand    2    2[COMRAM] unsigned int 
  5114 ;; Auto vars:     Size  Location     Type
  5115 ;;  product         2    4[COMRAM] unsigned int 
  5116 ;; Return value:  Size  Location     Type
  5117 ;;                  2    0[COMRAM] unsigned int 
  5118 ;; Registers used:
  5119 ;;		wreg, status,2, status,0, prodl, prodh
  5120 ;; Tracked objects:
  5121 ;;		On entry : 0/0
  5122 ;;		On exit  : 0/0
  5123 ;;		Unchanged: 0/0
  5124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5125 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5126 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5128 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5129 ;;Total ram usage:        6 bytes
  5130 ;; Hardware stack levels used: 1
  5131 ;; This function calls:
  5132 ;;		Nothing
  5133 ;; This function is called by:
  5134 ;;		_main
  5135 ;;		_Number_return
  5136 ;; This function uses a non-reentrant model
  5137 ;;
  5138                           
  5139                           	psect	text32
  5140   0026F0                     __ptext32:
  5141                           	callstack 0
  5142   0026F0                     ___wmul:
  5143                           	callstack 30
  5144   0026F0  5001               	movf	___wmul@multiplier^0,w,c
  5145   0026F2  0203               	mulwf	___wmul@multiplicand^0,c
  5146   0026F4  CFF3 F005          	movff	prodl,___wmul@product
  5147   0026F8  CFF4 F006          	movff	prodh,___wmul@product+1
  5148   0026FC  5001               	movf	___wmul@multiplier^0,w,c
  5149   0026FE  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  5150   002700  50F3               	movf	243,w,c
  5151   002702  2606               	addwf	(___wmul@product+1)^0,f,c
  5152   002704  5002               	movf	(___wmul@multiplier+1)^0,w,c
  5153   002706  0203               	mulwf	___wmul@multiplicand^0,c
  5154   002708  50F3               	movf	243,w,c
  5155   00270A  2606               	addwf	(___wmul@product+1)^0,f,c
  5156   00270C  C005  F001         	movff	___wmul@product,?___wmul
  5157   002710  C006  F002         	movff	___wmul@product+1,?___wmul+1
  5158   002714  0012               	return		;funcret
  5159   002716                     __end_of___wmul:
  5160                           	callstack 0
  5161                           
  5162                           	psect	rparam
  5163   000000                     
  5164                           	psect	config
  5165                           
  5166                           ; Padding undefined space
  5167   300000                     	org	3145728
  5168   300000  FF                 	db	255
  5169                           
  5170                           ;Config register CONFIG1H @ 0x300001
  5171                           ;	Oscillator Selection bits
  5172                           ;	OSC = HS, HS oscillator
  5173                           ;	Fail-Safe Clock Monitor Enable bit
  5174                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5175                           ;	Internal/External Oscillator Switchover bit
  5176                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5177   300001                     	org	3145729
  5178   300001  02                 	db	2
  5179                           
  5180                           ;Config register CONFIG2L @ 0x300002
  5181                           ;	Power-up Timer Enable bit
  5182                           ;	PWRT = OFF, PWRT disabled
  5183                           ;	Brown-out Reset Enable bits
  5184                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  5185                           ;	Brown Out Reset Voltage bits
  5186                           ;	BORV = 1, 
  5187   300002                     	org	3145730
  5188   300002  09                 	db	9
  5189                           
  5190                           ;Config register CONFIG2H @ 0x300003
  5191                           ;	Watchdog Timer Enable bit
  5192                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5193                           ;	Watchdog Timer Postscale Select bits
  5194                           ;	WDTPS = 32768, 1:32768
  5195   300003                     	org	3145731
  5196   300003  1E                 	db	30
  5197                           
  5198                           ; Padding undefined space
  5199   300004                     	org	3145732
  5200   300004  FF                 	db	255
  5201                           
  5202                           ;Config register CONFIG3H @ 0x300005
  5203                           ;	CCP2 MUX bit
  5204                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  5205                           ;	PORTB A/D Enable bit
  5206                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  5207                           ;	Low-Power Timer1 Oscillator Enable bit
  5208                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5209                           ;	MCLR Pin Enable bit
  5210                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  5211   300005                     	org	3145733
  5212   300005  81                 	db	129
  5213                           
  5214                           ;Config register CONFIG4L @ 0x300006
  5215                           ;	Stack Full/Underflow Reset Enable bit
  5216                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5217                           ;	Single-Supply ICSP Enable bit
  5218                           ;	LVP = OFF, Single-Supply ICSP disabled
  5219                           ;	Extended Instruction Set Enable bit
  5220                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5221                           ;	Background Debugger Enable bit
  5222                           ;	DEBUG = 0x1, unprogrammed default
  5223   300006                     	org	3145734
  5224   300006  81                 	db	129
  5225                           
  5226                           ; Padding undefined space
  5227   300007                     	org	3145735
  5228   300007  FF                 	db	255
  5229                           
  5230                           ;Config register CONFIG5L @ 0x300008
  5231                           ;	Code Protection bit
  5232                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  5233                           ;	Code Protection bit
  5234                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  5235                           ;	Code Protection bit
  5236                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  5237                           ;	Code Protection bit
  5238                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  5239   300008                     	org	3145736
  5240   300008  0F                 	db	15
  5241                           
  5242                           ;Config register CONFIG5H @ 0x300009
  5243                           ;	Boot Block Code Protection bit
  5244                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  5245                           ;	Data EEPROM Code Protection bit
  5246                           ;	CPD = OFF, Data EEPROM not code-protected
  5247   300009                     	org	3145737
  5248   300009  C0                 	db	192
  5249                           
  5250                           ;Config register CONFIG6L @ 0x30000A
  5251                           ;	Write Protection bit
  5252                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  5253                           ;	Write Protection bit
  5254                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  5255                           ;	Write Protection bit
  5256                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  5257                           ;	Write Protection bit
  5258                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  5259   30000A                     	org	3145738
  5260   30000A  0F                 	db	15
  5261                           
  5262                           ;Config register CONFIG6H @ 0x30000B
  5263                           ;	Configuration Register Write Protection bit
  5264                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5265                           ;	Boot Block Write Protection bit
  5266                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  5267                           ;	Data EEPROM Write Protection bit
  5268                           ;	WRTD = OFF, Data EEPROM not write-protected
  5269   30000B                     	org	3145739
  5270   30000B  E0                 	db	224
  5271                           
  5272                           ;Config register CONFIG7L @ 0x30000C
  5273                           ;	Table Read Protection bit
  5274                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  5275                           ;	Table Read Protection bit
  5276                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  5277                           ;	Table Read Protection bit
  5278                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  5279                           ;	Table Read Protection bit
  5280                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  5281   30000C                     	org	3145740
  5282   30000C  0F                 	db	15
  5283                           
  5284                           ;Config register CONFIG7H @ 0x30000D
  5285                           ;	Boot Block Table Read Protection bit
  5286                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5287   30000D                     	org	3145741
  5288   30000D  40                 	db	64
  5289                           tosu	equ	0xFFF
  5290                           tosh	equ	0xFFE
  5291                           tosl	equ	0xFFD
  5292                           stkptr	equ	0xFFC
  5293                           pclatu	equ	0xFFB
  5294                           pclath	equ	0xFFA
  5295                           pcl	equ	0xFF9
  5296                           tblptru	equ	0xFF8
  5297                           tblptrh	equ	0xFF7
  5298                           tblptrl	equ	0xFF6
  5299                           tablat	equ	0xFF5
  5300                           prodh	equ	0xFF4
  5301                           prodl	equ	0xFF3
  5302                           indf0	equ	0xFEF
  5303                           postinc0	equ	0xFEE
  5304                           postdec0	equ	0xFED
  5305                           preinc0	equ	0xFEC
  5306                           plusw0	equ	0xFEB
  5307                           fsr0h	equ	0xFEA
  5308                           fsr0l	equ	0xFE9
  5309                           wreg	equ	0xFE8
  5310                           indf1	equ	0xFE7
  5311                           postinc1	equ	0xFE6
  5312                           postdec1	equ	0xFE5
  5313                           preinc1	equ	0xFE4
  5314                           plusw1	equ	0xFE3
  5315                           fsr1h	equ	0xFE2
  5316                           fsr1l	equ	0xFE1
  5317                           bsr	equ	0xFE0
  5318                           indf2	equ	0xFDF
  5319                           postinc2	equ	0xFDE
  5320                           postdec2	equ	0xFDD
  5321                           preinc2	equ	0xFDC
  5322                           plusw2	equ	0xFDB
  5323                           fsr2h	equ	0xFDA
  5324                           fsr2l	equ	0xFD9
  5325                           status	equ	0xFD8

Data Sizes:
    Strings     21
    Constant    16
    Data        44
    BSS         64
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     98     124
    BANK0           128      0      82
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1074$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 6
		 -> convert_short_to_string@Temp_String(COMRAM[6]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S1021$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1021$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memset@dest	PTR void  size(2) Largest target is 6
		 -> result(BANK0[6]), 

    memset@s	PTR unsigned char  size(2) Largest target is 6
		 -> result(BANK0[6]), 

    Number_return@arr	PTR unsigned char  size(2) Largest target is 4
		 -> SecondNumber(COMRAM[4]), FirstNumber(COMRAM[4]), 

    clearDataArrays@arr	PTR unsigned char  size(2) Largest target is 4
		 -> SecondNumber(COMRAM[4]), FirstNumber(COMRAM[4]), 

    gpio_pin_initialize@_pin_config	PTR const struct . size(2) Largest target is 8
		 -> key_1.keypad_row_pins(BANK0[4]), key_1(BANK0[8]), lcd_1.lcd_data(COMRAM[4]), lcd_1(COMRAM[6]), 

    gpio_pin_read_logic@logic	PTR enum E2968 size(2) Largest target is 1
		 -> keypad_get_value@column_logic(COMRAM[1]), 

    gpio_pin_read_logic@_pin_config	PTR const struct . size(2) Largest target is 8
		 -> key_1.keypad_columns_pins(BANK0[4]), key_1(BANK0[8]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(2) Largest target is 8
		 -> key_1.keypad_row_pins(BANK0[4]), key_1(BANK0[8]), lcd_1.lcd_data(COMRAM[4]), lcd_1(COMRAM[6]), 

    gpio_pin_direction_initialize@_pin_config	PTR const struct . size(2) Largest target is 8
		 -> key_1.keypad_columns_pins(BANK0[4]), key_1.keypad_row_pins(BANK0[4]), key_1(BANK0[8]), lcd_1.lcd_data(COMRAM[4]), 
		 -> lcd_1(COMRAM[6]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), 
		 -> PORTA(BITBIGSFRll[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATB(BITBIGSFRlh[1]), 
		 -> LATA(BITBIGSFRll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISB(BITBIGSFRh[1]), 
		 -> TRISA(BITBIGSFRll[1]), 

    keypad_get_value@value	PTR unsigned char  size(2) Largest target is 1
		 -> KeypadValue(COMRAM[1]), 

    keypad_get_value@_keypad_obj	PTR const struct . size(2) Largest target is 8
		 -> key_1(BANK0[8]), 

    keypad_initialize@_keypad_obj	PTR const struct . size(2) Largest target is 8
		 -> key_1(BANK0[8]), 

    lcd_4bit_set_cursor@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_send_enable_signal@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_send_4bits@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    convert_short_to_string@str	PTR unsigned char  size(2) Largest target is 6
		 -> result(BANK0[6]), 

    sp__memset	PTR void  size(2) Largest target is 6
		 -> result(BANK0[6]), 

    lcd_4bit_send_string_pos@str	PTR unsigned char  size(2) Largest target is 18
		 -> result(BANK0[6]), STR_4(CODE[18]), 

    lcd_4bit_send_string_pos@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_send_char_data_pos@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_send_char_data@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_initialize@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(COMRAM[6]), 


Critical Paths under _main in COMRAM

    _main->_convert_short_to_string
    _lcd_4bit_send_string_pos->_lcd_4bit_set_cursor
    _lcd_4bit_send_char_data_pos->_lcd_4bit_set_cursor
    _lcd_4bit_set_cursor->_lcd_4bit_send_command
    _lcd_4bit_send_char_data->_lcd_send_4bits
    _keypad_get_value->_gpio_pin_read_logic
    _keypad_get_value->_gpio_pin_write_logic
    _convert_short_to_string->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _app_initialize->_lcd_4bit_initialize
    _lcd_4bit_initialize->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bits
    _lcd_send_4bits->_gpio_pin_write_logic
    _lcd_4bit_send_enable_signal->_gpio_pin_write_logic
    _keypad_initialize->_gpio_pin_initialize
    _gpio_pin_initialize->_gpio_pin_write_logic
    _Number_return->___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   97534
                                             94 COMRAM     4     4      0
                      _Number_return
                            ___lwdiv
                             ___wmul
                     _app_initialize
                    _clearDataArrays
            _convert_short_to_string
                   _keypad_get_value
        _lcd_4bit_send_char_data_pos
              _lcd_4bit_send_command
           _lcd_4bit_send_string_pos
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_string_pos                             7     1      6   24171
                                             25 COMRAM     7     1      6
            _lcd_4bit_send_char_data
                _lcd_4bit_set_cursor
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_char_data_pos                          6     1      5   25060
                                             25 COMRAM     6     1      5
            _lcd_4bit_send_char_data
                _lcd_4bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_set_cursor                                  7     3      4   12944
                                             18 COMRAM     7     3      4
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_char_data                              4     1      3   10438
                                             14 COMRAM     4     1      3
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (1) _keypad_get_value                                    11     7      4    3831
                                             10 COMRAM    11     7      4
                _gpio_pin_read_logic
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_read_logic                                 10     6      4     308
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (1) _convert_short_to_string                             12     8      4    8137
                                             82 COMRAM    12     8      4
                            ___lwdiv (ARG)
                             ___wmul (ARG)
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             22    16      6    5851
                                             62 COMRAM    20    14      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    5196
                                             54 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           19    13      6    4846
                                             40 COMRAM    14     8      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                13     9      4    3626
                                             27 COMRAM    13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    1999
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _memset                                              12     6      6    1403
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (1) _clearDataArrays                                      4     1      3     394
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (1) _app_initialize                                       1     1      0   20870
                  _keypad_initialize
                _lcd_4bit_initialize
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_initialize                                  6     4      2   16468
                                             18 COMRAM     6     4      2
                _gpio_pin_initialize
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_command                                4     1      3   12262
                                             14 COMRAM     4     1      3
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (4) _lcd_send_4bits                                       4     1      3    3574
                                             10 COMRAM     4     1      3
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _lcd_4bit_send_enable_signal                          3     1      2    3136
                                             10 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _keypad_initialize                                    7     5      2    4399
                                             14 COMRAM     7     5      2
      _gpio_pin_direction_initialize
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_initialize                                  4     2      2    3762
                                             10 COMRAM     4     2      2
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_logic                                10     7      3    2763
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_direction_initialize                        9     7      2     331
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _Number_return                                       10     7      3    1403
                                              6 COMRAM    10     7      3
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     963
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Number_return
     ___wmul
   ___lwdiv
   ___wmul
   _app_initialize
     _keypad_initialize
       _gpio_pin_direction_initialize
       _gpio_pin_initialize
         _gpio_pin_direction_initialize
         _gpio_pin_write_logic
     _lcd_4bit_initialize
       _gpio_pin_initialize
       _lcd_4bit_send_command
         _gpio_pin_write_logic
         _lcd_4bit_send_enable_signal
           _gpio_pin_write_logic
         _lcd_send_4bits
           _gpio_pin_write_logic
   _clearDataArrays
   _convert_short_to_string
     ___lwdiv (ARG)
     ___wmul (ARG)
     _memset (ARG)
     _sprintf (ARG)
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
   _keypad_get_value
     _gpio_pin_read_logic
     _gpio_pin_write_logic
   _lcd_4bit_send_char_data_pos
     _lcd_4bit_send_char_data
       _gpio_pin_write_logic
       _lcd_4bit_send_enable_signal
       _lcd_send_4bits
     _lcd_4bit_set_cursor
       _lcd_4bit_send_command
   _lcd_4bit_send_command
   _lcd_4bit_send_string_pos
     _lcd_4bit_send_char_data
     _lcd_4bit_set_cursor

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      52       5       64.1%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     62      7C       1       97.6%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      CE      39        0.0%
DATA                 0      0      CE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Sep 19 01:47:24 2023

                         ?_lcd_send_4bits 000B                                        l31 1C08  
                                      l41 235A                                        l36 23CC  
                                      l46 25E2                                        l62 20FC  
                            ___awdiv@sign 0006                       ___wmul@multiplicand 0003  
                                     l130 1F04                                       l141 269C  
                                     l138 24A0                                       l164 205C  
                                     l245 17A8                                       l183 217C  
                                     l271 1E4E                                       l264 18D4  
                                     l363 1120                                       l285 2438  
                                     l197 1B04                                       l383 272E  
                                     l394 21F2                                       l642 1FB4  
                                     l395 21FA                                       l389 26C8  
                                     l629 1D96                                       l398 2714  
                                     l896 22E8                                       l889 22E0  
                    keypad_initialize@ret 0013                                       _abs 2628  
                                     _pad 21FC       __end_of_lcd_4bit_send_enable_signal 269E  
             _lcd_4bit_send_enable_signal 2668                              ___awmod@sign 0006  
                                     prod 0FF3                                       wreg 0FE8  
             lcd_send_4bits@_data_command 000D                          ??_app_initialize 0019  
                                    l1112 2274                                      l1120 13F0  
                                    l1131 14EE                                      ?_abs 0007  
                                    l1108 221E                                      l1117 13A2  
                                    l1151 2666                                      l1119 13AA  
                                    l1144 2550                                      l1073 1664  
                                    l1138 19F6                                      l1163 1CD2  
                                    l1171 2626                                      l2300 1D44  
                                    l1148 265E                                      l2310 1D70  
                                    l2302 1D4A                                      l1174 2736  
                                    l1086 259C                                      l2304 1D60  
                                    l2312 1D76                                      l2320 1F06  
                                    l2400 1370                                      l2314 1D86  
                                    l2306 1D68                                      l2330 1F32  
                                    l2322 1F0A                                      l2410 13C2  
                                    l2402 1380                                      l2316 1D8E  
                                    l2308 1D6A                                      l2340 1F6A  
                                    l2332 1F3A                                      l2324 1F18  
                                    l2260 1C38                                      l2420 13F8  
                                    l2412 13C8                                      l2404 1388  
                                    l2500 1908                                      l3220 1028  
                                    l2350 1FA4                                      l2342 1F80  
                                    l2334 1F4C                                      l2326 1F20  
                                    l2262 1C56                                      l2254 1C0A  
                                    l2270 25F0                                      l2430 1446  
                                    l2422 1402                                      l2414 13D8  
                                    l2406 1396                                      l2510 1960  
                                    l2502 1914                                      l3302 12E4  
                                    l3230 1074                                      l3222 102C  
                                    l3400 1790                                      l2600 1C06  
                                    l2280 1CE6                                      l2352 1FAC  
                                    l2344 1F88                                      l2336 1F54  
                                    l2328 1F24                                      l2264 1C8C  
                                    l2256 1C1C                                      l2272 2602  
                                    l2360 2216                                      l2440 14B8  
                                    l2424 1408                                      l2432 1462  
                                    l2416 13E4                                      l2408 13B2  
                                    l2512 19A4                                      l2504 1918  
                                    l2520 19CE                                      l3304 131E  
                                    l3240 10B0                                      l3232 1084  
                                    l3224 1048                                      l2530 23E0  
                                    l2450 243A                                      l2290 1D0C  
                                    l2282 1CEE                                      l2346 1F8E  
                                    l2338 1F5C                                      l2370 2628  
                                    l2258 1C2E                                      l2274 2606  
                                    l2362 222A                                      l2442 14BE  
                                    l2434 147C                                      l2426 143A  
                                    l2418 13EC                                      l2506 1928  
                                    l2610 2304                                      l3306 133C  
                                    l3250 110E                                      l3242 10C8  
                                    l3234 1094                                      l3226 1060  
                                    l3218 1028                                      l2380 17E2  
                                    l2532 2402                                      l2460 2668  
                                    l2452 2450                                      l2540 235C  
                                    l2700 163C                                      l2292 1D14  
                                    l2284 1CF2                                      l2276 1CD4  
                                    l2348 1F94                                      l2372 2642  
                                    l2268 25E4                                      l2364 223E  
                                    l2356 21FC                                      l2444 14CE  
                                    l2436 148E                                      l2428 1440  
                                    l2516 19BC                                      l2508 1944  
                                    l2612 2358                                      l2604 22EA  
                                    l2620 1FC0                                      l3260 1156  
                                    l3252 1124                                      l3244 10D8  
                                    l3236 1098                                      l3228 1070  
                                    l2382 17EA                                      l2390 18D2  
                                    l2374 17AA                                      l2534 240A  
                                    l2526 23CE                                      l2462 2668  
                                    l2454 2468                                      l2542 235C  
                                    l2702 1648                                      l2294 1D26  
                                    l2286 1D00                                      l2278 1CD8  
                                    l2366 2242                                      l2358 220A  
                                    l2438 14A8                                      l2710 2562  
                                    l2606 22EA                                      l2622 1FD8  
                                    l2630 205A                                      l3270 1192  
                                    l3262 116E                                      l3254 113C  
                                    l3246 10EA                                      l3238 109C  
                                    l2480 16A6                                      l2472 1666  
                                    l2384 184C                                      l2376 17AE  
                                    l2536 2436                                      l2528 23CE  
                                    l2720 20FE                                      l2464 267C  
                                    l2456 2482                                      l2448 243A  
                                    l2544 236E                                      l2704 164E  
                                    l2296 1D2E                                      l2288 1D08  
                                    l2368 2260                                      l2552 2504  
                                    l2712 256A                                      l2608 22FC  
                                    l2624 1FF0                                      l2616 1FB6  
                                    l2800 20C8                                      l3280 11EC  
                                    l3272 11AA                                      l3264 1176  
                                    l3256 1144                                      l3248 10FC  
                                    l2482 1708                                      l2474 166A  
                                    l2378 17C0                                      l2722 2106  
                                    l2466 2684                                      l2546 2376  
                                    l2570 1B44                                      l2562 1B06  
                                    l2706 1652                                      l2298 1D36  
                                    l2554 2510                                      l2714 2572  
                                    l2626 2008                                      l2618 1FBA  
                                    l2802 20FA                                      l3282 11FC  
                                    l3290 1220                                      l3274 11BA  
                                    l3266 117A                                      l3258 1154  
                                    l2476 167C                                      l2388 18A8  
                                    l2732 2124                                      l2724 2118  
                                    l2468 269A                                      l2548 23CA  
                                    l2580 1B66                                      l2564 1B0A  
                                    l2556 252C                                      l2716 258E  
                                    l2708 2552                                      l2900 1A38  
                                    l2628 2020                                      l3292 1254  
                                    l3284 11FE                                      l3276 11CC  
                                    l3268 117E                                      l2486 1764  
                                    l2478 169E                                      l2734 2134  
                                    l2750 217A                                      l2726 2120  
                                    l2590 1BB4                                      l2582 1B76  
                                    l2566 1B1C                                      l2398 135C  
                                    l2558 2548                                      l2910 1A52  
                                    l3294 1280                                      l3286 1200  
                                    l3278 11E4                                      l2488 17A6  
                                    l2744 214A                                      l2736 2136  
                                    l2592 1BC4                                      l2584 1B84  
                                    l2576 1B48                                      l2568 1B24  
                                    l2680 150E                                      l2496 18D6  
                                    l2760 1DC0                                      l2920 1A7A  
                                    l2912 1A62                                      l3296 12AC  
                                    l3288 1218                                      l2770 26F0  
                                    l2746 2168                                      l2738 2146  
                                    l2594 1BD4                                      l2586 1B94  
                                    l2578 1B64                                      l2682 151A  
                                    l2498 18FA                                      l2762 1DE2  
                                    l2754 1D98                                      l2930 1AF0  
                                    l2922 1AA0                                      l2914 1A76  
                                    l2906 1A3C                                      l3394 12F8  
                                    l3298 12C8                                      l2772 270C  
                                    l2748 216A                                      l2596 1BE4  
                                    l2588 1BA4                                      l2940 2716  
                                    l2692 15C2                                      l2676 14F0  
                                    l2860 1E50                                      l2764 1DEA  
                                    l2756 1D9C                                      l2932 1AF2  
                                    l2924 1AB0                                      l2908 1A50  
                                    l3396 2034                                      l2780 25B0  
                                    l3398 18BC                                      l2598 1BF4  
                                    l2942 2722                                      l2950 26B6  
                                    l2694 15EE                                      l2686 1550  
                                    l2870 1E7E                                      l2862 1E54  
                                    l2766 1E4C                                      l2758 1DAE  
                                    l2926 1ADE                                      l2934 1B02  
                                    l2782 25B8                                      l2790 205E  
                                    ?_pad 0011                                      l2952 217E  
                                    l2960 2276                                      l2944 269E  
                                    l2688 15A8                                      l2880 1EE6  
                                    l2872 1E9A                                      l2864 1E60  
                                    l2928 1AE0                                      l2784 25E0  
                                    l2776 259E                                      l2792 2070  
                                    l2954 2192                                      l2970 22AE  
                                    l2962 227E                                      l2938 2716  
                                    l2946 26A6                                      l2698 1608  
                                    l2874 1EA8                                      l2882 1F02  
                                    l2866 1E64                                      l2890 1A1A  
                                    l2778 259E                                      l2794 2078  
                                    l2956 21CA                                      l2980 22DA  
                                    l2972 22B4                                      l2964 2290  
                                    l2948 26B4                                      l2876 1EC8  
                                    l2868 1E76                                      l2892 1A2C  
                                    l2796 2092                                      l2788 205E  
                                    l2958 21CE                                      l2974 22CA  
                                    l2966 2298                                      l2878 1EE4  
                                    l2894 1A34                                      l2886 19F8  
                                    l2798 20C4                                      l2976 22D2  
                                    l2968 22A0                                      l2888 1A08  
                                    l2978 22D4                                      STR_1 1023  
                                    STR_2 1023                                      STR_4 1011  
                                    u2000 1E76                                      u2001 1E72  
                                    u2010 1F02                                      u2011 1EFE  
                                    u2100 2290                                      u1300 1D26  
                                    u2020 1A1A                                      u2101 228C  
                                    u1301 1D22                                      u2021 1A16  
                                    u2110 22AE                                      u1310 1D44  
                                    u1230 1C1C                                      u2030 1A2C  
                                    u2111 22AA                                      u1311 1D40  
                                    u1231 1C18                                      u2031 1A28  
                                    u2120 22CA                                      u1320 1D60  
                                    u1240 1C2E                                      u1400 220A  
                                    u2040 1A62                                      u2121 22C6  
                                    u1321 1D5C                                      u1241 1C2A  
                                    u1401 2206                                      u2041 1A5E  
                                    u1330 1D86                                      u1250 1C56  
                                    u1410 2260                                      u2050 1AB0  
                                    u1331 1D82                                      u1251 1C52  
                                    u1411 225C                                      u2051 1AAC  
                                    u1340 1F18                                      u1420 2642  
                                    u1260 1C8C                                      u1500 1396  
                                    u2060 1AF0                                      u1341 1F14  
                                    u1421 263E                                      u1261 1C88  
                                    u1501 1392                                      u2061 1AEC  
                                    _LATA 0F89                                      u1430 17C0  
                                    u1350 1F32                                      u1270 2626  
                                    u1510 13C2                                      u2070 1B02  
                                    _LATB 0F8A                                      u1431 17BC  
                                    u1351 1F2E                                      u1271 2622  
                                    u1511 13BE                                      u2071 1AFE  
                                    _LATC 0F8B                                      u1440 17E2  
                                    u2080 26C8                                      u1280 1CE6  
                                    u1360 1F4C                                      u1520 13D8  
                                    u2400 10FC                                      _LATD 0F8C  
                                    u1441 17DE                                      u2081 26C4  
                                    u1281 1CE2                                      u1361 1F48  
                                    u1521 13D4                                      u2401 10F8  
                                    _LATE 0F8D                                      u2090 21F2  
                                    u1610 177C                                      u1290 1D00  
                                    u1370 1F6A                                      u1530 147C  
                                    u2410 110E                                      u2091 21EE  
                                    u1611 1776                                      u1291 1CFC  
                                    u1371 1F66                                      u1531 1478  
                                    u2411 110A                                      u1620 177E  
                                    u1604 1728                                      u1700 1B1C  
                                    u1380 1F80                                      u1540 148E  
                                    u2420 1120                                      u1605 1724  
                                    u1701 1B18                                      u1381 1F7C  
                                    u1541 148A                                      u2421 111C  
                                    u1454 180A                                      u1710 1B76  
                                    u1390 1FA4                                      u1550 14A8  
                                    u1470 136C                                      u1630 18FA  
                                    u2430 11BA                                      u1455 1806  
                                    u1711 1B72                                      u1391 1FA0  
                                    u1551 14A4                                      u1471 1366  
                                    u1631 18F6                                      u2431 11B6  
                                    u1464 186C                                      u1800 1664  
                                    u1560 14B8                                      u1480 136E  
                                    u1640 1944                                      u1720 22FC  
                                    u2440 11CC                                      u1465 1868  
                                    u1801 1660                                      u1561 14B4  
                                    u1641 1940                                      u1721 22F8  
                                    u2441 11C8                                      u1570 167C  
                                    u1810 2118                                      u1490 1380  
                                    u1650 1960                                      u1571 1678  
                                    u1811 2114                                      u2507 267E  
                                    u1491 137C                                      u1651 195C  
                                    u1580 169E                                      u1660 23E0  
                                    u1820 2146                                      u1900 20BC  
                                    u2380 10D8                                      u1581 169A  
                                    u1661 23DC                                      u1821 2142  
                                    u2381 10D4                                      u1670 2402  
                                    u1830 217A                                      u1910 20EA  
                                    u2390 10EA                                      u1671 23FE  
                                    u1831 2176                                      u2391 10E6  
                                    u1680 236E                                      u1760 150A  
                                    u1840 1DAE                                      u1920 20FA  
                                    u1681 236A                                      u1761 1506  
                                    u1841 1DAA                                      u1921 20F6  
                                    u2457 1052                                      u1594 16C6  
                                    u1770 154C                                      u1690 2548  
                                    u1850 1DC0                                      u1595 16C2  
                                    u1771 1548                                      u1691 2544  
                                    u1851 1DBC                                      u1907 20B2  
                                    u2467 10BA                                      u1780 15BE  
                                    u1860 1DE2                                      u1781 15BA  
                                    u1861 1DDE                                      u1917 20E0  
                                    u2477 119C                                      u1790 1604  
                                    u1791 1600                                      u2487 1346  
                                    u1880 25B0                                      u2497 1B7C  
                                    u1881 25AC                                      u1874 1E38  
                                    u1890 2070                                      u1875 1E34  
                                    u1891 206C                                      u1991 1E5A  
           ??_lcd_4bit_send_enable_signal 000D                                      abs@a 0007  
                                    _dbuf 0086            gpio_pin_read_logic@_pin_config 0001  
                                    _main 1028                                      _dtoa 135C  
                                    _prec 0065                                      pad@i 0018  
                                    pad@p 0015                                      fsr0h 0FEA  
                                    fsr1h 0FE2                                      indf0 0FEF  
                                    fsr2h 0FDA                                      fsr0l 0FE9  
                                    indf1 0FE7                                      indf2 0FDF  
                                    fsr1l 0FE1                                      pad@w 001A  
                                    fsr2l 0FD9                                      prodh 0FF4  
                                    prodl 0FF3                                      start 0000  
                            ___param_bank 0000                     _lcd_4bit_send_command 235C  
                                   ??_abs 0009                      _gpio_pin_write_logic 17AA  
                                   ??_pad 0017                                     ?_main 0001  
                                   ?_dtoa 001C                           __end_of___awdiv 1D98  
                         __end_of___awmod 1FB6                           ___awdiv@divisor 0003  
                            main@counter2 0062                              main@counter3 0061  
                         __end_of___lwdiv 22EA                           ___awdiv@counter 0005  
                            vfpfcnvrt@fmt 002B                                     _PORTA 0F80  
                                   _PORTB 0F81                                     _PORTC 0F82  
                                   _PORTD 0F83                                     _PORTE 0F84  
                                   _TRISA 0F92                                     _TRISB 0F93  
                                   _TRISC 0F94                                     _TRISD 0F95  
                                   _TRISE 0F96                 lcd_4bit_set_cursor@coulmn 0016  
                ?_convert_short_to_string 0053                  __end_of_keypad_get_value 1B06  
                                   _lcd_1 0077                                     _flags 006B  
                                   _key_1 00CA                                     _fputc 1C0A  
                                   _fputs 25E4                                     pad@fp 0011  
                                   _width 0063                                     _putch 2736  
                                   dtoa@d 001E                                     dtoa@i 0026  
                                   dtoa@p 0022                                     dtoa@s 0028  
                                   dtoa@w 0024                                     tablat 0FF5  
                                   status 0FD8                           __end_of_sprintf 259E  
       keypad_get_value@l_columns_counter 0015            ?_gpio_pin_direction_initialize 0001  
                         __initialization 24A2                         ??_clearDataArrays 0004  
                     keypad_get_value@ret 0011                              __end_of_main 135C  
                            __end_of_dtoa 14F0                     ?_gpio_pin_write_logic 0001  
                gpio_pin_read_logic@logic 0003                             _lat_registers 00B6  
                                  ??_main 005F                                    ??_dtoa 0020  
                           __activetblptr 0002                                    ?_fputc 0001  
                                  ?_fputs 000A                          ___awdiv@dividend 0001  
                                  ?_putch 0001                 keypad_get_value@l_counter 0013  
        __end_of_lcd_4bit_send_string_pos 20FE                     __end_of_Number_return 21FC  
                  ?_lcd_4bit_send_command 000F                              vfprintf@cfmt 003D  
                                  ___wmul 26F0                                 ??___awdiv 0005  
                               ??___awmod 0005                                 ??___lwdiv 0005  
                          Number_return@i 000F                                    _memset 14F0  
                                  clear_0 24E8                                    clear_1 24F4  
                        ___awdiv@quotient 0007                           ___awmod@divisor 0003  
                                  isa$std 0001                                    _result 00A6  
                         ___awmod@counter 0005                                    pad@buf 0013  
                                  dtoa@fp 001C                                    fputc@c 0001  
                                  fputs@c 000E                                    fputs@i 000F  
                            __pdataCOMRAM 0077                                    fputs@s 000A  
                            __mediumconst 0000                                    tblptrh 0FF7  
                                  tblptrl 0FF6                                    tblptru 0FF8  
                                  putch@c 0001                          __end_of_vfprintf 2552  
                             _FirstNumber 0072                                 ??_sprintf 0045  
                              __accesstop 0080                   __end_of__initialization 24FA  
                           ___rparam_used 0001                          ??_lcd_send_4bits 000E  
                 _lcd_4bit_send_char_data 22EA                    ??_gpio_pin_write_logic 0004  
                          __pcstackCOMRAM 0001                              __pidataBANK0 26CA  
                           __end_of_fputc 1CD4                             __end_of_fputs 2628  
            convert_short_to_string@F3198 0080                             __end_of_putch 2738  
                lcd_4bit_send_command@lcd 000F                  lcd_4bit_send_command@ret 0012  
gpio_pin_direction_initialize@_pin_config 0001                               _KeypadValue 0076  
            convert_short_to_string@value 0053              ?_lcd_4bit_send_char_data_pos 001A  
                                 ??_fputc 0005                                   ??_fputs 000E  
                                 ??_putch 0001                                __pbssBANK0 0080  
      convert_short_to_string@DataCounter 005E                                   ?___wmul 0001  
                                 ?_memset 0001                 ?_lcd_4bit_send_string_pos 001A  
                       ?_keypad_get_value 000B                        ??_keypad_get_value 000F  
                         _clearDataArrays 269E                            _tris_registers 00C0  
               ??_lcd_4bit_send_char_data 0012    lcd_4bit_initialize@l_data_pins_counter 0017  
                     clearDataArrays@size 0003                                   __Hparam 0000  
                                 __Lparam 0000                       _gpio_pin_initialize 23CE  
                                 ___awdiv 1CD4                       _gpio_pin_read_logic 1D98  
                                 ___awmod 1F06                        Number_return@count 0009  
                                 ___lwdiv 2276                         __end_of_btn_value 1011  
                               ?_vfprintf 0037          keypad_initialize@columns_counter 0015  
                            __psmallconst 1000                                   __pcinit 24A2  
                                 __ramtop 1000                                   __ptext0 1028  
                                 __ptext1 205E                                   __ptext2 259E  
                                 __ptext3 1FB6                                   __ptext4 22EA  
                                 __ptext5 19F8                                   __ptext6 1D98  
                                 __ptext7 1E50                                   __ptext8 2552  
                                 __ptext9 2504           ??_gpio_pin_direction_initialize 0003  
                                 _counter 006C                          ___awmod@dividend 0001  
                                 _number1 0069                                   _number2 0067  
                    ?_gpio_pin_initialize 000B                      ?_gpio_pin_read_logic 0001  
                                 _sprintf 2552                      end_of_initialization 24FA  
                       lcd_send_4bits@lcd 000B                         lcd_send_4bits@ret 000E  
                                 fputc@fp 0003                                   memset@c 0003  
                                 memset@k 0009                                   memset@n 0005  
                                 memset@s 000B                             __Lmediumconst 0000  
                                 fputs@fp 000C                   ??_lcd_4bit_send_command 0012  
                       __end_of_vfpfcnvrt 19F8                                   postdec1 0FE5  
                                 postdec2 0FDD                                   postinc0 0FEE  
                                 postinc1 0FE6                                   postinc2 0FDE  
                        vfpfcnvrt@convarg 0031                                ??_vfprintf 003D  
                     _lcd_4bit_initialize 1B06           __end_of_lcd_4bit_send_char_data 235C  
            keypad_get_value@column_logic 0012                lcd_4bit_send_char_data@lcd 000F  
              lcd_4bit_send_char_data@ret 0012                   __end_of_clearDataArrays 26CA  
                   ??_gpio_pin_initialize 000D                     ??_gpio_pin_read_logic 0005  
         lcd_4bit_send_char_data_pos@data 001E                      ?_lcd_4bit_initialize 0013  
                     _lcd_4bit_set_cursor 1FB6               lcd_4bit_send_string_pos@col 001D  
             lcd_4bit_send_string_pos@lcd 001A               lcd_4bit_send_string_pos@ret 0020  
             lcd_4bit_send_string_pos@row 001C               lcd_4bit_send_string_pos@str 001E  
                   keypad_get_value@value 000D                               vfpfcnvrt@ap 002D  
                             vfpfcnvrt@cp 0035                               vfpfcnvrt@fp 0029  
                          __end_of___wmul 2716                             __pidataCOMRAM 2730  
                          __end_of_memset 1666                       start_initialization 24A2  
            ?_lcd_4bit_send_enable_signal 000B                      ?_lcd_4bit_set_cursor 0013  
                             __end_of_abs 2668                               __end_of_pad 2276  
   __end_of_gpio_pin_direction_initialize 17AA             _gpio_pin_direction_initialize 1666  
                   ??_lcd_4bit_initialize 0015                   _convert_short_to_string 1E50  
                             vfprintf@fmt 0039                                  ??___wmul 0005  
                             __pdataBANK0 00AC                                  ??_memset 0007  
                              memset@dest 0001              lcd_4bit_send_command@command 0011  
                             __pbssCOMRAM 0063                     ??_lcd_4bit_set_cursor 0017  
                        ?_clearDataArrays 0001        convert_short_to_string@Temp_String 0057  
                          _app_initialize 2716                          ___lwdiv@dividend 0001  
                               _dtoa$1101 0020             keypad_initialize@rows_counter 0014  
                           _Number_return 217E           gpio_pin_write_logic@_pin_config 0001  
                                ?___awdiv 0001                                  ?___awmod 0001  
                        clearDataArrays@i 0004                                  ?___lwdiv 0001  
              convert_short_to_string@ret 005D                convert_short_to_string@str 0055  
               gpio_pin_write_logic@logic 0003                                 _btn_value 1001  
                             __smallconst 1000                        clearDataArrays@arr 0001  
                            _SecondNumber 006E                          ___lwdiv@quotient 0005  
                                ?_sprintf 003F                 ??_convert_short_to_string 0057  
                  __end_of_app_initialize 2730                            ___wmul@product 0005  
           __end_of_lcd_4bit_send_command 23CE                            ?_Number_return 0007  
                               _operation 006D          gpio_pin_direction_initialize@ret 0009  
                               _vfpfcnvrt 18D6                  _lcd_4bit_send_string_pos 205E  
                       ___wmul@multiplier 0001            lcd_4bit_send_char_data_pos@col 001D  
          lcd_4bit_send_char_data_pos@lcd 001A            lcd_4bit_send_char_data_pos@ret 001F  
          lcd_4bit_send_char_data_pos@row 001C                    gpio_pin_initialize@ret 000E  
     __end_of_lcd_4bit_send_char_data_pos 25E4               _lcd_4bit_send_char_data_pos 259E  
                 gpio_pin_write_logic@ret 000A                  ?_lcd_4bit_send_char_data 000F  
                               copy_data0 24B6                                 copy_data1 24D6  
                       _keypad_initialize 20FE                           ?_app_initialize 0001  
                      ?_keypad_initialize 000F                    gpio_pin_read_logic@ret 000A  
           ??_lcd_4bit_send_char_data_pos 001F                                  __Hrparam 0000  
                              vfprintf@ap 003B                                  __Lrparam 0000  
                              vfprintf@fp 0037                       ??_keypad_initialize 0011  
         __end_of_convert_short_to_string 1F06                    lcd_4bit_set_cursor@lcd 0013  
                  lcd_4bit_set_cursor@ret 0019                                ?_vfpfcnvrt 0029  
                  lcd_4bit_set_cursor@row 0015               __end_of_gpio_pin_initialize 243A  
             __end_of_gpio_pin_read_logic 1E50            gpio_pin_initialize@_pin_config 000B  
             keypad_get_value@_keypad_obj 000B                                sprintf@fmt 0041  
                         ___lwdiv@divisor 0003                           ___lwdiv@counter 0007  
               __end_of_keypad_initialize 217E                                  __ptext10 18D6  
                                __ptext11 135C                                  __ptext20 269E  
                                __ptext12 21FC                                  __ptext21 2716  
                                __ptext13 25E4                                  __ptext30 2276  
                                __ptext22 1B06                                  __ptext14 1C0A  
                                __ptext31 217E                                  __ptext23 235C  
                                __ptext15 2736                                  __ptext32 26F0  
                                __ptext24 243A                                  __ptext16 2628  
                                __ptext25 2668                                  __ptext17 1F06  
                                __ptext26 20FE                                  __ptext18 1CD4  
                                __ptext27 23CE                                  __ptext19 14F0  
                                __ptext28 17AA                                  __ptext29 1666  
                        Number_return@arr 0007                          Number_return@num 000D  
                         ??_Number_return 000A                          _keypad_get_value 19F8  
                                isa$xinst 0000                                  _vfprintf 2504  
                          _lcd_send_4bits 243A               __end_of_lcd_4bit_initialize 1C0A  
          keypad_get_value@l_rows_counter 0014              __end_of_gpio_pin_write_logic 18D6  
                               sprintf@ap 0045            lcd_4bit_send_enable_signal@lcd 000B  
          lcd_4bit_send_enable_signal@ret 000D              keypad_initialize@_keypad_obj 000F  
                  __end_of_lcd_send_4bits 24A2                               ??_vfpfcnvrt 002F  
             __end_of_lcd_4bit_set_cursor 205E                                  sprintf@f 0047  
                                sprintf@s 003F                            _port_registers 00AC  
             lcd_4bit_send_char_data@data 0011                ??_lcd_4bit_send_string_pos 0020  
                  lcd_4bit_initialize@lcd 0013                    lcd_4bit_initialize@ret 0018  
